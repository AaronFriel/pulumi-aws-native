// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.Lambda.Outputs
{

    [OutputType]
    public sealed class EventSourceMappingProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-batchsize
        /// </summary>
        public readonly int? BatchSize;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-bisectbatchonfunctionerror
        /// </summary>
        public readonly bool? BisectBatchOnFunctionError;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-destinationconfig
        /// </summary>
        public readonly Outputs.EventSourceMappingDestinationConfig? DestinationConfig;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-enabled
        /// </summary>
        public readonly bool? Enabled;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-eventsourcearn
        /// </summary>
        public readonly string EventSourceArn;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-functionname
        /// </summary>
        public readonly string FunctionName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumbatchingwindowinseconds
        /// </summary>
        public readonly int? MaximumBatchingWindowInSeconds;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumrecordageinseconds
        /// </summary>
        public readonly int? MaximumRecordAgeInSeconds;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-maximumretryattempts
        /// </summary>
        public readonly int? MaximumRetryAttempts;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-parallelizationfactor
        /// </summary>
        public readonly int? ParallelizationFactor;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventsourcemapping.html#cfn-lambda-eventsourcemapping-startingposition
        /// </summary>
        public readonly string? StartingPosition;

        [OutputConstructor]
        private EventSourceMappingProperties(
            int? BatchSize,

            bool? BisectBatchOnFunctionError,

            Outputs.EventSourceMappingDestinationConfig? DestinationConfig,

            bool? Enabled,

            string EventSourceArn,

            string FunctionName,

            int? MaximumBatchingWindowInSeconds,

            int? MaximumRecordAgeInSeconds,

            int? MaximumRetryAttempts,

            int? ParallelizationFactor,

            string? StartingPosition)
        {
            this.BatchSize = BatchSize;
            this.BisectBatchOnFunctionError = BisectBatchOnFunctionError;
            this.DestinationConfig = DestinationConfig;
            this.Enabled = Enabled;
            this.EventSourceArn = EventSourceArn;
            this.FunctionName = FunctionName;
            this.MaximumBatchingWindowInSeconds = MaximumBatchingWindowInSeconds;
            this.MaximumRecordAgeInSeconds = MaximumRecordAgeInSeconds;
            this.MaximumRetryAttempts = MaximumRetryAttempts;
            this.ParallelizationFactor = ParallelizationFactor;
            this.StartingPosition = StartingPosition;
        }
    }
}
