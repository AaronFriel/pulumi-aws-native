// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.MediaPackage.Outputs
{

    [OutputType]
    public sealed class OriginEndpointHlsManifest
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-admarkers
        /// </summary>
        public readonly string? AdMarkers;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-adtriggers
        /// </summary>
        public readonly ImmutableArray<string> AdTriggers;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-adsondeliveryrestrictions
        /// </summary>
        public readonly string? AdsOnDeliveryRestrictions;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-id
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-includeiframeonlystream
        /// </summary>
        public readonly bool? IncludeIframeOnlyStream;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-manifestname
        /// </summary>
        public readonly string? ManifestName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-playlisttype
        /// </summary>
        public readonly string? PlaylistType;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-playlistwindowseconds
        /// </summary>
        public readonly int? PlaylistWindowSeconds;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-programdatetimeintervalseconds
        /// </summary>
        public readonly int? ProgramDateTimeIntervalSeconds;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-mediapackage-originendpoint-hlsmanifest.html#cfn-mediapackage-originendpoint-hlsmanifest-url
        /// </summary>
        public readonly string? Url;

        [OutputConstructor]
        private OriginEndpointHlsManifest(
            string? AdMarkers,

            ImmutableArray<string> AdTriggers,

            string? AdsOnDeliveryRestrictions,

            string Id,

            bool? IncludeIframeOnlyStream,

            string? ManifestName,

            string? PlaylistType,

            int? PlaylistWindowSeconds,

            int? ProgramDateTimeIntervalSeconds,

            string? Url)
        {
            this.AdMarkers = AdMarkers;
            this.AdTriggers = AdTriggers;
            this.AdsOnDeliveryRestrictions = AdsOnDeliveryRestrictions;
            this.Id = Id;
            this.IncludeIframeOnlyStream = IncludeIframeOnlyStream;
            this.ManifestName = ManifestName;
            this.PlaylistType = PlaylistType;
            this.PlaylistWindowSeconds = PlaylistWindowSeconds;
            this.ProgramDateTimeIntervalSeconds = ProgramDateTimeIntervalSeconds;
            this.Url = Url;
        }
    }
}
