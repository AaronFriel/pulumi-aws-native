// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.ImageBuilder.Outputs
{

    [OutputType]
    public sealed class InfrastructureConfigurationProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instanceprofilename
        /// </summary>
        public readonly string InstanceProfileName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-instancetypes
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-keypair
        /// </summary>
        public readonly string? KeyPair;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-logging
        /// </summary>
        public readonly Union<System.Text.Json.JsonElement, string>? Logging;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-securitygroupids
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroupIds;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-snstopicarn
        /// </summary>
        public readonly string? SnsTopicArn;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-subnetid
        /// </summary>
        public readonly string? SubnetId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-tags
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Tags;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-imagebuilder-infrastructureconfiguration.html#cfn-imagebuilder-infrastructureconfiguration-terminateinstanceonfailure
        /// </summary>
        public readonly bool? TerminateInstanceOnFailure;

        [OutputConstructor]
        private InfrastructureConfigurationProperties(
            string? Description,

            string InstanceProfileName,

            ImmutableArray<string> InstanceTypes,

            string? KeyPair,

            Union<System.Text.Json.JsonElement, string>? Logging,

            string Name,

            ImmutableArray<string> SecurityGroupIds,

            string? SnsTopicArn,

            string? SubnetId,

            ImmutableDictionary<string, string>? Tags,

            bool? TerminateInstanceOnFailure)
        {
            this.Description = Description;
            this.InstanceProfileName = InstanceProfileName;
            this.InstanceTypes = InstanceTypes;
            this.KeyPair = KeyPair;
            this.Logging = Logging;
            this.Name = Name;
            this.SecurityGroupIds = SecurityGroupIds;
            this.SnsTopicArn = SnsTopicArn;
            this.SubnetId = SubnetId;
            this.Tags = Tags;
            this.TerminateInstanceOnFailure = TerminateInstanceOnFailure;
        }
    }
}
