// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.EKS.Outputs
{

    [OutputType]
    public sealed class NodegroupProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-amitype
        /// </summary>
        public readonly string? AmiType;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-clustername
        /// </summary>
        public readonly string ClusterName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-disksize
        /// </summary>
        public readonly double? DiskSize;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-forceupdateenabled
        /// </summary>
        public readonly bool? ForceUpdateEnabled;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-instancetypes
        /// </summary>
        public readonly ImmutableArray<string> InstanceTypes;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-labels
        /// </summary>
        public readonly Union<System.Text.Json.JsonElement, string>? Labels;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-noderole
        /// </summary>
        public readonly string NodeRole;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-nodegroupname
        /// </summary>
        public readonly string? NodegroupName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-releaseversion
        /// </summary>
        public readonly string? ReleaseVersion;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-remoteaccess
        /// </summary>
        public readonly Outputs.NodegroupRemoteAccess? RemoteAccess;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-scalingconfig
        /// </summary>
        public readonly Outputs.NodegroupScalingConfig? ScalingConfig;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-subnets
        /// </summary>
        public readonly ImmutableArray<string> Subnets;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-tags
        /// </summary>
        public readonly Union<System.Text.Json.JsonElement, string>? Tags;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eks-nodegroup.html#cfn-eks-nodegroup-version
        /// </summary>
        public readonly string? Version;

        [OutputConstructor]
        private NodegroupProperties(
            string? AmiType,

            string ClusterName,

            double? DiskSize,

            bool? ForceUpdateEnabled,

            ImmutableArray<string> InstanceTypes,

            Union<System.Text.Json.JsonElement, string>? Labels,

            string NodeRole,

            string? NodegroupName,

            string? ReleaseVersion,

            Outputs.NodegroupRemoteAccess? RemoteAccess,

            Outputs.NodegroupScalingConfig? ScalingConfig,

            ImmutableArray<string> Subnets,

            Union<System.Text.Json.JsonElement, string>? Tags,

            string? Version)
        {
            this.AmiType = AmiType;
            this.ClusterName = ClusterName;
            this.DiskSize = DiskSize;
            this.ForceUpdateEnabled = ForceUpdateEnabled;
            this.InstanceTypes = InstanceTypes;
            this.Labels = Labels;
            this.NodeRole = NodeRole;
            this.NodegroupName = NodegroupName;
            this.ReleaseVersion = ReleaseVersion;
            this.RemoteAccess = RemoteAccess;
            this.ScalingConfig = ScalingConfig;
            this.Subnets = Subnets;
            this.Tags = Tags;
            this.Version = Version;
        }
    }
}
