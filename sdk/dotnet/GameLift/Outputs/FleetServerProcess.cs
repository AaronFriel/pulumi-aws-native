// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.GameLift.Outputs
{

    [OutputType]
    public sealed class FleetServerProcess
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-serverprocess.html#cfn-gamelift-fleet-serverprocess-concurrentexecutions
        /// </summary>
        public readonly int ConcurrentExecutions;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-serverprocess.html#cfn-gamelift-fleet-serverprocess-launchpath
        /// </summary>
        public readonly string LaunchPath;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-gamelift-fleet-serverprocess.html#cfn-gamelift-fleet-serverprocess-parameters
        /// </summary>
        public readonly string? Parameters;

        [OutputConstructor]
        private FleetServerProcess(
            int ConcurrentExecutions,

            string LaunchPath,

            string? Parameters)
        {
            this.ConcurrentExecutions = ConcurrentExecutions;
            this.LaunchPath = LaunchPath;
            this.Parameters = Parameters;
        }
    }
}
