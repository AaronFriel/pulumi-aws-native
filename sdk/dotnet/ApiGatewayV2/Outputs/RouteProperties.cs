// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.ApiGatewayV2.Outputs
{

    [OutputType]
    public sealed class RouteProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apiid
        /// </summary>
        public readonly string ApiId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-apikeyrequired
        /// </summary>
        public readonly bool? ApiKeyRequired;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationscopes
        /// </summary>
        public readonly ImmutableArray<string> AuthorizationScopes;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizationtype
        /// </summary>
        public readonly string? AuthorizationType;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-authorizerid
        /// </summary>
        public readonly string? AuthorizerId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-modelselectionexpression
        /// </summary>
        public readonly string? ModelSelectionExpression;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-operationname
        /// </summary>
        public readonly string? OperationName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestmodels
        /// </summary>
        public readonly Union<System.Text.Json.JsonElement, string>? RequestModels;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-requestparameters
        /// </summary>
        public readonly Union<System.Text.Json.JsonElement, string>? RequestParameters;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routekey
        /// </summary>
        public readonly string RouteKey;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-routeresponseselectionexpression
        /// </summary>
        public readonly string? RouteResponseSelectionExpression;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-route.html#cfn-apigatewayv2-route-target
        /// </summary>
        public readonly string? Target;

        [OutputConstructor]
        private RouteProperties(
            string ApiId,

            bool? ApiKeyRequired,

            ImmutableArray<string> AuthorizationScopes,

            string? AuthorizationType,

            string? AuthorizerId,

            string? ModelSelectionExpression,

            string? OperationName,

            Union<System.Text.Json.JsonElement, string>? RequestModels,

            Union<System.Text.Json.JsonElement, string>? RequestParameters,

            string RouteKey,

            string? RouteResponseSelectionExpression,

            string? Target)
        {
            this.ApiId = ApiId;
            this.ApiKeyRequired = ApiKeyRequired;
            this.AuthorizationScopes = AuthorizationScopes;
            this.AuthorizationType = AuthorizationType;
            this.AuthorizerId = AuthorizerId;
            this.ModelSelectionExpression = ModelSelectionExpression;
            this.OperationName = OperationName;
            this.RequestModels = RequestModels;
            this.RequestParameters = RequestParameters;
            this.RouteKey = RouteKey;
            this.RouteResponseSelectionExpression = RouteResponseSelectionExpression;
            this.Target = Target;
        }
    }
}
