// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.OpsWorks.Outputs
{

    [OutputType]
    public sealed class AppProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-appsource
        /// </summary>
        public readonly Outputs.AppSource? AppSource;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-attributes
        /// </summary>
        public readonly ImmutableDictionary<string, string>? Attributes;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-datasources
        /// </summary>
        public readonly ImmutableArray<Outputs.AppDataSource> DataSources;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-domains
        /// </summary>
        public readonly ImmutableArray<string> Domains;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-enablessl
        /// </summary>
        public readonly bool? EnableSsl;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-environment
        /// </summary>
        public readonly ImmutableArray<Outputs.AppEnvironmentVariable> Environment;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-shortname
        /// </summary>
        public readonly string? Shortname;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-sslconfiguration
        /// </summary>
        public readonly Outputs.AppSslConfiguration? SslConfiguration;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-stackid
        /// </summary>
        public readonly string StackId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-opsworks-app.html#cfn-opsworks-app-type
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private AppProperties(
            Outputs.AppSource? AppSource,

            ImmutableDictionary<string, string>? Attributes,

            ImmutableArray<Outputs.AppDataSource> DataSources,

            string? Description,

            ImmutableArray<string> Domains,

            bool? EnableSsl,

            ImmutableArray<Outputs.AppEnvironmentVariable> Environment,

            string Name,

            string? Shortname,

            Outputs.AppSslConfiguration? SslConfiguration,

            string StackId,

            string Type)
        {
            this.AppSource = AppSource;
            this.Attributes = Attributes;
            this.DataSources = DataSources;
            this.Description = Description;
            this.Domains = Domains;
            this.EnableSsl = EnableSsl;
            this.Environment = Environment;
            this.Name = Name;
            this.Shortname = Shortname;
            this.SslConfiguration = SslConfiguration;
            this.StackId = StackId;
            this.Type = Type;
        }
    }
}
