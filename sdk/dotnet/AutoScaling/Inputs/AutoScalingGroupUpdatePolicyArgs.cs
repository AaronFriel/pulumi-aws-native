// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.AutoScaling.Inputs
{

    /// <summary>
    /// The UpdatePolicy for AutoScalingGroup resources.
    /// </summary>
    public sealed class AutoScalingGroupUpdatePolicyArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// To specify how AWS CloudFormation handles replacement updates for an Auto Scaling
        /// group, use the AutoScalingReplacingUpdate policy. This policy enables you to specify whether
        /// AWS CloudFormation replaces an Auto Scaling group with a new one or replaces only the
        /// instances in the Auto Scaling group.
        /// </summary>
        [Input("AutoScalingReplacingUpdate")]
        public Input<Inputs.AutoScalingGroupReplacingUpdateArgs>? AutoScalingReplacingUpdate { get; set; }

        /// <summary>
        /// To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group,
        /// use the AutoScalingRollingUpdate policy. Rolling updates enable you to specify whether AWS
        /// CloudFormation updates instances that are in an Auto Scaling group in batches or all at once.
        /// 
        /// *Important*: During a rolling update, some Auto Scaling processes might make changes to the
        /// Auto Scaling group before AWS CloudFormation completes the rolling update. These changes might
        /// cause the rolling update to fail. To prevent Auto Scaling from running processes during a
        /// rolling update, use the SuspendProcesses property. For more information, see
        /// [What are some recommended best practices for performing Auto Scaling group rolling updates?](https://aws.amazon.com/premiumsupport/knowledge-center/auto-scaling-group-rolling-updates/)
        /// 
        /// Be aware that, during stack update rollback operations, CloudFormation uses the UpdatePolicy
        /// configuration specified in the template before the current stack update operation. For
        /// example, suppose you have updated the MaxBatchSize in your stack template's UpdatePolicy from
        /// 1 to 10. You then perform a stack update, and that update fails and CloudFormation initiates
        /// an update rollback operation. In such a case, CloudFormation will use 1 as the maximum batch
        /// size, rather than 10. For this reason, we recommend you make changes to the UpdatePolicy
        /// configuration in a stack update separate from, and prior to, any updates to the
        /// AutoScalingGroup resource that are likely to trigger rolling updates.
        /// </summary>
        [Input("AutoScalingRollingUpdate")]
        public Input<Inputs.AutoScalingGroupRollingUpdateArgs>? AutoScalingRollingUpdate { get; set; }

        /// <summary>
        /// To specify how AWS CloudFormation handles updates for the MinSize, MaxSize, and
        /// DesiredCapacity properties when the AWS::AutoScaling::AutoScalingGroup resource has an
        /// associated scheduled action, use the AutoScalingScheduledAction policy.
        /// 
        /// With scheduled actions, the group size properties of an Auto Scaling group can change at any
        /// time. When you update a stack with an Auto Scaling group and scheduled action, AWS
        /// CloudFormation always sets the group size property values of your Auto Scaling group to the
        /// values that are defined in the AWS::AutoScaling::AutoScalingGroup resource of your template,
        /// even if a scheduled action is in effect.
        /// 
        /// If you do not want AWS CloudFormation to change any of the group size property values when you
        /// have a scheduled action in effect, use the AutoScalingScheduledAction update policy and set
        /// IgnoreUnmodifiedGroupSizeProperties to true to prevent AWS CloudFormation from changing the
        /// MinSize, MaxSize, or DesiredCapacity properties unless you have modified these values in your
        /// template.
        /// </summary>
        [Input("AutoScalingScheduledAction")]
        public Input<Inputs.AutoScalingGroupScheduledActionArgs>? AutoScalingScheduledAction { get; set; }

        public AutoScalingGroupUpdatePolicyArgs()
        {
        }
    }
}
