// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    [OutputType]
    public sealed class VolumeProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-autoenableio
        /// </summary>
        public readonly bool? AutoEnableIO;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-availabilityzone
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-encrypted
        /// </summary>
        public readonly bool? Encrypted;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-iops
        /// </summary>
        public readonly int? Iops;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-kmskeyid
        /// </summary>
        public readonly string? KmsKeyId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-multiattachenabled
        /// </summary>
        public readonly bool? MultiAttachEnabled;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-outpostarn
        /// </summary>
        public readonly string? OutpostArn;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-size
        /// </summary>
        public readonly int? Size;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-snapshotid
        /// </summary>
        public readonly string? SnapshotId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-tags
        /// </summary>
        public readonly ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-throughput
        /// </summary>
        public readonly int? Throughput;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-ebs-volume.html#cfn-ec2-ebs-volume-volumetype
        /// </summary>
        public readonly string? VolumeType;

        [OutputConstructor]
        private VolumeProperties(
            bool? AutoEnableIO,

            string AvailabilityZone,

            bool? Encrypted,

            int? Iops,

            string? KmsKeyId,

            bool? MultiAttachEnabled,

            string? OutpostArn,

            int? Size,

            string? SnapshotId,

            ImmutableArray<Pulumi.AwsNative.Outputs.Tag> Tags,

            int? Throughput,

            string? VolumeType)
        {
            this.AutoEnableIO = AutoEnableIO;
            this.AvailabilityZone = AvailabilityZone;
            this.Encrypted = Encrypted;
            this.Iops = Iops;
            this.KmsKeyId = KmsKeyId;
            this.MultiAttachEnabled = MultiAttachEnabled;
            this.OutpostArn = OutpostArn;
            this.Size = Size;
            this.SnapshotId = SnapshotId;
            this.Tags = Tags;
            this.Throughput = Throughput;
            this.VolumeType = VolumeType;
        }
    }
}
