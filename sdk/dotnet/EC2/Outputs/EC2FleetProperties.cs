// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    [OutputType]
    public sealed class EC2FleetProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy
        /// </summary>
        public readonly string? ExcessCapacityTerminationPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs
        /// </summary>
        public readonly ImmutableArray<Outputs.EC2FleetFleetLaunchTemplateConfigRequest> LaunchTemplateConfigs;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions
        /// </summary>
        public readonly Outputs.EC2FleetOnDemandOptionsRequest? OnDemandOptions;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances
        /// </summary>
        public readonly bool? ReplaceUnhealthyInstances;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions
        /// </summary>
        public readonly Outputs.EC2FleetSpotOptionsRequest? SpotOptions;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications
        /// </summary>
        public readonly ImmutableArray<Outputs.EC2FleetTagSpecification> TagSpecifications;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification
        /// </summary>
        public readonly Outputs.EC2FleetTargetCapacitySpecificationRequest TargetCapacitySpecification;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration
        /// </summary>
        public readonly bool? TerminateInstancesWithExpiration;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type
        /// </summary>
        public readonly string? Type;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom
        /// </summary>
        public readonly string? ValidFrom;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil
        /// </summary>
        public readonly string? ValidUntil;

        [OutputConstructor]
        private EC2FleetProperties(
            string? ExcessCapacityTerminationPolicy,

            ImmutableArray<Outputs.EC2FleetFleetLaunchTemplateConfigRequest> LaunchTemplateConfigs,

            Outputs.EC2FleetOnDemandOptionsRequest? OnDemandOptions,

            bool? ReplaceUnhealthyInstances,

            Outputs.EC2FleetSpotOptionsRequest? SpotOptions,

            ImmutableArray<Outputs.EC2FleetTagSpecification> TagSpecifications,

            Outputs.EC2FleetTargetCapacitySpecificationRequest TargetCapacitySpecification,

            bool? TerminateInstancesWithExpiration,

            string? Type,

            string? ValidFrom,

            string? ValidUntil)
        {
            this.ExcessCapacityTerminationPolicy = ExcessCapacityTerminationPolicy;
            this.LaunchTemplateConfigs = LaunchTemplateConfigs;
            this.OnDemandOptions = OnDemandOptions;
            this.ReplaceUnhealthyInstances = ReplaceUnhealthyInstances;
            this.SpotOptions = SpotOptions;
            this.TagSpecifications = TagSpecifications;
            this.TargetCapacitySpecification = TargetCapacitySpecification;
            this.TerminateInstancesWithExpiration = TerminateInstancesWithExpiration;
            this.Type = Type;
            this.ValidFrom = ValidFrom;
            this.ValidUntil = ValidUntil;
        }
    }
}
