// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.EC2.Outputs
{

    [OutputType]
    public sealed class NetworkInsightsAnalysisAnalysisRouteTableRoute
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-natgatewayid
        /// </summary>
        public readonly string? NatGatewayId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-networkinterfaceid
        /// </summary>
        public readonly string? NetworkInterfaceId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-origin
        /// </summary>
        public readonly string? Origin;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-transitgatewayid
        /// </summary>
        public readonly string? TransitGatewayId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-vpcpeeringconnectionid
        /// </summary>
        public readonly string? VpcPeeringConnectionId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationcidr
        /// </summary>
        public readonly string? DestinationCidr;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-destinationprefixlistid
        /// </summary>
        public readonly string? DestinationPrefixListId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-egressonlyinternetgatewayid
        /// </summary>
        public readonly string? EgressOnlyInternetGatewayId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-gatewayid
        /// </summary>
        public readonly string? GatewayId;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-networkinsightsanalysis-analysisroutetableroute.html#cfn-ec2-networkinsightsanalysis-analysisroutetableroute-instanceid
        /// </summary>
        public readonly string? InstanceId;

        [OutputConstructor]
        private NetworkInsightsAnalysisAnalysisRouteTableRoute(
            string? NatGatewayId,

            string? NetworkInterfaceId,

            string? Origin,

            string? TransitGatewayId,

            string? VpcPeeringConnectionId,

            string? destinationCidr,

            string? destinationPrefixListId,

            string? egressOnlyInternetGatewayId,

            string? gatewayId,

            string? instanceId)
        {
            this.NatGatewayId = NatGatewayId;
            this.NetworkInterfaceId = NetworkInterfaceId;
            this.Origin = Origin;
            this.TransitGatewayId = TransitGatewayId;
            this.VpcPeeringConnectionId = VpcPeeringConnectionId;
            DestinationCidr = destinationCidr;
            DestinationPrefixListId = destinationPrefixListId;
            EgressOnlyInternetGatewayId = egressOnlyInternetGatewayId;
            GatewayId = gatewayId;
            InstanceId = instanceId;
        }
    }
}
