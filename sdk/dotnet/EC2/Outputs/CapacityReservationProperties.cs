// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.EC2.Outputs
{

    [OutputType]
    public sealed class CapacityReservationProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-availabilityzone
        /// </summary>
        public readonly string AvailabilityZone;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ebsoptimized
        /// </summary>
        public readonly bool? EbsOptimized;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddate
        /// </summary>
        public readonly string? EndDate;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-enddatetype
        /// </summary>
        public readonly string? EndDateType;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-ephemeralstorage
        /// </summary>
        public readonly bool? EphemeralStorage;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancecount
        /// </summary>
        public readonly int InstanceCount;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancematchcriteria
        /// </summary>
        public readonly string? InstanceMatchCriteria;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instanceplatform
        /// </summary>
        public readonly string InstancePlatform;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-instancetype
        /// </summary>
        public readonly string InstanceType;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tagspecifications
        /// </summary>
        public readonly ImmutableArray<Outputs.CapacityReservationTagSpecification> TagSpecifications;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-capacityreservation.html#cfn-ec2-capacityreservation-tenancy
        /// </summary>
        public readonly string? Tenancy;

        [OutputConstructor]
        private CapacityReservationProperties(
            string AvailabilityZone,

            bool? EbsOptimized,

            string? EndDate,

            string? EndDateType,

            bool? EphemeralStorage,

            int InstanceCount,

            string? InstanceMatchCriteria,

            string InstancePlatform,

            string InstanceType,

            ImmutableArray<Outputs.CapacityReservationTagSpecification> TagSpecifications,

            string? Tenancy)
        {
            this.AvailabilityZone = AvailabilityZone;
            this.EbsOptimized = EbsOptimized;
            this.EndDate = EndDate;
            this.EndDateType = EndDateType;
            this.EphemeralStorage = EphemeralStorage;
            this.InstanceCount = InstanceCount;
            this.InstanceMatchCriteria = InstanceMatchCriteria;
            this.InstancePlatform = InstancePlatform;
            this.InstanceType = InstanceType;
            this.TagSpecifications = TagSpecifications;
            this.Tenancy = Tenancy;
        }
    }
}
