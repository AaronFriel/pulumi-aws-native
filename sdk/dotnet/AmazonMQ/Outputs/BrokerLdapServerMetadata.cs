// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.AmazonMQ.Outputs
{

    /// <summary>
    /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html
    /// </summary>
    [OutputType]
    public sealed class BrokerLdapServerMetadata
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-hosts
        /// </summary>
        public readonly ImmutableArray<string> Hosts;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-rolebase
        /// </summary>
        public readonly string RoleBase;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-rolename
        /// </summary>
        public readonly string? RoleName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-rolesearchmatching
        /// </summary>
        public readonly string RoleSearchMatching;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-rolesearchsubtree
        /// </summary>
        public readonly bool? RoleSearchSubtree;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-serviceaccountpassword
        /// </summary>
        public readonly string ServiceAccountPassword;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-serviceaccountusername
        /// </summary>
        public readonly string ServiceAccountUsername;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-userbase
        /// </summary>
        public readonly string UserBase;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-userrolename
        /// </summary>
        public readonly string? UserRoleName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-usersearchmatching
        /// </summary>
        public readonly string UserSearchMatching;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-amazonmq-broker-ldapservermetadata.html#cfn-amazonmq-broker-ldapservermetadata-usersearchsubtree
        /// </summary>
        public readonly bool? UserSearchSubtree;

        [OutputConstructor]
        private BrokerLdapServerMetadata(
            ImmutableArray<string> hosts,

            string roleBase,

            string? roleName,

            string roleSearchMatching,

            bool? roleSearchSubtree,

            string serviceAccountPassword,

            string serviceAccountUsername,

            string userBase,

            string? userRoleName,

            string userSearchMatching,

            bool? userSearchSubtree)
        {
            Hosts = hosts;
            RoleBase = roleBase;
            RoleName = roleName;
            RoleSearchMatching = roleSearchMatching;
            RoleSearchSubtree = roleSearchSubtree;
            ServiceAccountPassword = serviceAccountPassword;
            ServiceAccountUsername = serviceAccountUsername;
            UserBase = userBase;
            UserRoleName = userRoleName;
            UserSearchMatching = userSearchMatching;
            UserSearchSubtree = userSearchSubtree;
        }
    }
}
