// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsNative.S3.Inputs
{

    /// <summary>
    /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html
    /// </summary>
    public sealed class BucketRuleArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload
        /// </summary>
        [Input("AbortIncompleteMultipartUpload")]
        public Input<Inputs.BucketAbortIncompleteMultipartUploadArgs>? AbortIncompleteMultipartUpload { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate
        /// </summary>
        [Input("ExpirationDate")]
        public Input<string>? ExpirationDate { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays
        /// </summary>
        [Input("ExpirationInDays")]
        public Input<int>? ExpirationInDays { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id
        /// </summary>
        [Input("Id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays
        /// </summary>
        [Input("NoncurrentVersionExpirationInDays")]
        public Input<int>? NoncurrentVersionExpirationInDays { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition
        /// </summary>
        [Input("NoncurrentVersionTransition")]
        public Input<Inputs.BucketNoncurrentVersionTransitionArgs>? NoncurrentVersionTransition { get; set; }

        [Input("NoncurrentVersionTransitions")]
        private InputList<Inputs.BucketNoncurrentVersionTransitionArgs>? _NoncurrentVersionTransitions;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions
        /// </summary>
        public InputList<Inputs.BucketNoncurrentVersionTransitionArgs> NoncurrentVersionTransitions
        {
            get => _NoncurrentVersionTransitions ?? (_NoncurrentVersionTransitions = new InputList<Inputs.BucketNoncurrentVersionTransitionArgs>());
            set => _NoncurrentVersionTransitions = value;
        }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix
        /// </summary>
        [Input("Prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status
        /// </summary>
        [Input("Status", required: true)]
        public Input<string> Status { get; set; } = null!;

        [Input("TagFilters")]
        private InputList<Inputs.BucketTagFilterArgs>? _TagFilters;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters
        /// </summary>
        public InputList<Inputs.BucketTagFilterArgs> TagFilters
        {
            get => _TagFilters ?? (_TagFilters = new InputList<Inputs.BucketTagFilterArgs>());
            set => _TagFilters = value;
        }

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition
        /// </summary>
        [Input("Transition")]
        public Input<Inputs.BucketTransitionArgs>? Transition { get; set; }

        [Input("Transitions")]
        private InputList<Inputs.BucketTransitionArgs>? _Transitions;

        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions
        /// </summary>
        public InputList<Inputs.BucketTransitionArgs> Transitions
        {
            get => _Transitions ?? (_Transitions = new InputList<Inputs.BucketTransitionArgs>());
            set => _Transitions = value;
        }

        public BucketRuleArgs()
        {
        }
    }
}
