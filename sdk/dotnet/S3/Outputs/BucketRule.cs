// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.S3.Outputs
{

    [OutputType]
    public sealed class BucketRule
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-abortincompletemultipartupload
        /// </summary>
        public readonly Outputs.BucketAbortIncompleteMultipartUpload? AbortIncompleteMultipartUpload;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationdate
        /// </summary>
        public readonly string? ExpirationDate;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-expirationindays
        /// </summary>
        public readonly int? ExpirationInDays;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-id
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversionexpirationindays
        /// </summary>
        public readonly int? NoncurrentVersionExpirationInDays;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransition
        /// </summary>
        public readonly Outputs.BucketNoncurrentVersionTransition? NoncurrentVersionTransition;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-noncurrentversiontransitions
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketNoncurrentVersionTransition> NoncurrentVersionTransitions;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-prefix
        /// </summary>
        public readonly string? Prefix;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-status
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-rule-tagfilters
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketTagFilter> TagFilters;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transition
        /// </summary>
        public readonly Outputs.BucketTransition? Transition;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html#cfn-s3-bucket-lifecycleconfig-rule-transitions
        /// </summary>
        public readonly ImmutableArray<Outputs.BucketTransition> Transitions;

        [OutputConstructor]
        private BucketRule(
            Outputs.BucketAbortIncompleteMultipartUpload? AbortIncompleteMultipartUpload,

            string? ExpirationDate,

            int? ExpirationInDays,

            string? Id,

            int? NoncurrentVersionExpirationInDays,

            Outputs.BucketNoncurrentVersionTransition? NoncurrentVersionTransition,

            ImmutableArray<Outputs.BucketNoncurrentVersionTransition> NoncurrentVersionTransitions,

            string? Prefix,

            string Status,

            ImmutableArray<Outputs.BucketTagFilter> TagFilters,

            Outputs.BucketTransition? Transition,

            ImmutableArray<Outputs.BucketTransition> Transitions)
        {
            this.AbortIncompleteMultipartUpload = AbortIncompleteMultipartUpload;
            this.ExpirationDate = ExpirationDate;
            this.ExpirationInDays = ExpirationInDays;
            this.Id = Id;
            this.NoncurrentVersionExpirationInDays = NoncurrentVersionExpirationInDays;
            this.NoncurrentVersionTransition = NoncurrentVersionTransition;
            this.NoncurrentVersionTransitions = NoncurrentVersionTransitions;
            this.Prefix = Prefix;
            this.Status = Status;
            this.TagFilters = TagFilters;
            this.Transition = Transition;
            this.Transitions = Transitions;
        }
    }
}
