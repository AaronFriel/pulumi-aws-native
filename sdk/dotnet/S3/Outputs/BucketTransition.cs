// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.S3.Outputs
{

    [OutputType]
    public sealed class BucketTransition
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-storageclass
        /// </summary>
        public readonly string StorageClass;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitiondate
        /// </summary>
        public readonly string? TransitionDate;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule-transition.html#cfn-s3-bucket-lifecycleconfig-rule-transition-transitionindays
        /// </summary>
        public readonly int? TransitionInDays;

        [OutputConstructor]
        private BucketTransition(
            string StorageClass,

            string? TransitionDate,

            int? TransitionInDays)
        {
            this.StorageClass = StorageClass;
            this.TransitionDate = TransitionDate;
            this.TransitionInDays = TransitionInDays;
        }
    }
}
