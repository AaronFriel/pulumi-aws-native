// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Cloudformation.ElasticLoadBalancing.Outputs
{

    [OutputType]
    public sealed class LoadBalancerProperties
    {
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-accessloggingpolicy
        /// </summary>
        public readonly Outputs.LoadBalancerAccessLoggingPolicy? AccessLoggingPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-appcookiestickinesspolicy
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerAppCookieStickinessPolicy> AppCookieStickinessPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-availabilityzones
        /// </summary>
        public readonly ImmutableArray<string> AvailabilityZones;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectiondrainingpolicy
        /// </summary>
        public readonly Outputs.LoadBalancerConnectionDrainingPolicy? ConnectionDrainingPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-connectionsettings
        /// </summary>
        public readonly Outputs.LoadBalancerConnectionSettings? ConnectionSettings;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-crosszone
        /// </summary>
        public readonly bool? CrossZone;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-healthcheck
        /// </summary>
        public readonly Outputs.LoadBalancerHealthCheck? HealthCheck;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-instances
        /// </summary>
        public readonly ImmutableArray<string> Instances;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-lbcookiestickinesspolicy
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerLBCookieStickinessPolicy> LBCookieStickinessPolicy;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-listeners
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerListeners> Listeners;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-elbname
        /// </summary>
        public readonly string? LoadBalancerName;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-policies
        /// </summary>
        public readonly ImmutableArray<Outputs.LoadBalancerPolicies> Policies;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-scheme
        /// </summary>
        public readonly string? Scheme;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-securitygroups
        /// </summary>
        public readonly ImmutableArray<string> SecurityGroups;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-ec2-elb-subnets
        /// </summary>
        public readonly ImmutableArray<string> Subnets;
        /// <summary>
        /// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ec2-elb.html#cfn-elasticloadbalancing-loadbalancer-tags
        /// </summary>
        public readonly ImmutableArray<Pulumi.Cloudformation.Outputs.Tag> Tags;

        [OutputConstructor]
        private LoadBalancerProperties(
            Outputs.LoadBalancerAccessLoggingPolicy? AccessLoggingPolicy,

            ImmutableArray<Outputs.LoadBalancerAppCookieStickinessPolicy> AppCookieStickinessPolicy,

            ImmutableArray<string> AvailabilityZones,

            Outputs.LoadBalancerConnectionDrainingPolicy? ConnectionDrainingPolicy,

            Outputs.LoadBalancerConnectionSettings? ConnectionSettings,

            bool? CrossZone,

            Outputs.LoadBalancerHealthCheck? HealthCheck,

            ImmutableArray<string> Instances,

            ImmutableArray<Outputs.LoadBalancerLBCookieStickinessPolicy> LBCookieStickinessPolicy,

            ImmutableArray<Outputs.LoadBalancerListeners> Listeners,

            string? LoadBalancerName,

            ImmutableArray<Outputs.LoadBalancerPolicies> Policies,

            string? Scheme,

            ImmutableArray<string> SecurityGroups,

            ImmutableArray<string> Subnets,

            ImmutableArray<Pulumi.Cloudformation.Outputs.Tag> Tags)
        {
            this.AccessLoggingPolicy = AccessLoggingPolicy;
            this.AppCookieStickinessPolicy = AppCookieStickinessPolicy;
            this.AvailabilityZones = AvailabilityZones;
            this.ConnectionDrainingPolicy = ConnectionDrainingPolicy;
            this.ConnectionSettings = ConnectionSettings;
            this.CrossZone = CrossZone;
            this.HealthCheck = HealthCheck;
            this.Instances = Instances;
            this.LBCookieStickinessPolicy = LBCookieStickinessPolicy;
            this.Listeners = Listeners;
            this.LoadBalancerName = LoadBalancerName;
            this.Policies = Policies;
            this.Scheme = Scheme;
            this.SecurityGroups = SecurityGroups;
            this.Subnets = Subnets;
            this.Tags = Tags;
        }
    }
}
