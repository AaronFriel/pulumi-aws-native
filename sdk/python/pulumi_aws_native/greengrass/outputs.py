# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'ConnectorDefinitionConnector',
    'ConnectorDefinitionConnectorDefinitionVersion',
    'ConnectorDefinitionVersionConnector',
    'CoreDefinitionCore',
    'CoreDefinitionCoreDefinitionVersion',
    'CoreDefinitionVersionCore',
    'DeviceDefinitionDevice',
    'DeviceDefinitionDeviceDefinitionVersion',
    'DeviceDefinitionVersionDevice',
    'FunctionDefinitionDefaultConfig',
    'FunctionDefinitionEnvironment',
    'FunctionDefinitionExecution',
    'FunctionDefinitionFunction',
    'FunctionDefinitionFunctionConfiguration',
    'FunctionDefinitionFunctionDefinitionVersion',
    'FunctionDefinitionResourceAccessPolicy',
    'FunctionDefinitionRunAs',
    'FunctionDefinitionVersionDefaultConfig',
    'FunctionDefinitionVersionEnvironment',
    'FunctionDefinitionVersionExecution',
    'FunctionDefinitionVersionFunction',
    'FunctionDefinitionVersionFunctionConfiguration',
    'FunctionDefinitionVersionResourceAccessPolicy',
    'FunctionDefinitionVersionRunAs',
    'GroupGroupVersion',
    'LoggerDefinitionLogger',
    'LoggerDefinitionLoggerDefinitionVersion',
    'LoggerDefinitionVersionLogger',
    'ResourceDefinitionGroupOwnerSetting',
    'ResourceDefinitionLocalDeviceResourceData',
    'ResourceDefinitionLocalVolumeResourceData',
    'ResourceDefinitionResourceDataContainer',
    'ResourceDefinitionResourceDefinitionVersion',
    'ResourceDefinitionResourceDownloadOwnerSetting',
    'ResourceDefinitionResourceInstance',
    'ResourceDefinitionS3MachineLearningModelResourceData',
    'ResourceDefinitionSageMakerMachineLearningModelResourceData',
    'ResourceDefinitionSecretsManagerSecretResourceData',
    'ResourceDefinitionVersionGroupOwnerSetting',
    'ResourceDefinitionVersionLocalDeviceResourceData',
    'ResourceDefinitionVersionLocalVolumeResourceData',
    'ResourceDefinitionVersionResourceDataContainer',
    'ResourceDefinitionVersionResourceDownloadOwnerSetting',
    'ResourceDefinitionVersionResourceInstance',
    'ResourceDefinitionVersionS3MachineLearningModelResourceData',
    'ResourceDefinitionVersionSageMakerMachineLearningModelResourceData',
    'ResourceDefinitionVersionSecretsManagerSecretResourceData',
    'SubscriptionDefinitionSubscription',
    'SubscriptionDefinitionSubscriptionDefinitionVersion',
    'SubscriptionDefinitionVersionSubscription',
]

@pulumi.output_type
class ConnectorDefinitionConnector(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "connectorArn":
            suggest = "connector_arn"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ConnectorDefinitionConnector. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ConnectorDefinitionConnector.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ConnectorDefinitionConnector.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 connector_arn: str,
                 id: str,
                 parameters: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html
        :param str connector_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-connectorarn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-id
        :param Union[Any, str] parameters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-parameters
        """
        pulumi.set(__self__, "connector_arn", connector_arn)
        pulumi.set(__self__, "id", id)
        if parameters is not None:
            pulumi.set(__self__, "parameters", parameters)

    @property
    @pulumi.getter(name="connectorArn")
    def connector_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-connectorarn
        """
        return pulumi.get(self, "connector_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def parameters(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connector.html#cfn-greengrass-connectordefinition-connector-parameters
        """
        return pulumi.get(self, "parameters")


@pulumi.output_type
class ConnectorDefinitionConnectorDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connectordefinitionversion.html
    """
    def __init__(__self__, *,
                 connectors: Sequence['outputs.ConnectorDefinitionConnector']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connectordefinitionversion.html
        :param Sequence['ConnectorDefinitionConnector'] connectors: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connectordefinitionversion.html#cfn-greengrass-connectordefinition-connectordefinitionversion-connectors
        """
        pulumi.set(__self__, "connectors", connectors)

    @property
    @pulumi.getter
    def connectors(self) -> Sequence['outputs.ConnectorDefinitionConnector']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinition-connectordefinitionversion.html#cfn-greengrass-connectordefinition-connectordefinitionversion-connectors
        """
        return pulumi.get(self, "connectors")


@pulumi.output_type
class ConnectorDefinitionVersionConnector(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "connectorArn":
            suggest = "connector_arn"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ConnectorDefinitionVersionConnector. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ConnectorDefinitionVersionConnector.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ConnectorDefinitionVersionConnector.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 connector_arn: str,
                 id: str,
                 parameters: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html
        :param str connector_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-connectorarn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-id
        :param Union[Any, str] parameters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-parameters
        """
        pulumi.set(__self__, "connector_arn", connector_arn)
        pulumi.set(__self__, "id", id)
        if parameters is not None:
            pulumi.set(__self__, "parameters", parameters)

    @property
    @pulumi.getter(name="connectorArn")
    def connector_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-connectorarn
        """
        return pulumi.get(self, "connector_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def parameters(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-connectordefinitionversion-connector.html#cfn-greengrass-connectordefinitionversion-connector-parameters
        """
        return pulumi.get(self, "parameters")


@pulumi.output_type
class CoreDefinitionCore(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateArn":
            suggest = "certificate_arn"
        elif key == "thingArn":
            suggest = "thing_arn"
        elif key == "syncShadow":
            suggest = "sync_shadow"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CoreDefinitionCore. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CoreDefinitionCore.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CoreDefinitionCore.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_arn: str,
                 id: str,
                 thing_arn: str,
                 sync_shadow: Optional[bool] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html
        :param str certificate_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-certificatearn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-id
        :param str thing_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-thingarn
        :param bool sync_shadow: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-syncshadow
        """
        pulumi.set(__self__, "certificate_arn", certificate_arn)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "thing_arn", thing_arn)
        if sync_shadow is not None:
            pulumi.set(__self__, "sync_shadow", sync_shadow)

    @property
    @pulumi.getter(name="certificateArn")
    def certificate_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-certificatearn
        """
        return pulumi.get(self, "certificate_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="thingArn")
    def thing_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-thingarn
        """
        return pulumi.get(self, "thing_arn")

    @property
    @pulumi.getter(name="syncShadow")
    def sync_shadow(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-core.html#cfn-greengrass-coredefinition-core-syncshadow
        """
        return pulumi.get(self, "sync_shadow")


@pulumi.output_type
class CoreDefinitionCoreDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-coredefinitionversion.html
    """
    def __init__(__self__, *,
                 cores: Sequence['outputs.CoreDefinitionCore']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-coredefinitionversion.html
        :param Sequence['CoreDefinitionCore'] cores: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-coredefinitionversion.html#cfn-greengrass-coredefinition-coredefinitionversion-cores
        """
        pulumi.set(__self__, "cores", cores)

    @property
    @pulumi.getter
    def cores(self) -> Sequence['outputs.CoreDefinitionCore']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinition-coredefinitionversion.html#cfn-greengrass-coredefinition-coredefinitionversion-cores
        """
        return pulumi.get(self, "cores")


@pulumi.output_type
class CoreDefinitionVersionCore(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateArn":
            suggest = "certificate_arn"
        elif key == "thingArn":
            suggest = "thing_arn"
        elif key == "syncShadow":
            suggest = "sync_shadow"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CoreDefinitionVersionCore. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CoreDefinitionVersionCore.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CoreDefinitionVersionCore.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_arn: str,
                 id: str,
                 thing_arn: str,
                 sync_shadow: Optional[bool] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html
        :param str certificate_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-certificatearn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-id
        :param str thing_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-thingarn
        :param bool sync_shadow: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-syncshadow
        """
        pulumi.set(__self__, "certificate_arn", certificate_arn)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "thing_arn", thing_arn)
        if sync_shadow is not None:
            pulumi.set(__self__, "sync_shadow", sync_shadow)

    @property
    @pulumi.getter(name="certificateArn")
    def certificate_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-certificatearn
        """
        return pulumi.get(self, "certificate_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="thingArn")
    def thing_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-thingarn
        """
        return pulumi.get(self, "thing_arn")

    @property
    @pulumi.getter(name="syncShadow")
    def sync_shadow(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-coredefinitionversion-core.html#cfn-greengrass-coredefinitionversion-core-syncshadow
        """
        return pulumi.get(self, "sync_shadow")


@pulumi.output_type
class DeviceDefinitionDevice(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateArn":
            suggest = "certificate_arn"
        elif key == "thingArn":
            suggest = "thing_arn"
        elif key == "syncShadow":
            suggest = "sync_shadow"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DeviceDefinitionDevice. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DeviceDefinitionDevice.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DeviceDefinitionDevice.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_arn: str,
                 id: str,
                 thing_arn: str,
                 sync_shadow: Optional[bool] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html
        :param str certificate_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-certificatearn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-id
        :param str thing_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-thingarn
        :param bool sync_shadow: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-syncshadow
        """
        pulumi.set(__self__, "certificate_arn", certificate_arn)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "thing_arn", thing_arn)
        if sync_shadow is not None:
            pulumi.set(__self__, "sync_shadow", sync_shadow)

    @property
    @pulumi.getter(name="certificateArn")
    def certificate_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-certificatearn
        """
        return pulumi.get(self, "certificate_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="thingArn")
    def thing_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-thingarn
        """
        return pulumi.get(self, "thing_arn")

    @property
    @pulumi.getter(name="syncShadow")
    def sync_shadow(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-device.html#cfn-greengrass-devicedefinition-device-syncshadow
        """
        return pulumi.get(self, "sync_shadow")


@pulumi.output_type
class DeviceDefinitionDeviceDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-devicedefinitionversion.html
    """
    def __init__(__self__, *,
                 devices: Sequence['outputs.DeviceDefinitionDevice']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-devicedefinitionversion.html
        :param Sequence['DeviceDefinitionDevice'] devices: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-devicedefinitionversion.html#cfn-greengrass-devicedefinition-devicedefinitionversion-devices
        """
        pulumi.set(__self__, "devices", devices)

    @property
    @pulumi.getter
    def devices(self) -> Sequence['outputs.DeviceDefinitionDevice']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinition-devicedefinitionversion.html#cfn-greengrass-devicedefinition-devicedefinitionversion-devices
        """
        return pulumi.get(self, "devices")


@pulumi.output_type
class DeviceDefinitionVersionDevice(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "certificateArn":
            suggest = "certificate_arn"
        elif key == "thingArn":
            suggest = "thing_arn"
        elif key == "syncShadow":
            suggest = "sync_shadow"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DeviceDefinitionVersionDevice. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DeviceDefinitionVersionDevice.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DeviceDefinitionVersionDevice.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 certificate_arn: str,
                 id: str,
                 thing_arn: str,
                 sync_shadow: Optional[bool] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html
        :param str certificate_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-certificatearn
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-id
        :param str thing_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-thingarn
        :param bool sync_shadow: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-syncshadow
        """
        pulumi.set(__self__, "certificate_arn", certificate_arn)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "thing_arn", thing_arn)
        if sync_shadow is not None:
            pulumi.set(__self__, "sync_shadow", sync_shadow)

    @property
    @pulumi.getter(name="certificateArn")
    def certificate_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-certificatearn
        """
        return pulumi.get(self, "certificate_arn")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="thingArn")
    def thing_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-thingarn
        """
        return pulumi.get(self, "thing_arn")

    @property
    @pulumi.getter(name="syncShadow")
    def sync_shadow(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-devicedefinitionversion-device.html#cfn-greengrass-devicedefinitionversion-device-syncshadow
        """
        return pulumi.get(self, "sync_shadow")


@pulumi.output_type
class FunctionDefinitionDefaultConfig(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-defaultconfig.html
    """
    def __init__(__self__, *,
                 execution: 'outputs.FunctionDefinitionExecution'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-defaultconfig.html
        :param 'FunctionDefinitionExecution' execution: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-defaultconfig.html#cfn-greengrass-functiondefinition-defaultconfig-execution
        """
        pulumi.set(__self__, "execution", execution)

    @property
    @pulumi.getter
    def execution(self) -> 'outputs.FunctionDefinitionExecution':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-defaultconfig.html#cfn-greengrass-functiondefinition-defaultconfig-execution
        """
        return pulumi.get(self, "execution")


@pulumi.output_type
class FunctionDefinitionEnvironment(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "accessSysfs":
            suggest = "access_sysfs"
        elif key == "resourceAccessPolicies":
            suggest = "resource_access_policies"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionEnvironment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionEnvironment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionEnvironment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 access_sysfs: Optional[bool] = None,
                 execution: Optional['outputs.FunctionDefinitionExecution'] = None,
                 resource_access_policies: Optional[Sequence['outputs.FunctionDefinitionResourceAccessPolicy']] = None,
                 variables: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html
        :param bool access_sysfs: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-accesssysfs
        :param 'FunctionDefinitionExecution' execution: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-execution
        :param Sequence['FunctionDefinitionResourceAccessPolicy'] resource_access_policies: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-resourceaccesspolicies
        :param Union[Any, str] variables: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-variables
        """
        if access_sysfs is not None:
            pulumi.set(__self__, "access_sysfs", access_sysfs)
        if execution is not None:
            pulumi.set(__self__, "execution", execution)
        if resource_access_policies is not None:
            pulumi.set(__self__, "resource_access_policies", resource_access_policies)
        if variables is not None:
            pulumi.set(__self__, "variables", variables)

    @property
    @pulumi.getter(name="accessSysfs")
    def access_sysfs(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-accesssysfs
        """
        return pulumi.get(self, "access_sysfs")

    @property
    @pulumi.getter
    def execution(self) -> Optional['outputs.FunctionDefinitionExecution']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-execution
        """
        return pulumi.get(self, "execution")

    @property
    @pulumi.getter(name="resourceAccessPolicies")
    def resource_access_policies(self) -> Optional[Sequence['outputs.FunctionDefinitionResourceAccessPolicy']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-resourceaccesspolicies
        """
        return pulumi.get(self, "resource_access_policies")

    @property
    @pulumi.getter
    def variables(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-environment.html#cfn-greengrass-functiondefinition-environment-variables
        """
        return pulumi.get(self, "variables")


@pulumi.output_type
class FunctionDefinitionExecution(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isolationMode":
            suggest = "isolation_mode"
        elif key == "runAs":
            suggest = "run_as"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionExecution. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionExecution.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionExecution.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 isolation_mode: Optional[str] = None,
                 run_as: Optional['outputs.FunctionDefinitionRunAs'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html
        :param str isolation_mode: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html#cfn-greengrass-functiondefinition-execution-isolationmode
        :param 'FunctionDefinitionRunAs' run_as: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html#cfn-greengrass-functiondefinition-execution-runas
        """
        if isolation_mode is not None:
            pulumi.set(__self__, "isolation_mode", isolation_mode)
        if run_as is not None:
            pulumi.set(__self__, "run_as", run_as)

    @property
    @pulumi.getter(name="isolationMode")
    def isolation_mode(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html#cfn-greengrass-functiondefinition-execution-isolationmode
        """
        return pulumi.get(self, "isolation_mode")

    @property
    @pulumi.getter(name="runAs")
    def run_as(self) -> Optional['outputs.FunctionDefinitionRunAs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-execution.html#cfn-greengrass-functiondefinition-execution-runas
        """
        return pulumi.get(self, "run_as")


@pulumi.output_type
class FunctionDefinitionFunction(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "functionArn":
            suggest = "function_arn"
        elif key == "functionConfiguration":
            suggest = "function_configuration"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionFunction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionFunction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionFunction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 function_arn: str,
                 function_configuration: 'outputs.FunctionDefinitionFunctionConfiguration',
                 id: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html
        :param str function_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-functionarn
        :param 'FunctionDefinitionFunctionConfiguration' function_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-functionconfiguration
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-id
        """
        pulumi.set(__self__, "function_arn", function_arn)
        pulumi.set(__self__, "function_configuration", function_configuration)
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="functionArn")
    def function_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-functionarn
        """
        return pulumi.get(self, "function_arn")

    @property
    @pulumi.getter(name="functionConfiguration")
    def function_configuration(self) -> 'outputs.FunctionDefinitionFunctionConfiguration':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-functionconfiguration
        """
        return pulumi.get(self, "function_configuration")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-function.html#cfn-greengrass-functiondefinition-function-id
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class FunctionDefinitionFunctionConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "encodingType":
            suggest = "encoding_type"
        elif key == "execArgs":
            suggest = "exec_args"
        elif key == "memorySize":
            suggest = "memory_size"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionFunctionConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionFunctionConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionFunctionConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 encoding_type: Optional[str] = None,
                 environment: Optional['outputs.FunctionDefinitionEnvironment'] = None,
                 exec_args: Optional[str] = None,
                 executable: Optional[str] = None,
                 memory_size: Optional[int] = None,
                 pinned: Optional[bool] = None,
                 timeout: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html
        :param str encoding_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-encodingtype
        :param 'FunctionDefinitionEnvironment' environment: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-environment
        :param str exec_args: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-execargs
        :param str executable: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-executable
        :param int memory_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-memorysize
        :param bool pinned: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-pinned
        :param int timeout: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-timeout
        """
        if encoding_type is not None:
            pulumi.set(__self__, "encoding_type", encoding_type)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if exec_args is not None:
            pulumi.set(__self__, "exec_args", exec_args)
        if executable is not None:
            pulumi.set(__self__, "executable", executable)
        if memory_size is not None:
            pulumi.set(__self__, "memory_size", memory_size)
        if pinned is not None:
            pulumi.set(__self__, "pinned", pinned)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter(name="encodingType")
    def encoding_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-encodingtype
        """
        return pulumi.get(self, "encoding_type")

    @property
    @pulumi.getter
    def environment(self) -> Optional['outputs.FunctionDefinitionEnvironment']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-environment
        """
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter(name="execArgs")
    def exec_args(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-execargs
        """
        return pulumi.get(self, "exec_args")

    @property
    @pulumi.getter
    def executable(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-executable
        """
        return pulumi.get(self, "executable")

    @property
    @pulumi.getter(name="memorySize")
    def memory_size(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-memorysize
        """
        return pulumi.get(self, "memory_size")

    @property
    @pulumi.getter
    def pinned(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-pinned
        """
        return pulumi.get(self, "pinned")

    @property
    @pulumi.getter
    def timeout(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functionconfiguration.html#cfn-greengrass-functiondefinition-functionconfiguration-timeout
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class FunctionDefinitionFunctionDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "defaultConfig":
            suggest = "default_config"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionFunctionDefinitionVersion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionFunctionDefinitionVersion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionFunctionDefinitionVersion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 functions: Sequence['outputs.FunctionDefinitionFunction'],
                 default_config: Optional['outputs.FunctionDefinitionDefaultConfig'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html
        :param Sequence['FunctionDefinitionFunction'] functions: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html#cfn-greengrass-functiondefinition-functiondefinitionversion-functions
        :param 'FunctionDefinitionDefaultConfig' default_config: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html#cfn-greengrass-functiondefinition-functiondefinitionversion-defaultconfig
        """
        pulumi.set(__self__, "functions", functions)
        if default_config is not None:
            pulumi.set(__self__, "default_config", default_config)

    @property
    @pulumi.getter
    def functions(self) -> Sequence['outputs.FunctionDefinitionFunction']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html#cfn-greengrass-functiondefinition-functiondefinitionversion-functions
        """
        return pulumi.get(self, "functions")

    @property
    @pulumi.getter(name="defaultConfig")
    def default_config(self) -> Optional['outputs.FunctionDefinitionDefaultConfig']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-functiondefinitionversion.html#cfn-greengrass-functiondefinition-functiondefinitionversion-defaultconfig
        """
        return pulumi.get(self, "default_config")


@pulumi.output_type
class FunctionDefinitionResourceAccessPolicy(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceId":
            suggest = "resource_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionResourceAccessPolicy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionResourceAccessPolicy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionResourceAccessPolicy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 resource_id: str,
                 permission: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html
        :param str resource_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html#cfn-greengrass-functiondefinition-resourceaccesspolicy-resourceid
        :param str permission: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html#cfn-greengrass-functiondefinition-resourceaccesspolicy-permission
        """
        pulumi.set(__self__, "resource_id", resource_id)
        if permission is not None:
            pulumi.set(__self__, "permission", permission)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html#cfn-greengrass-functiondefinition-resourceaccesspolicy-resourceid
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter
    def permission(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-resourceaccesspolicy.html#cfn-greengrass-functiondefinition-resourceaccesspolicy-permission
        """
        return pulumi.get(self, "permission")


@pulumi.output_type
class FunctionDefinitionRunAs(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html
    """
    def __init__(__self__, *,
                 gid: Optional[int] = None,
                 uid: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html
        :param int gid: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html#cfn-greengrass-functiondefinition-runas-gid
        :param int uid: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html#cfn-greengrass-functiondefinition-runas-uid
        """
        if gid is not None:
            pulumi.set(__self__, "gid", gid)
        if uid is not None:
            pulumi.set(__self__, "uid", uid)

    @property
    @pulumi.getter
    def gid(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html#cfn-greengrass-functiondefinition-runas-gid
        """
        return pulumi.get(self, "gid")

    @property
    @pulumi.getter
    def uid(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinition-runas.html#cfn-greengrass-functiondefinition-runas-uid
        """
        return pulumi.get(self, "uid")


@pulumi.output_type
class FunctionDefinitionVersionDefaultConfig(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-defaultconfig.html
    """
    def __init__(__self__, *,
                 execution: 'outputs.FunctionDefinitionVersionExecution'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-defaultconfig.html
        :param 'FunctionDefinitionVersionExecution' execution: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-defaultconfig.html#cfn-greengrass-functiondefinitionversion-defaultconfig-execution
        """
        pulumi.set(__self__, "execution", execution)

    @property
    @pulumi.getter
    def execution(self) -> 'outputs.FunctionDefinitionVersionExecution':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-defaultconfig.html#cfn-greengrass-functiondefinitionversion-defaultconfig-execution
        """
        return pulumi.get(self, "execution")


@pulumi.output_type
class FunctionDefinitionVersionEnvironment(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "accessSysfs":
            suggest = "access_sysfs"
        elif key == "resourceAccessPolicies":
            suggest = "resource_access_policies"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionVersionEnvironment. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionVersionEnvironment.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionVersionEnvironment.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 access_sysfs: Optional[bool] = None,
                 execution: Optional['outputs.FunctionDefinitionVersionExecution'] = None,
                 resource_access_policies: Optional[Sequence['outputs.FunctionDefinitionVersionResourceAccessPolicy']] = None,
                 variables: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html
        :param bool access_sysfs: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-accesssysfs
        :param 'FunctionDefinitionVersionExecution' execution: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-execution
        :param Sequence['FunctionDefinitionVersionResourceAccessPolicy'] resource_access_policies: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-resourceaccesspolicies
        :param Union[Any, str] variables: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-variables
        """
        if access_sysfs is not None:
            pulumi.set(__self__, "access_sysfs", access_sysfs)
        if execution is not None:
            pulumi.set(__self__, "execution", execution)
        if resource_access_policies is not None:
            pulumi.set(__self__, "resource_access_policies", resource_access_policies)
        if variables is not None:
            pulumi.set(__self__, "variables", variables)

    @property
    @pulumi.getter(name="accessSysfs")
    def access_sysfs(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-accesssysfs
        """
        return pulumi.get(self, "access_sysfs")

    @property
    @pulumi.getter
    def execution(self) -> Optional['outputs.FunctionDefinitionVersionExecution']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-execution
        """
        return pulumi.get(self, "execution")

    @property
    @pulumi.getter(name="resourceAccessPolicies")
    def resource_access_policies(self) -> Optional[Sequence['outputs.FunctionDefinitionVersionResourceAccessPolicy']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-resourceaccesspolicies
        """
        return pulumi.get(self, "resource_access_policies")

    @property
    @pulumi.getter
    def variables(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-environment.html#cfn-greengrass-functiondefinitionversion-environment-variables
        """
        return pulumi.get(self, "variables")


@pulumi.output_type
class FunctionDefinitionVersionExecution(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "isolationMode":
            suggest = "isolation_mode"
        elif key == "runAs":
            suggest = "run_as"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionVersionExecution. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionVersionExecution.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionVersionExecution.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 isolation_mode: Optional[str] = None,
                 run_as: Optional['outputs.FunctionDefinitionVersionRunAs'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html
        :param str isolation_mode: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html#cfn-greengrass-functiondefinitionversion-execution-isolationmode
        :param 'FunctionDefinitionVersionRunAs' run_as: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html#cfn-greengrass-functiondefinitionversion-execution-runas
        """
        if isolation_mode is not None:
            pulumi.set(__self__, "isolation_mode", isolation_mode)
        if run_as is not None:
            pulumi.set(__self__, "run_as", run_as)

    @property
    @pulumi.getter(name="isolationMode")
    def isolation_mode(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html#cfn-greengrass-functiondefinitionversion-execution-isolationmode
        """
        return pulumi.get(self, "isolation_mode")

    @property
    @pulumi.getter(name="runAs")
    def run_as(self) -> Optional['outputs.FunctionDefinitionVersionRunAs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-execution.html#cfn-greengrass-functiondefinitionversion-execution-runas
        """
        return pulumi.get(self, "run_as")


@pulumi.output_type
class FunctionDefinitionVersionFunction(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "functionArn":
            suggest = "function_arn"
        elif key == "functionConfiguration":
            suggest = "function_configuration"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionVersionFunction. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionVersionFunction.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionVersionFunction.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 function_arn: str,
                 function_configuration: 'outputs.FunctionDefinitionVersionFunctionConfiguration',
                 id: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html
        :param str function_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-functionarn
        :param 'FunctionDefinitionVersionFunctionConfiguration' function_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-functionconfiguration
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-id
        """
        pulumi.set(__self__, "function_arn", function_arn)
        pulumi.set(__self__, "function_configuration", function_configuration)
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter(name="functionArn")
    def function_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-functionarn
        """
        return pulumi.get(self, "function_arn")

    @property
    @pulumi.getter(name="functionConfiguration")
    def function_configuration(self) -> 'outputs.FunctionDefinitionVersionFunctionConfiguration':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-functionconfiguration
        """
        return pulumi.get(self, "function_configuration")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-function.html#cfn-greengrass-functiondefinitionversion-function-id
        """
        return pulumi.get(self, "id")


@pulumi.output_type
class FunctionDefinitionVersionFunctionConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "encodingType":
            suggest = "encoding_type"
        elif key == "execArgs":
            suggest = "exec_args"
        elif key == "memorySize":
            suggest = "memory_size"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionVersionFunctionConfiguration. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionVersionFunctionConfiguration.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionVersionFunctionConfiguration.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 encoding_type: Optional[str] = None,
                 environment: Optional['outputs.FunctionDefinitionVersionEnvironment'] = None,
                 exec_args: Optional[str] = None,
                 executable: Optional[str] = None,
                 memory_size: Optional[int] = None,
                 pinned: Optional[bool] = None,
                 timeout: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html
        :param str encoding_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-encodingtype
        :param 'FunctionDefinitionVersionEnvironment' environment: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-environment
        :param str exec_args: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-execargs
        :param str executable: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-executable
        :param int memory_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-memorysize
        :param bool pinned: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-pinned
        :param int timeout: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-timeout
        """
        if encoding_type is not None:
            pulumi.set(__self__, "encoding_type", encoding_type)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if exec_args is not None:
            pulumi.set(__self__, "exec_args", exec_args)
        if executable is not None:
            pulumi.set(__self__, "executable", executable)
        if memory_size is not None:
            pulumi.set(__self__, "memory_size", memory_size)
        if pinned is not None:
            pulumi.set(__self__, "pinned", pinned)
        if timeout is not None:
            pulumi.set(__self__, "timeout", timeout)

    @property
    @pulumi.getter(name="encodingType")
    def encoding_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-encodingtype
        """
        return pulumi.get(self, "encoding_type")

    @property
    @pulumi.getter
    def environment(self) -> Optional['outputs.FunctionDefinitionVersionEnvironment']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-environment
        """
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter(name="execArgs")
    def exec_args(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-execargs
        """
        return pulumi.get(self, "exec_args")

    @property
    @pulumi.getter
    def executable(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-executable
        """
        return pulumi.get(self, "executable")

    @property
    @pulumi.getter(name="memorySize")
    def memory_size(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-memorysize
        """
        return pulumi.get(self, "memory_size")

    @property
    @pulumi.getter
    def pinned(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-pinned
        """
        return pulumi.get(self, "pinned")

    @property
    @pulumi.getter
    def timeout(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-functionconfiguration.html#cfn-greengrass-functiondefinitionversion-functionconfiguration-timeout
        """
        return pulumi.get(self, "timeout")


@pulumi.output_type
class FunctionDefinitionVersionResourceAccessPolicy(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceId":
            suggest = "resource_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FunctionDefinitionVersionResourceAccessPolicy. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FunctionDefinitionVersionResourceAccessPolicy.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FunctionDefinitionVersionResourceAccessPolicy.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 resource_id: str,
                 permission: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html
        :param str resource_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html#cfn-greengrass-functiondefinitionversion-resourceaccesspolicy-resourceid
        :param str permission: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html#cfn-greengrass-functiondefinitionversion-resourceaccesspolicy-permission
        """
        pulumi.set(__self__, "resource_id", resource_id)
        if permission is not None:
            pulumi.set(__self__, "permission", permission)

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html#cfn-greengrass-functiondefinitionversion-resourceaccesspolicy-resourceid
        """
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter
    def permission(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-resourceaccesspolicy.html#cfn-greengrass-functiondefinitionversion-resourceaccesspolicy-permission
        """
        return pulumi.get(self, "permission")


@pulumi.output_type
class FunctionDefinitionVersionRunAs(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html
    """
    def __init__(__self__, *,
                 gid: Optional[int] = None,
                 uid: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html
        :param int gid: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html#cfn-greengrass-functiondefinitionversion-runas-gid
        :param int uid: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html#cfn-greengrass-functiondefinitionversion-runas-uid
        """
        if gid is not None:
            pulumi.set(__self__, "gid", gid)
        if uid is not None:
            pulumi.set(__self__, "uid", uid)

    @property
    @pulumi.getter
    def gid(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html#cfn-greengrass-functiondefinitionversion-runas-gid
        """
        return pulumi.get(self, "gid")

    @property
    @pulumi.getter
    def uid(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-functiondefinitionversion-runas.html#cfn-greengrass-functiondefinitionversion-runas-uid
        """
        return pulumi.get(self, "uid")


@pulumi.output_type
class GroupGroupVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "connectorDefinitionVersionArn":
            suggest = "connector_definition_version_arn"
        elif key == "coreDefinitionVersionArn":
            suggest = "core_definition_version_arn"
        elif key == "deviceDefinitionVersionArn":
            suggest = "device_definition_version_arn"
        elif key == "functionDefinitionVersionArn":
            suggest = "function_definition_version_arn"
        elif key == "loggerDefinitionVersionArn":
            suggest = "logger_definition_version_arn"
        elif key == "resourceDefinitionVersionArn":
            suggest = "resource_definition_version_arn"
        elif key == "subscriptionDefinitionVersionArn":
            suggest = "subscription_definition_version_arn"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in GroupGroupVersion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        GroupGroupVersion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        GroupGroupVersion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 connector_definition_version_arn: Optional[str] = None,
                 core_definition_version_arn: Optional[str] = None,
                 device_definition_version_arn: Optional[str] = None,
                 function_definition_version_arn: Optional[str] = None,
                 logger_definition_version_arn: Optional[str] = None,
                 resource_definition_version_arn: Optional[str] = None,
                 subscription_definition_version_arn: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html
        :param str connector_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-connectordefinitionversionarn
        :param str core_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-coredefinitionversionarn
        :param str device_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-devicedefinitionversionarn
        :param str function_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-functiondefinitionversionarn
        :param str logger_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-loggerdefinitionversionarn
        :param str resource_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-resourcedefinitionversionarn
        :param str subscription_definition_version_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-subscriptiondefinitionversionarn
        """
        if connector_definition_version_arn is not None:
            pulumi.set(__self__, "connector_definition_version_arn", connector_definition_version_arn)
        if core_definition_version_arn is not None:
            pulumi.set(__self__, "core_definition_version_arn", core_definition_version_arn)
        if device_definition_version_arn is not None:
            pulumi.set(__self__, "device_definition_version_arn", device_definition_version_arn)
        if function_definition_version_arn is not None:
            pulumi.set(__self__, "function_definition_version_arn", function_definition_version_arn)
        if logger_definition_version_arn is not None:
            pulumi.set(__self__, "logger_definition_version_arn", logger_definition_version_arn)
        if resource_definition_version_arn is not None:
            pulumi.set(__self__, "resource_definition_version_arn", resource_definition_version_arn)
        if subscription_definition_version_arn is not None:
            pulumi.set(__self__, "subscription_definition_version_arn", subscription_definition_version_arn)

    @property
    @pulumi.getter(name="connectorDefinitionVersionArn")
    def connector_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-connectordefinitionversionarn
        """
        return pulumi.get(self, "connector_definition_version_arn")

    @property
    @pulumi.getter(name="coreDefinitionVersionArn")
    def core_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-coredefinitionversionarn
        """
        return pulumi.get(self, "core_definition_version_arn")

    @property
    @pulumi.getter(name="deviceDefinitionVersionArn")
    def device_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-devicedefinitionversionarn
        """
        return pulumi.get(self, "device_definition_version_arn")

    @property
    @pulumi.getter(name="functionDefinitionVersionArn")
    def function_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-functiondefinitionversionarn
        """
        return pulumi.get(self, "function_definition_version_arn")

    @property
    @pulumi.getter(name="loggerDefinitionVersionArn")
    def logger_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-loggerdefinitionversionarn
        """
        return pulumi.get(self, "logger_definition_version_arn")

    @property
    @pulumi.getter(name="resourceDefinitionVersionArn")
    def resource_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-resourcedefinitionversionarn
        """
        return pulumi.get(self, "resource_definition_version_arn")

    @property
    @pulumi.getter(name="subscriptionDefinitionVersionArn")
    def subscription_definition_version_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-group-groupversion.html#cfn-greengrass-group-groupversion-subscriptiondefinitionversionarn
        """
        return pulumi.get(self, "subscription_definition_version_arn")


@pulumi.output_type
class LoggerDefinitionLogger(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html
    """
    def __init__(__self__, *,
                 component: str,
                 id: str,
                 level: str,
                 type: str,
                 space: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html
        :param str component: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-component
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-id
        :param str level: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-level
        :param str type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-type
        :param int space: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-space
        """
        pulumi.set(__self__, "component", component)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "level", level)
        pulumi.set(__self__, "type", type)
        if space is not None:
            pulumi.set(__self__, "space", space)

    @property
    @pulumi.getter
    def component(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-component
        """
        return pulumi.get(self, "component")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def level(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-level
        """
        return pulumi.get(self, "level")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-type
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def space(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-logger.html#cfn-greengrass-loggerdefinition-logger-space
        """
        return pulumi.get(self, "space")


@pulumi.output_type
class LoggerDefinitionLoggerDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-loggerdefinitionversion.html
    """
    def __init__(__self__, *,
                 loggers: Sequence['outputs.LoggerDefinitionLogger']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-loggerdefinitionversion.html
        :param Sequence['LoggerDefinitionLogger'] loggers: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-loggerdefinitionversion.html#cfn-greengrass-loggerdefinition-loggerdefinitionversion-loggers
        """
        pulumi.set(__self__, "loggers", loggers)

    @property
    @pulumi.getter
    def loggers(self) -> Sequence['outputs.LoggerDefinitionLogger']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinition-loggerdefinitionversion.html#cfn-greengrass-loggerdefinition-loggerdefinitionversion-loggers
        """
        return pulumi.get(self, "loggers")


@pulumi.output_type
class LoggerDefinitionVersionLogger(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html
    """
    def __init__(__self__, *,
                 component: str,
                 id: str,
                 level: str,
                 type: str,
                 space: Optional[int] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html
        :param str component: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-component
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-id
        :param str level: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-level
        :param str type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-type
        :param int space: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-space
        """
        pulumi.set(__self__, "component", component)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "level", level)
        pulumi.set(__self__, "type", type)
        if space is not None:
            pulumi.set(__self__, "space", space)

    @property
    @pulumi.getter
    def component(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-component
        """
        return pulumi.get(self, "component")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def level(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-level
        """
        return pulumi.get(self, "level")

    @property
    @pulumi.getter
    def type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-type
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def space(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-loggerdefinitionversion-logger.html#cfn-greengrass-loggerdefinitionversion-logger-space
        """
        return pulumi.get(self, "space")


@pulumi.output_type
class ResourceDefinitionGroupOwnerSetting(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "autoAddGroupOwner":
            suggest = "auto_add_group_owner"
        elif key == "groupOwner":
            suggest = "group_owner"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionGroupOwnerSetting. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionGroupOwnerSetting.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionGroupOwnerSetting.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 auto_add_group_owner: bool,
                 group_owner: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html
        :param bool auto_add_group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html#cfn-greengrass-resourcedefinition-groupownersetting-autoaddgroupowner
        :param str group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html#cfn-greengrass-resourcedefinition-groupownersetting-groupowner
        """
        pulumi.set(__self__, "auto_add_group_owner", auto_add_group_owner)
        if group_owner is not None:
            pulumi.set(__self__, "group_owner", group_owner)

    @property
    @pulumi.getter(name="autoAddGroupOwner")
    def auto_add_group_owner(self) -> bool:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html#cfn-greengrass-resourcedefinition-groupownersetting-autoaddgroupowner
        """
        return pulumi.get(self, "auto_add_group_owner")

    @property
    @pulumi.getter(name="groupOwner")
    def group_owner(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-groupownersetting.html#cfn-greengrass-resourcedefinition-groupownersetting-groupowner
        """
        return pulumi.get(self, "group_owner")


@pulumi.output_type
class ResourceDefinitionLocalDeviceResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "sourcePath":
            suggest = "source_path"
        elif key == "groupOwnerSetting":
            suggest = "group_owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionLocalDeviceResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionLocalDeviceResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionLocalDeviceResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 source_path: str,
                 group_owner_setting: Optional['outputs.ResourceDefinitionGroupOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html
        :param str source_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html#cfn-greengrass-resourcedefinition-localdeviceresourcedata-sourcepath
        :param 'ResourceDefinitionGroupOwnerSetting' group_owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html#cfn-greengrass-resourcedefinition-localdeviceresourcedata-groupownersetting
        """
        pulumi.set(__self__, "source_path", source_path)
        if group_owner_setting is not None:
            pulumi.set(__self__, "group_owner_setting", group_owner_setting)

    @property
    @pulumi.getter(name="sourcePath")
    def source_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html#cfn-greengrass-resourcedefinition-localdeviceresourcedata-sourcepath
        """
        return pulumi.get(self, "source_path")

    @property
    @pulumi.getter(name="groupOwnerSetting")
    def group_owner_setting(self) -> Optional['outputs.ResourceDefinitionGroupOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localdeviceresourcedata.html#cfn-greengrass-resourcedefinition-localdeviceresourcedata-groupownersetting
        """
        return pulumi.get(self, "group_owner_setting")


@pulumi.output_type
class ResourceDefinitionLocalVolumeResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "sourcePath":
            suggest = "source_path"
        elif key == "groupOwnerSetting":
            suggest = "group_owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionLocalVolumeResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionLocalVolumeResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionLocalVolumeResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 source_path: str,
                 group_owner_setting: Optional['outputs.ResourceDefinitionGroupOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-destinationpath
        :param str source_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-sourcepath
        :param 'ResourceDefinitionGroupOwnerSetting' group_owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-groupownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "source_path", source_path)
        if group_owner_setting is not None:
            pulumi.set(__self__, "group_owner_setting", group_owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="sourcePath")
    def source_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-sourcepath
        """
        return pulumi.get(self, "source_path")

    @property
    @pulumi.getter(name="groupOwnerSetting")
    def group_owner_setting(self) -> Optional['outputs.ResourceDefinitionGroupOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-localvolumeresourcedata.html#cfn-greengrass-resourcedefinition-localvolumeresourcedata-groupownersetting
        """
        return pulumi.get(self, "group_owner_setting")


@pulumi.output_type
class ResourceDefinitionResourceDataContainer(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localDeviceResourceData":
            suggest = "local_device_resource_data"
        elif key == "localVolumeResourceData":
            suggest = "local_volume_resource_data"
        elif key == "s3MachineLearningModelResourceData":
            suggest = "s3_machine_learning_model_resource_data"
        elif key == "sageMakerMachineLearningModelResourceData":
            suggest = "sage_maker_machine_learning_model_resource_data"
        elif key == "secretsManagerSecretResourceData":
            suggest = "secrets_manager_secret_resource_data"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionResourceDataContainer. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionResourceDataContainer.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionResourceDataContainer.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_device_resource_data: Optional['outputs.ResourceDefinitionLocalDeviceResourceData'] = None,
                 local_volume_resource_data: Optional['outputs.ResourceDefinitionLocalVolumeResourceData'] = None,
                 s3_machine_learning_model_resource_data: Optional['outputs.ResourceDefinitionS3MachineLearningModelResourceData'] = None,
                 sage_maker_machine_learning_model_resource_data: Optional['outputs.ResourceDefinitionSageMakerMachineLearningModelResourceData'] = None,
                 secrets_manager_secret_resource_data: Optional['outputs.ResourceDefinitionSecretsManagerSecretResourceData'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html
        :param 'ResourceDefinitionLocalDeviceResourceData' local_device_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-localdeviceresourcedata
        :param 'ResourceDefinitionLocalVolumeResourceData' local_volume_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-localvolumeresourcedata
        :param 'ResourceDefinitionS3MachineLearningModelResourceData' s3_machine_learning_model_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-s3machinelearningmodelresourcedata
        :param 'ResourceDefinitionSageMakerMachineLearningModelResourceData' sage_maker_machine_learning_model_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-sagemakermachinelearningmodelresourcedata
        :param 'ResourceDefinitionSecretsManagerSecretResourceData' secrets_manager_secret_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-secretsmanagersecretresourcedata
        """
        if local_device_resource_data is not None:
            pulumi.set(__self__, "local_device_resource_data", local_device_resource_data)
        if local_volume_resource_data is not None:
            pulumi.set(__self__, "local_volume_resource_data", local_volume_resource_data)
        if s3_machine_learning_model_resource_data is not None:
            pulumi.set(__self__, "s3_machine_learning_model_resource_data", s3_machine_learning_model_resource_data)
        if sage_maker_machine_learning_model_resource_data is not None:
            pulumi.set(__self__, "sage_maker_machine_learning_model_resource_data", sage_maker_machine_learning_model_resource_data)
        if secrets_manager_secret_resource_data is not None:
            pulumi.set(__self__, "secrets_manager_secret_resource_data", secrets_manager_secret_resource_data)

    @property
    @pulumi.getter(name="localDeviceResourceData")
    def local_device_resource_data(self) -> Optional['outputs.ResourceDefinitionLocalDeviceResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-localdeviceresourcedata
        """
        return pulumi.get(self, "local_device_resource_data")

    @property
    @pulumi.getter(name="localVolumeResourceData")
    def local_volume_resource_data(self) -> Optional['outputs.ResourceDefinitionLocalVolumeResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-localvolumeresourcedata
        """
        return pulumi.get(self, "local_volume_resource_data")

    @property
    @pulumi.getter(name="s3MachineLearningModelResourceData")
    def s3_machine_learning_model_resource_data(self) -> Optional['outputs.ResourceDefinitionS3MachineLearningModelResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-s3machinelearningmodelresourcedata
        """
        return pulumi.get(self, "s3_machine_learning_model_resource_data")

    @property
    @pulumi.getter(name="sageMakerMachineLearningModelResourceData")
    def sage_maker_machine_learning_model_resource_data(self) -> Optional['outputs.ResourceDefinitionSageMakerMachineLearningModelResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-sagemakermachinelearningmodelresourcedata
        """
        return pulumi.get(self, "sage_maker_machine_learning_model_resource_data")

    @property
    @pulumi.getter(name="secretsManagerSecretResourceData")
    def secrets_manager_secret_resource_data(self) -> Optional['outputs.ResourceDefinitionSecretsManagerSecretResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedatacontainer.html#cfn-greengrass-resourcedefinition-resourcedatacontainer-secretsmanagersecretresourcedata
        """
        return pulumi.get(self, "secrets_manager_secret_resource_data")


@pulumi.output_type
class ResourceDefinitionResourceDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedefinitionversion.html
    """
    def __init__(__self__, *,
                 resources: Sequence['outputs.ResourceDefinitionResourceInstance']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedefinitionversion.html
        :param Sequence['ResourceDefinitionResourceInstance'] resources: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedefinitionversion.html#cfn-greengrass-resourcedefinition-resourcedefinitionversion-resources
        """
        pulumi.set(__self__, "resources", resources)

    @property
    @pulumi.getter
    def resources(self) -> Sequence['outputs.ResourceDefinitionResourceInstance']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedefinitionversion.html#cfn-greengrass-resourcedefinition-resourcedefinitionversion-resources
        """
        return pulumi.get(self, "resources")


@pulumi.output_type
class ResourceDefinitionResourceDownloadOwnerSetting(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "groupOwner":
            suggest = "group_owner"
        elif key == "groupPermission":
            suggest = "group_permission"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionResourceDownloadOwnerSetting. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionResourceDownloadOwnerSetting.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionResourceDownloadOwnerSetting.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 group_owner: str,
                 group_permission: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html
        :param str group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinition-resourcedownloadownersetting-groupowner
        :param str group_permission: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinition-resourcedownloadownersetting-grouppermission
        """
        pulumi.set(__self__, "group_owner", group_owner)
        pulumi.set(__self__, "group_permission", group_permission)

    @property
    @pulumi.getter(name="groupOwner")
    def group_owner(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinition-resourcedownloadownersetting-groupowner
        """
        return pulumi.get(self, "group_owner")

    @property
    @pulumi.getter(name="groupPermission")
    def group_permission(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinition-resourcedownloadownersetting-grouppermission
        """
        return pulumi.get(self, "group_permission")


@pulumi.output_type
class ResourceDefinitionResourceInstance(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceDataContainer":
            suggest = "resource_data_container"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionResourceInstance. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionResourceInstance.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionResourceInstance.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: str,
                 name: str,
                 resource_data_container: 'outputs.ResourceDefinitionResourceDataContainer'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-id
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-name
        :param 'ResourceDefinitionResourceDataContainer' resource_data_container: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-resourcedatacontainer
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "resource_data_container", resource_data_container)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="resourceDataContainer")
    def resource_data_container(self) -> 'outputs.ResourceDefinitionResourceDataContainer':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-resourceinstance.html#cfn-greengrass-resourcedefinition-resourceinstance-resourcedatacontainer
        """
        return pulumi.get(self, "resource_data_container")


@pulumi.output_type
class ResourceDefinitionS3MachineLearningModelResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "s3Uri":
            suggest = "s3_uri"
        elif key == "ownerSetting":
            suggest = "owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionS3MachineLearningModelResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionS3MachineLearningModelResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionS3MachineLearningModelResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 s3_uri: str,
                 owner_setting: Optional['outputs.ResourceDefinitionResourceDownloadOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-destinationpath
        :param str s3_uri: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-s3uri
        :param 'ResourceDefinitionResourceDownloadOwnerSetting' owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-ownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "s3_uri", s3_uri)
        if owner_setting is not None:
            pulumi.set(__self__, "owner_setting", owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="s3Uri")
    def s3_uri(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-s3uri
        """
        return pulumi.get(self, "s3_uri")

    @property
    @pulumi.getter(name="ownerSetting")
    def owner_setting(self) -> Optional['outputs.ResourceDefinitionResourceDownloadOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-s3machinelearningmodelresourcedata-ownersetting
        """
        return pulumi.get(self, "owner_setting")


@pulumi.output_type
class ResourceDefinitionSageMakerMachineLearningModelResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "sageMakerJobArn":
            suggest = "sage_maker_job_arn"
        elif key == "ownerSetting":
            suggest = "owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionSageMakerMachineLearningModelResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionSageMakerMachineLearningModelResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionSageMakerMachineLearningModelResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 sage_maker_job_arn: str,
                 owner_setting: Optional['outputs.ResourceDefinitionResourceDownloadOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-destinationpath
        :param str sage_maker_job_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-sagemakerjobarn
        :param 'ResourceDefinitionResourceDownloadOwnerSetting' owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-ownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "sage_maker_job_arn", sage_maker_job_arn)
        if owner_setting is not None:
            pulumi.set(__self__, "owner_setting", owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="sageMakerJobArn")
    def sage_maker_job_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-sagemakerjobarn
        """
        return pulumi.get(self, "sage_maker_job_arn")

    @property
    @pulumi.getter(name="ownerSetting")
    def owner_setting(self) -> Optional['outputs.ResourceDefinitionResourceDownloadOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinition-sagemakermachinelearningmodelresourcedata-ownersetting
        """
        return pulumi.get(self, "owner_setting")


@pulumi.output_type
class ResourceDefinitionSecretsManagerSecretResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "aRN":
            suggest = "a_rn"
        elif key == "additionalStagingLabelsToDownload":
            suggest = "additional_staging_labels_to_download"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionSecretsManagerSecretResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionSecretsManagerSecretResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionSecretsManagerSecretResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 a_rn: str,
                 additional_staging_labels_to_download: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html
        :param str a_rn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinition-secretsmanagersecretresourcedata-arn
        :param Sequence[str] additional_staging_labels_to_download: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinition-secretsmanagersecretresourcedata-additionalstaginglabelstodownload
        """
        pulumi.set(__self__, "a_rn", a_rn)
        if additional_staging_labels_to_download is not None:
            pulumi.set(__self__, "additional_staging_labels_to_download", additional_staging_labels_to_download)

    @property
    @pulumi.getter(name="aRN")
    def a_rn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinition-secretsmanagersecretresourcedata-arn
        """
        return pulumi.get(self, "a_rn")

    @property
    @pulumi.getter(name="additionalStagingLabelsToDownload")
    def additional_staging_labels_to_download(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinition-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinition-secretsmanagersecretresourcedata-additionalstaginglabelstodownload
        """
        return pulumi.get(self, "additional_staging_labels_to_download")


@pulumi.output_type
class ResourceDefinitionVersionGroupOwnerSetting(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "autoAddGroupOwner":
            suggest = "auto_add_group_owner"
        elif key == "groupOwner":
            suggest = "group_owner"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionGroupOwnerSetting. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionGroupOwnerSetting.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionGroupOwnerSetting.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 auto_add_group_owner: bool,
                 group_owner: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html
        :param bool auto_add_group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html#cfn-greengrass-resourcedefinitionversion-groupownersetting-autoaddgroupowner
        :param str group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html#cfn-greengrass-resourcedefinitionversion-groupownersetting-groupowner
        """
        pulumi.set(__self__, "auto_add_group_owner", auto_add_group_owner)
        if group_owner is not None:
            pulumi.set(__self__, "group_owner", group_owner)

    @property
    @pulumi.getter(name="autoAddGroupOwner")
    def auto_add_group_owner(self) -> bool:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html#cfn-greengrass-resourcedefinitionversion-groupownersetting-autoaddgroupowner
        """
        return pulumi.get(self, "auto_add_group_owner")

    @property
    @pulumi.getter(name="groupOwner")
    def group_owner(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-groupownersetting.html#cfn-greengrass-resourcedefinitionversion-groupownersetting-groupowner
        """
        return pulumi.get(self, "group_owner")


@pulumi.output_type
class ResourceDefinitionVersionLocalDeviceResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "sourcePath":
            suggest = "source_path"
        elif key == "groupOwnerSetting":
            suggest = "group_owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionLocalDeviceResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionLocalDeviceResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionLocalDeviceResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 source_path: str,
                 group_owner_setting: Optional['outputs.ResourceDefinitionVersionGroupOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html
        :param str source_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html#cfn-greengrass-resourcedefinitionversion-localdeviceresourcedata-sourcepath
        :param 'ResourceDefinitionVersionGroupOwnerSetting' group_owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html#cfn-greengrass-resourcedefinitionversion-localdeviceresourcedata-groupownersetting
        """
        pulumi.set(__self__, "source_path", source_path)
        if group_owner_setting is not None:
            pulumi.set(__self__, "group_owner_setting", group_owner_setting)

    @property
    @pulumi.getter(name="sourcePath")
    def source_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html#cfn-greengrass-resourcedefinitionversion-localdeviceresourcedata-sourcepath
        """
        return pulumi.get(self, "source_path")

    @property
    @pulumi.getter(name="groupOwnerSetting")
    def group_owner_setting(self) -> Optional['outputs.ResourceDefinitionVersionGroupOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localdeviceresourcedata.html#cfn-greengrass-resourcedefinitionversion-localdeviceresourcedata-groupownersetting
        """
        return pulumi.get(self, "group_owner_setting")


@pulumi.output_type
class ResourceDefinitionVersionLocalVolumeResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "sourcePath":
            suggest = "source_path"
        elif key == "groupOwnerSetting":
            suggest = "group_owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionLocalVolumeResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionLocalVolumeResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionLocalVolumeResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 source_path: str,
                 group_owner_setting: Optional['outputs.ResourceDefinitionVersionGroupOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-destinationpath
        :param str source_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-sourcepath
        :param 'ResourceDefinitionVersionGroupOwnerSetting' group_owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-groupownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "source_path", source_path)
        if group_owner_setting is not None:
            pulumi.set(__self__, "group_owner_setting", group_owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="sourcePath")
    def source_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-sourcepath
        """
        return pulumi.get(self, "source_path")

    @property
    @pulumi.getter(name="groupOwnerSetting")
    def group_owner_setting(self) -> Optional['outputs.ResourceDefinitionVersionGroupOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-localvolumeresourcedata.html#cfn-greengrass-resourcedefinitionversion-localvolumeresourcedata-groupownersetting
        """
        return pulumi.get(self, "group_owner_setting")


@pulumi.output_type
class ResourceDefinitionVersionResourceDataContainer(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "localDeviceResourceData":
            suggest = "local_device_resource_data"
        elif key == "localVolumeResourceData":
            suggest = "local_volume_resource_data"
        elif key == "s3MachineLearningModelResourceData":
            suggest = "s3_machine_learning_model_resource_data"
        elif key == "sageMakerMachineLearningModelResourceData":
            suggest = "sage_maker_machine_learning_model_resource_data"
        elif key == "secretsManagerSecretResourceData":
            suggest = "secrets_manager_secret_resource_data"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionResourceDataContainer. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionResourceDataContainer.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionResourceDataContainer.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 local_device_resource_data: Optional['outputs.ResourceDefinitionVersionLocalDeviceResourceData'] = None,
                 local_volume_resource_data: Optional['outputs.ResourceDefinitionVersionLocalVolumeResourceData'] = None,
                 s3_machine_learning_model_resource_data: Optional['outputs.ResourceDefinitionVersionS3MachineLearningModelResourceData'] = None,
                 sage_maker_machine_learning_model_resource_data: Optional['outputs.ResourceDefinitionVersionSageMakerMachineLearningModelResourceData'] = None,
                 secrets_manager_secret_resource_data: Optional['outputs.ResourceDefinitionVersionSecretsManagerSecretResourceData'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html
        :param 'ResourceDefinitionVersionLocalDeviceResourceData' local_device_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-localdeviceresourcedata
        :param 'ResourceDefinitionVersionLocalVolumeResourceData' local_volume_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-localvolumeresourcedata
        :param 'ResourceDefinitionVersionS3MachineLearningModelResourceData' s3_machine_learning_model_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-s3machinelearningmodelresourcedata
        :param 'ResourceDefinitionVersionSageMakerMachineLearningModelResourceData' sage_maker_machine_learning_model_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-sagemakermachinelearningmodelresourcedata
        :param 'ResourceDefinitionVersionSecretsManagerSecretResourceData' secrets_manager_secret_resource_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-secretsmanagersecretresourcedata
        """
        if local_device_resource_data is not None:
            pulumi.set(__self__, "local_device_resource_data", local_device_resource_data)
        if local_volume_resource_data is not None:
            pulumi.set(__self__, "local_volume_resource_data", local_volume_resource_data)
        if s3_machine_learning_model_resource_data is not None:
            pulumi.set(__self__, "s3_machine_learning_model_resource_data", s3_machine_learning_model_resource_data)
        if sage_maker_machine_learning_model_resource_data is not None:
            pulumi.set(__self__, "sage_maker_machine_learning_model_resource_data", sage_maker_machine_learning_model_resource_data)
        if secrets_manager_secret_resource_data is not None:
            pulumi.set(__self__, "secrets_manager_secret_resource_data", secrets_manager_secret_resource_data)

    @property
    @pulumi.getter(name="localDeviceResourceData")
    def local_device_resource_data(self) -> Optional['outputs.ResourceDefinitionVersionLocalDeviceResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-localdeviceresourcedata
        """
        return pulumi.get(self, "local_device_resource_data")

    @property
    @pulumi.getter(name="localVolumeResourceData")
    def local_volume_resource_data(self) -> Optional['outputs.ResourceDefinitionVersionLocalVolumeResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-localvolumeresourcedata
        """
        return pulumi.get(self, "local_volume_resource_data")

    @property
    @pulumi.getter(name="s3MachineLearningModelResourceData")
    def s3_machine_learning_model_resource_data(self) -> Optional['outputs.ResourceDefinitionVersionS3MachineLearningModelResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-s3machinelearningmodelresourcedata
        """
        return pulumi.get(self, "s3_machine_learning_model_resource_data")

    @property
    @pulumi.getter(name="sageMakerMachineLearningModelResourceData")
    def sage_maker_machine_learning_model_resource_data(self) -> Optional['outputs.ResourceDefinitionVersionSageMakerMachineLearningModelResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-sagemakermachinelearningmodelresourcedata
        """
        return pulumi.get(self, "sage_maker_machine_learning_model_resource_data")

    @property
    @pulumi.getter(name="secretsManagerSecretResourceData")
    def secrets_manager_secret_resource_data(self) -> Optional['outputs.ResourceDefinitionVersionSecretsManagerSecretResourceData']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedatacontainer.html#cfn-greengrass-resourcedefinitionversion-resourcedatacontainer-secretsmanagersecretresourcedata
        """
        return pulumi.get(self, "secrets_manager_secret_resource_data")


@pulumi.output_type
class ResourceDefinitionVersionResourceDownloadOwnerSetting(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "groupOwner":
            suggest = "group_owner"
        elif key == "groupPermission":
            suggest = "group_permission"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionResourceDownloadOwnerSetting. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionResourceDownloadOwnerSetting.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionResourceDownloadOwnerSetting.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 group_owner: str,
                 group_permission: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html
        :param str group_owner: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinitionversion-resourcedownloadownersetting-groupowner
        :param str group_permission: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinitionversion-resourcedownloadownersetting-grouppermission
        """
        pulumi.set(__self__, "group_owner", group_owner)
        pulumi.set(__self__, "group_permission", group_permission)

    @property
    @pulumi.getter(name="groupOwner")
    def group_owner(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinitionversion-resourcedownloadownersetting-groupowner
        """
        return pulumi.get(self, "group_owner")

    @property
    @pulumi.getter(name="groupPermission")
    def group_permission(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourcedownloadownersetting.html#cfn-greengrass-resourcedefinitionversion-resourcedownloadownersetting-grouppermission
        """
        return pulumi.get(self, "group_permission")


@pulumi.output_type
class ResourceDefinitionVersionResourceInstance(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceDataContainer":
            suggest = "resource_data_container"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionResourceInstance. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionResourceInstance.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionResourceInstance.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 id: str,
                 name: str,
                 resource_data_container: 'outputs.ResourceDefinitionVersionResourceDataContainer'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-id
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-name
        :param 'ResourceDefinitionVersionResourceDataContainer' resource_data_container: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-resourcedatacontainer
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "resource_data_container", resource_data_container)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="resourceDataContainer")
    def resource_data_container(self) -> 'outputs.ResourceDefinitionVersionResourceDataContainer':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-resourceinstance.html#cfn-greengrass-resourcedefinitionversion-resourceinstance-resourcedatacontainer
        """
        return pulumi.get(self, "resource_data_container")


@pulumi.output_type
class ResourceDefinitionVersionS3MachineLearningModelResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "s3Uri":
            suggest = "s3_uri"
        elif key == "ownerSetting":
            suggest = "owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionS3MachineLearningModelResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionS3MachineLearningModelResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionS3MachineLearningModelResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 s3_uri: str,
                 owner_setting: Optional['outputs.ResourceDefinitionVersionResourceDownloadOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-destinationpath
        :param str s3_uri: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-s3uri
        :param 'ResourceDefinitionVersionResourceDownloadOwnerSetting' owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-ownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "s3_uri", s3_uri)
        if owner_setting is not None:
            pulumi.set(__self__, "owner_setting", owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="s3Uri")
    def s3_uri(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-s3uri
        """
        return pulumi.get(self, "s3_uri")

    @property
    @pulumi.getter(name="ownerSetting")
    def owner_setting(self) -> Optional['outputs.ResourceDefinitionVersionResourceDownloadOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-s3machinelearningmodelresourcedata-ownersetting
        """
        return pulumi.get(self, "owner_setting")


@pulumi.output_type
class ResourceDefinitionVersionSageMakerMachineLearningModelResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "destinationPath":
            suggest = "destination_path"
        elif key == "sageMakerJobArn":
            suggest = "sage_maker_job_arn"
        elif key == "ownerSetting":
            suggest = "owner_setting"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionSageMakerMachineLearningModelResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionSageMakerMachineLearningModelResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionSageMakerMachineLearningModelResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 destination_path: str,
                 sage_maker_job_arn: str,
                 owner_setting: Optional['outputs.ResourceDefinitionVersionResourceDownloadOwnerSetting'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html
        :param str destination_path: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-destinationpath
        :param str sage_maker_job_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-sagemakerjobarn
        :param 'ResourceDefinitionVersionResourceDownloadOwnerSetting' owner_setting: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-ownersetting
        """
        pulumi.set(__self__, "destination_path", destination_path)
        pulumi.set(__self__, "sage_maker_job_arn", sage_maker_job_arn)
        if owner_setting is not None:
            pulumi.set(__self__, "owner_setting", owner_setting)

    @property
    @pulumi.getter(name="destinationPath")
    def destination_path(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-destinationpath
        """
        return pulumi.get(self, "destination_path")

    @property
    @pulumi.getter(name="sageMakerJobArn")
    def sage_maker_job_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-sagemakerjobarn
        """
        return pulumi.get(self, "sage_maker_job_arn")

    @property
    @pulumi.getter(name="ownerSetting")
    def owner_setting(self) -> Optional['outputs.ResourceDefinitionVersionResourceDownloadOwnerSetting']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata.html#cfn-greengrass-resourcedefinitionversion-sagemakermachinelearningmodelresourcedata-ownersetting
        """
        return pulumi.get(self, "owner_setting")


@pulumi.output_type
class ResourceDefinitionVersionSecretsManagerSecretResourceData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html
    """
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "aRN":
            suggest = "a_rn"
        elif key == "additionalStagingLabelsToDownload":
            suggest = "additional_staging_labels_to_download"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ResourceDefinitionVersionSecretsManagerSecretResourceData. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ResourceDefinitionVersionSecretsManagerSecretResourceData.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ResourceDefinitionVersionSecretsManagerSecretResourceData.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 a_rn: str,
                 additional_staging_labels_to_download: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html
        :param str a_rn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata-arn
        :param Sequence[str] additional_staging_labels_to_download: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata-additionalstaginglabelstodownload
        """
        pulumi.set(__self__, "a_rn", a_rn)
        if additional_staging_labels_to_download is not None:
            pulumi.set(__self__, "additional_staging_labels_to_download", additional_staging_labels_to_download)

    @property
    @pulumi.getter(name="aRN")
    def a_rn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata-arn
        """
        return pulumi.get(self, "a_rn")

    @property
    @pulumi.getter(name="additionalStagingLabelsToDownload")
    def additional_staging_labels_to_download(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata.html#cfn-greengrass-resourcedefinitionversion-secretsmanagersecretresourcedata-additionalstaginglabelstodownload
        """
        return pulumi.get(self, "additional_staging_labels_to_download")


@pulumi.output_type
class SubscriptionDefinitionSubscription(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html
    """
    def __init__(__self__, *,
                 id: str,
                 source: str,
                 subject: str,
                 target: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-id
        :param str source: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-source
        :param str subject: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-subject
        :param str target: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-target
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "target", target)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-source
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter
    def subject(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-subject
        """
        return pulumi.get(self, "subject")

    @property
    @pulumi.getter
    def target(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscription.html#cfn-greengrass-subscriptiondefinition-subscription-target
        """
        return pulumi.get(self, "target")


@pulumi.output_type
class SubscriptionDefinitionSubscriptionDefinitionVersion(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscriptiondefinitionversion.html
    """
    def __init__(__self__, *,
                 subscriptions: Sequence['outputs.SubscriptionDefinitionSubscription']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscriptiondefinitionversion.html
        :param Sequence['SubscriptionDefinitionSubscription'] subscriptions: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscriptiondefinitionversion.html#cfn-greengrass-subscriptiondefinition-subscriptiondefinitionversion-subscriptions
        """
        pulumi.set(__self__, "subscriptions", subscriptions)

    @property
    @pulumi.getter
    def subscriptions(self) -> Sequence['outputs.SubscriptionDefinitionSubscription']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinition-subscriptiondefinitionversion.html#cfn-greengrass-subscriptiondefinition-subscriptiondefinitionversion-subscriptions
        """
        return pulumi.get(self, "subscriptions")


@pulumi.output_type
class SubscriptionDefinitionVersionSubscription(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html
    """
    def __init__(__self__, *,
                 id: str,
                 source: str,
                 subject: str,
                 target: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html
        :param str id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-id
        :param str source: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-source
        :param str subject: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-subject
        :param str target: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-target
        """
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "source", source)
        pulumi.set(__self__, "subject", subject)
        pulumi.set(__self__, "target", target)

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-id
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def source(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-source
        """
        return pulumi.get(self, "source")

    @property
    @pulumi.getter
    def subject(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-subject
        """
        return pulumi.get(self, "subject")

    @property
    @pulumi.getter
    def target(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-greengrass-subscriptiondefinitionversion-subscription.html#cfn-greengrass-subscriptiondefinitionversion-subscription-target
        """
        return pulumi.get(self, "target")


