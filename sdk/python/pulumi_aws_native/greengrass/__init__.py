# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .connector_definition import *
from .connector_definition_version import *
from .core_definition import *
from .core_definition_version import *
from .device_definition import *
from .device_definition_version import *
from .function_definition import *
from .function_definition_version import *
from .group import *
from .group_version import *
from .logger_definition import *
from .logger_definition_version import *
from .resource_definition import *
from .resource_definition_version import *
from .subscription_definition import *
from .subscription_definition_version import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:Greengrass:ConnectorDefinition":
                return ConnectorDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:ConnectorDefinitionVersion":
                return ConnectorDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:CoreDefinition":
                return CoreDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:CoreDefinitionVersion":
                return CoreDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:DeviceDefinition":
                return DeviceDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:DeviceDefinitionVersion":
                return DeviceDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:FunctionDefinition":
                return FunctionDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:FunctionDefinitionVersion":
                return FunctionDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:Group":
                return Group(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:GroupVersion":
                return GroupVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:LoggerDefinition":
                return LoggerDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:LoggerDefinitionVersion":
                return LoggerDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:ResourceDefinition":
                return ResourceDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:ResourceDefinitionVersion":
                return ResourceDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:SubscriptionDefinition":
                return SubscriptionDefinition(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Greengrass:SubscriptionDefinitionVersion":
                return SubscriptionDefinitionVersion(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "Greengrass", _module_instance)

_register_module()
