# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .identity_pool import *
from .identity_pool_role_attachment import *
from .user_pool import *
from .user_pool_client import *
from .user_pool_domain import *
from .user_pool_group import *
from .user_pool_identity_provider import *
from .user_pool_resource_server import *
from .user_pool_risk_configuration_attachment import *
from .user_pool_ui_customization_attachment import *
from .user_pool_user import *
from .user_pool_user_to_group_attachment import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:Cognito:IdentityPool":
                return IdentityPool(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:IdentityPoolRoleAttachment":
                return IdentityPoolRoleAttachment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPool":
                return UserPool(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolClient":
                return UserPoolClient(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolDomain":
                return UserPoolDomain(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolGroup":
                return UserPoolGroup(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolIdentityProvider":
                return UserPoolIdentityProvider(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolResourceServer":
                return UserPoolResourceServer(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolRiskConfigurationAttachment":
                return UserPoolRiskConfigurationAttachment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolUICustomizationAttachment":
                return UserPoolUICustomizationAttachment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolUser":
                return UserPoolUser(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Cognito:UserPoolUserToGroupAttachment":
                return UserPoolUserToGroupAttachment(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "Cognito", _module_instance)

_register_module()
