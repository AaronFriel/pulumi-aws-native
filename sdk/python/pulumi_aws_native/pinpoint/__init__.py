# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .adm_channel import *
from .apns_channel import *
from .apns_sandbox_channel import *
from .apns_voip_channel import *
from .apns_voip_sandbox_channel import *
from .app import *
from .application_settings import *
from .baidu_channel import *
from .campaign import *
from .email_channel import *
from .email_template import *
from .event_stream import *
from .gcm_channel import *
from .push_template import *
from .segment import *
from .sms_channel import *
from .sms_template import *
from .voice_channel import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:Pinpoint:ADMChannel":
                return ADMChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:APNSChannel":
                return APNSChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:APNSSandboxChannel":
                return APNSSandboxChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:APNSVoipChannel":
                return APNSVoipChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:APNSVoipSandboxChannel":
                return APNSVoipSandboxChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:App":
                return App(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:ApplicationSettings":
                return ApplicationSettings(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:BaiduChannel":
                return BaiduChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:Campaign":
                return Campaign(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:EmailChannel":
                return EmailChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:EmailTemplate":
                return EmailTemplate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:EventStream":
                return EventStream(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:GCMChannel":
                return GCMChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:PushTemplate":
                return PushTemplate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:SMSChannel":
                return SMSChannel(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:Segment":
                return Segment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:SmsTemplate":
                return SmsTemplate(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:Pinpoint:VoiceChannel":
                return VoiceChannel(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "Pinpoint", _module_instance)

_register_module()
