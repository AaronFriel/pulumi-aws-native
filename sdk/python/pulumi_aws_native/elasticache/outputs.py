# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from .. import outputs as _root_outputs

__all__ = [
    'CacheClusterAttributes',
    'CacheClusterProperties',
    'ParameterGroupAttributes',
    'ParameterGroupProperties',
    'ReplicationGroupAttributes',
    'ReplicationGroupNodeGroupConfiguration',
    'ReplicationGroupProperties',
    'ReplicationGroupUpdatePolicy',
    'SecurityGroupAttributes',
    'SecurityGroupIngressAttributes',
    'SecurityGroupIngressProperties',
    'SecurityGroupProperties',
    'SubnetGroupAttributes',
    'SubnetGroupProperties',
    'UserAttributes',
    'UserAuthentication',
    'UserGroupAttributes',
    'UserGroupProperties',
    'UserGroupReplicationGroupIdList',
    'UserGroupUserGroupPendingChanges',
    'UserGroupUserIdList',
    'UserPasswordList',
    'UserProperties',
    'UserUserGroupIdList',
]

@pulumi.output_type
class CacheClusterAttributes(dict):
    def __init__(__self__, *,
                 configuration_endpoint_address: str,
                 configuration_endpoint_port: str,
                 redis_endpoint_address: str,
                 redis_endpoint_port: str):
        pulumi.set(__self__, "configuration_endpoint_address", configuration_endpoint_address)
        pulumi.set(__self__, "configuration_endpoint_port", configuration_endpoint_port)
        pulumi.set(__self__, "redis_endpoint_address", redis_endpoint_address)
        pulumi.set(__self__, "redis_endpoint_port", redis_endpoint_port)

    @property
    @pulumi.getter(name="ConfigurationEndpointAddress")
    def configuration_endpoint_address(self) -> str:
        return pulumi.get(self, "configuration_endpoint_address")

    @property
    @pulumi.getter(name="ConfigurationEndpointPort")
    def configuration_endpoint_port(self) -> str:
        return pulumi.get(self, "configuration_endpoint_port")

    @property
    @pulumi.getter(name="RedisEndpointAddress")
    def redis_endpoint_address(self) -> str:
        return pulumi.get(self, "redis_endpoint_address")

    @property
    @pulumi.getter(name="RedisEndpointPort")
    def redis_endpoint_port(self) -> str:
        return pulumi.get(self, "redis_endpoint_port")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class CacheClusterProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html
    """
    def __init__(__self__, *,
                 cache_node_type: str,
                 engine: str,
                 num_cache_nodes: int,
                 az_mode: Optional[str] = None,
                 auto_minor_version_upgrade: Optional[bool] = None,
                 cache_parameter_group_name: Optional[str] = None,
                 cache_security_group_names: Optional[Sequence[str]] = None,
                 cache_subnet_group_name: Optional[str] = None,
                 cluster_name: Optional[str] = None,
                 engine_version: Optional[str] = None,
                 notification_topic_arn: Optional[str] = None,
                 port: Optional[int] = None,
                 preferred_availability_zone: Optional[str] = None,
                 preferred_availability_zones: Optional[Sequence[str]] = None,
                 preferred_maintenance_window: Optional[str] = None,
                 snapshot_arns: Optional[Sequence[str]] = None,
                 snapshot_name: Optional[str] = None,
                 snapshot_retention_limit: Optional[int] = None,
                 snapshot_window: Optional[str] = None,
                 tags: Optional[Sequence['_root_outputs.Tag']] = None,
                 vpc_security_group_ids: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html
        :param str cache_node_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachenodetype
        :param str engine: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engine
        :param int num_cache_nodes: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-numcachenodes
        :param str az_mode: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-azmode
        :param bool auto_minor_version_upgrade: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-autominorversionupgrade
        :param str cache_parameter_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cacheparametergroupname
        :param Sequence[str] cache_security_group_names: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesecuritygroupnames
        :param str cache_subnet_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesubnetgroupname
        :param str cluster_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-clustername
        :param str engine_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engineversion
        :param str notification_topic_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-notificationtopicarn
        :param int port: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-port
        :param str preferred_availability_zone: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzone
        :param Sequence[str] preferred_availability_zones: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzones
        :param str preferred_maintenance_window: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredmaintenancewindow
        :param Sequence[str] snapshot_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotarns
        :param str snapshot_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotname
        :param int snapshot_retention_limit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotretentionlimit
        :param str snapshot_window: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotwindow
        :param Sequence['_root_inputs.TagArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-tags
        :param Sequence[str] vpc_security_group_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-vpcsecuritygroupids
        """
        pulumi.set(__self__, "cache_node_type", cache_node_type)
        pulumi.set(__self__, "engine", engine)
        pulumi.set(__self__, "num_cache_nodes", num_cache_nodes)
        if az_mode is not None:
            pulumi.set(__self__, "az_mode", az_mode)
        if auto_minor_version_upgrade is not None:
            pulumi.set(__self__, "auto_minor_version_upgrade", auto_minor_version_upgrade)
        if cache_parameter_group_name is not None:
            pulumi.set(__self__, "cache_parameter_group_name", cache_parameter_group_name)
        if cache_security_group_names is not None:
            pulumi.set(__self__, "cache_security_group_names", cache_security_group_names)
        if cache_subnet_group_name is not None:
            pulumi.set(__self__, "cache_subnet_group_name", cache_subnet_group_name)
        if cluster_name is not None:
            pulumi.set(__self__, "cluster_name", cluster_name)
        if engine_version is not None:
            pulumi.set(__self__, "engine_version", engine_version)
        if notification_topic_arn is not None:
            pulumi.set(__self__, "notification_topic_arn", notification_topic_arn)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if preferred_availability_zone is not None:
            pulumi.set(__self__, "preferred_availability_zone", preferred_availability_zone)
        if preferred_availability_zones is not None:
            pulumi.set(__self__, "preferred_availability_zones", preferred_availability_zones)
        if preferred_maintenance_window is not None:
            pulumi.set(__self__, "preferred_maintenance_window", preferred_maintenance_window)
        if snapshot_arns is not None:
            pulumi.set(__self__, "snapshot_arns", snapshot_arns)
        if snapshot_name is not None:
            pulumi.set(__self__, "snapshot_name", snapshot_name)
        if snapshot_retention_limit is not None:
            pulumi.set(__self__, "snapshot_retention_limit", snapshot_retention_limit)
        if snapshot_window is not None:
            pulumi.set(__self__, "snapshot_window", snapshot_window)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if vpc_security_group_ids is not None:
            pulumi.set(__self__, "vpc_security_group_ids", vpc_security_group_ids)

    @property
    @pulumi.getter(name="CacheNodeType")
    def cache_node_type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachenodetype
        """
        return pulumi.get(self, "cache_node_type")

    @property
    @pulumi.getter(name="Engine")
    def engine(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engine
        """
        return pulumi.get(self, "engine")

    @property
    @pulumi.getter(name="NumCacheNodes")
    def num_cache_nodes(self) -> int:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-numcachenodes
        """
        return pulumi.get(self, "num_cache_nodes")

    @property
    @pulumi.getter(name="AZMode")
    def az_mode(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-azmode
        """
        return pulumi.get(self, "az_mode")

    @property
    @pulumi.getter(name="AutoMinorVersionUpgrade")
    def auto_minor_version_upgrade(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-autominorversionupgrade
        """
        return pulumi.get(self, "auto_minor_version_upgrade")

    @property
    @pulumi.getter(name="CacheParameterGroupName")
    def cache_parameter_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cacheparametergroupname
        """
        return pulumi.get(self, "cache_parameter_group_name")

    @property
    @pulumi.getter(name="CacheSecurityGroupNames")
    def cache_security_group_names(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesecuritygroupnames
        """
        return pulumi.get(self, "cache_security_group_names")

    @property
    @pulumi.getter(name="CacheSubnetGroupName")
    def cache_subnet_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-cachesubnetgroupname
        """
        return pulumi.get(self, "cache_subnet_group_name")

    @property
    @pulumi.getter(name="ClusterName")
    def cluster_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-clustername
        """
        return pulumi.get(self, "cluster_name")

    @property
    @pulumi.getter(name="EngineVersion")
    def engine_version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-engineversion
        """
        return pulumi.get(self, "engine_version")

    @property
    @pulumi.getter(name="NotificationTopicArn")
    def notification_topic_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-notificationtopicarn
        """
        return pulumi.get(self, "notification_topic_arn")

    @property
    @pulumi.getter(name="Port")
    def port(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-port
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="PreferredAvailabilityZone")
    def preferred_availability_zone(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzone
        """
        return pulumi.get(self, "preferred_availability_zone")

    @property
    @pulumi.getter(name="PreferredAvailabilityZones")
    def preferred_availability_zones(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredavailabilityzones
        """
        return pulumi.get(self, "preferred_availability_zones")

    @property
    @pulumi.getter(name="PreferredMaintenanceWindow")
    def preferred_maintenance_window(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-preferredmaintenancewindow
        """
        return pulumi.get(self, "preferred_maintenance_window")

    @property
    @pulumi.getter(name="SnapshotArns")
    def snapshot_arns(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotarns
        """
        return pulumi.get(self, "snapshot_arns")

    @property
    @pulumi.getter(name="SnapshotName")
    def snapshot_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotname
        """
        return pulumi.get(self, "snapshot_name")

    @property
    @pulumi.getter(name="SnapshotRetentionLimit")
    def snapshot_retention_limit(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotretentionlimit
        """
        return pulumi.get(self, "snapshot_retention_limit")

    @property
    @pulumi.getter(name="SnapshotWindow")
    def snapshot_window(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-snapshotwindow
        """
        return pulumi.get(self, "snapshot_window")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="VpcSecurityGroupIds")
    def vpc_security_group_ids(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-cache-cluster.html#cfn-elasticache-cachecluster-vpcsecuritygroupids
        """
        return pulumi.get(self, "vpc_security_group_ids")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ParameterGroupAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ParameterGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html
    """
    def __init__(__self__, *,
                 cache_parameter_group_family: str,
                 description: str,
                 properties: Optional[Mapping[str, str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html
        :param str cache_parameter_group_family: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-cacheparametergroupfamily
        :param str description: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-description
        :param Mapping[str, str] properties: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-properties
        """
        pulumi.set(__self__, "cache_parameter_group_family", cache_parameter_group_family)
        pulumi.set(__self__, "description", description)
        if properties is not None:
            pulumi.set(__self__, "properties", properties)

    @property
    @pulumi.getter(name="CacheParameterGroupFamily")
    def cache_parameter_group_family(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-cacheparametergroupfamily
        """
        return pulumi.get(self, "cache_parameter_group_family")

    @property
    @pulumi.getter(name="Description")
    def description(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-description
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="Properties")
    def properties(self) -> Optional[Mapping[str, str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-parameter-group.html#cfn-elasticache-parametergroup-properties
        """
        return pulumi.get(self, "properties")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReplicationGroupAttributes(dict):
    def __init__(__self__, *,
                 configuration_end_point_address: str,
                 configuration_end_point_port: str,
                 primary_end_point_address: str,
                 primary_end_point_port: str,
                 read_end_point_addresses: str,
                 read_end_point_addresses_list: Sequence[str],
                 read_end_point_ports: str,
                 read_end_point_ports_list: Sequence[str],
                 reader_end_point_address: str,
                 reader_end_point_port: str):
        pulumi.set(__self__, "configuration_end_point_address", configuration_end_point_address)
        pulumi.set(__self__, "configuration_end_point_port", configuration_end_point_port)
        pulumi.set(__self__, "primary_end_point_address", primary_end_point_address)
        pulumi.set(__self__, "primary_end_point_port", primary_end_point_port)
        pulumi.set(__self__, "read_end_point_addresses", read_end_point_addresses)
        pulumi.set(__self__, "read_end_point_addresses_list", read_end_point_addresses_list)
        pulumi.set(__self__, "read_end_point_ports", read_end_point_ports)
        pulumi.set(__self__, "read_end_point_ports_list", read_end_point_ports_list)
        pulumi.set(__self__, "reader_end_point_address", reader_end_point_address)
        pulumi.set(__self__, "reader_end_point_port", reader_end_point_port)

    @property
    @pulumi.getter(name="ConfigurationEndPointAddress")
    def configuration_end_point_address(self) -> str:
        return pulumi.get(self, "configuration_end_point_address")

    @property
    @pulumi.getter(name="ConfigurationEndPointPort")
    def configuration_end_point_port(self) -> str:
        return pulumi.get(self, "configuration_end_point_port")

    @property
    @pulumi.getter(name="PrimaryEndPointAddress")
    def primary_end_point_address(self) -> str:
        return pulumi.get(self, "primary_end_point_address")

    @property
    @pulumi.getter(name="PrimaryEndPointPort")
    def primary_end_point_port(self) -> str:
        return pulumi.get(self, "primary_end_point_port")

    @property
    @pulumi.getter(name="ReadEndPointAddresses")
    def read_end_point_addresses(self) -> str:
        return pulumi.get(self, "read_end_point_addresses")

    @property
    @pulumi.getter(name="ReadEndPointAddressesList")
    def read_end_point_addresses_list(self) -> Sequence[str]:
        return pulumi.get(self, "read_end_point_addresses_list")

    @property
    @pulumi.getter(name="ReadEndPointPorts")
    def read_end_point_ports(self) -> str:
        return pulumi.get(self, "read_end_point_ports")

    @property
    @pulumi.getter(name="ReadEndPointPortsList")
    def read_end_point_ports_list(self) -> Sequence[str]:
        return pulumi.get(self, "read_end_point_ports_list")

    @property
    @pulumi.getter(name="ReaderEndPointAddress")
    def reader_end_point_address(self) -> str:
        return pulumi.get(self, "reader_end_point_address")

    @property
    @pulumi.getter(name="ReaderEndPointPort")
    def reader_end_point_port(self) -> str:
        return pulumi.get(self, "reader_end_point_port")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReplicationGroupNodeGroupConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html
    """
    def __init__(__self__, *,
                 node_group_id: Optional[str] = None,
                 primary_availability_zone: Optional[str] = None,
                 replica_availability_zones: Optional[Sequence[str]] = None,
                 replica_count: Optional[int] = None,
                 slots: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html
        :param str node_group_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-nodegroupid
        :param str primary_availability_zone: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-primaryavailabilityzone
        :param Sequence[str] replica_availability_zones: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-replicaavailabilityzones
        :param int replica_count: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-replicacount
        :param str slots: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-slots
        """
        if node_group_id is not None:
            pulumi.set(__self__, "node_group_id", node_group_id)
        if primary_availability_zone is not None:
            pulumi.set(__self__, "primary_availability_zone", primary_availability_zone)
        if replica_availability_zones is not None:
            pulumi.set(__self__, "replica_availability_zones", replica_availability_zones)
        if replica_count is not None:
            pulumi.set(__self__, "replica_count", replica_count)
        if slots is not None:
            pulumi.set(__self__, "slots", slots)

    @property
    @pulumi.getter(name="NodeGroupId")
    def node_group_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-nodegroupid
        """
        return pulumi.get(self, "node_group_id")

    @property
    @pulumi.getter(name="PrimaryAvailabilityZone")
    def primary_availability_zone(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-primaryavailabilityzone
        """
        return pulumi.get(self, "primary_availability_zone")

    @property
    @pulumi.getter(name="ReplicaAvailabilityZones")
    def replica_availability_zones(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-replicaavailabilityzones
        """
        return pulumi.get(self, "replica_availability_zones")

    @property
    @pulumi.getter(name="ReplicaCount")
    def replica_count(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-replicacount
        """
        return pulumi.get(self, "replica_count")

    @property
    @pulumi.getter(name="Slots")
    def slots(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-replicationgroup-nodegroupconfiguration.html#cfn-elasticache-replicationgroup-nodegroupconfiguration-slots
        """
        return pulumi.get(self, "slots")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReplicationGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html
    """
    def __init__(__self__, *,
                 replication_group_description: str,
                 at_rest_encryption_enabled: Optional[bool] = None,
                 auth_token: Optional[str] = None,
                 auto_minor_version_upgrade: Optional[bool] = None,
                 automatic_failover_enabled: Optional[bool] = None,
                 cache_node_type: Optional[str] = None,
                 cache_parameter_group_name: Optional[str] = None,
                 cache_security_group_names: Optional[Sequence[str]] = None,
                 cache_subnet_group_name: Optional[str] = None,
                 engine: Optional[str] = None,
                 engine_version: Optional[str] = None,
                 global_replication_group_id: Optional[str] = None,
                 kms_key_id: Optional[str] = None,
                 multi_az_enabled: Optional[bool] = None,
                 node_group_configuration: Optional[Sequence['outputs.ReplicationGroupNodeGroupConfiguration']] = None,
                 notification_topic_arn: Optional[str] = None,
                 num_cache_clusters: Optional[int] = None,
                 num_node_groups: Optional[int] = None,
                 port: Optional[int] = None,
                 preferred_cache_cluster_azs: Optional[Sequence[str]] = None,
                 preferred_maintenance_window: Optional[str] = None,
                 primary_cluster_id: Optional[str] = None,
                 replicas_per_node_group: Optional[int] = None,
                 replication_group_id: Optional[str] = None,
                 security_group_ids: Optional[Sequence[str]] = None,
                 snapshot_arns: Optional[Sequence[str]] = None,
                 snapshot_name: Optional[str] = None,
                 snapshot_retention_limit: Optional[int] = None,
                 snapshot_window: Optional[str] = None,
                 snapshotting_cluster_id: Optional[str] = None,
                 tags: Optional[Sequence['_root_outputs.Tag']] = None,
                 transit_encryption_enabled: Optional[bool] = None,
                 user_group_ids: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html
        :param str replication_group_description: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupdescription
        :param bool at_rest_encryption_enabled: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-atrestencryptionenabled
        :param str auth_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-authtoken
        :param bool auto_minor_version_upgrade: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-autominorversionupgrade
        :param bool automatic_failover_enabled: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-automaticfailoverenabled
        :param str cache_node_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachenodetype
        :param str cache_parameter_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cacheparametergroupname
        :param Sequence[str] cache_security_group_names: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesecuritygroupnames
        :param str cache_subnet_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesubnetgroupname
        :param str engine: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engine
        :param str engine_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engineversion
        :param str global_replication_group_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-globalreplicationgroupid
        :param str kms_key_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-kmskeyid
        :param bool multi_az_enabled: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-multiazenabled
        :param Sequence['ReplicationGroupNodeGroupConfigurationArgs'] node_group_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-nodegroupconfiguration
        :param str notification_topic_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-notificationtopicarn
        :param int num_cache_clusters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numcacheclusters
        :param int num_node_groups: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numnodegroups
        :param int port: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-port
        :param Sequence[str] preferred_cache_cluster_azs: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredcacheclusterazs
        :param str preferred_maintenance_window: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredmaintenancewindow
        :param str primary_cluster_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-primaryclusterid
        :param int replicas_per_node_group: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicaspernodegroup
        :param str replication_group_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupid
        :param Sequence[str] security_group_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-securitygroupids
        :param Sequence[str] snapshot_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotarns
        :param str snapshot_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotname
        :param int snapshot_retention_limit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotretentionlimit
        :param str snapshot_window: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotwindow
        :param str snapshotting_cluster_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshottingclusterid
        :param Sequence['_root_inputs.TagArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-tags
        :param bool transit_encryption_enabled: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-transitencryptionenabled
        :param Sequence[str] user_group_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-usergroupids
        """
        pulumi.set(__self__, "replication_group_description", replication_group_description)
        if at_rest_encryption_enabled is not None:
            pulumi.set(__self__, "at_rest_encryption_enabled", at_rest_encryption_enabled)
        if auth_token is not None:
            pulumi.set(__self__, "auth_token", auth_token)
        if auto_minor_version_upgrade is not None:
            pulumi.set(__self__, "auto_minor_version_upgrade", auto_minor_version_upgrade)
        if automatic_failover_enabled is not None:
            pulumi.set(__self__, "automatic_failover_enabled", automatic_failover_enabled)
        if cache_node_type is not None:
            pulumi.set(__self__, "cache_node_type", cache_node_type)
        if cache_parameter_group_name is not None:
            pulumi.set(__self__, "cache_parameter_group_name", cache_parameter_group_name)
        if cache_security_group_names is not None:
            pulumi.set(__self__, "cache_security_group_names", cache_security_group_names)
        if cache_subnet_group_name is not None:
            pulumi.set(__self__, "cache_subnet_group_name", cache_subnet_group_name)
        if engine is not None:
            pulumi.set(__self__, "engine", engine)
        if engine_version is not None:
            pulumi.set(__self__, "engine_version", engine_version)
        if global_replication_group_id is not None:
            pulumi.set(__self__, "global_replication_group_id", global_replication_group_id)
        if kms_key_id is not None:
            pulumi.set(__self__, "kms_key_id", kms_key_id)
        if multi_az_enabled is not None:
            pulumi.set(__self__, "multi_az_enabled", multi_az_enabled)
        if node_group_configuration is not None:
            pulumi.set(__self__, "node_group_configuration", node_group_configuration)
        if notification_topic_arn is not None:
            pulumi.set(__self__, "notification_topic_arn", notification_topic_arn)
        if num_cache_clusters is not None:
            pulumi.set(__self__, "num_cache_clusters", num_cache_clusters)
        if num_node_groups is not None:
            pulumi.set(__self__, "num_node_groups", num_node_groups)
        if port is not None:
            pulumi.set(__self__, "port", port)
        if preferred_cache_cluster_azs is not None:
            pulumi.set(__self__, "preferred_cache_cluster_azs", preferred_cache_cluster_azs)
        if preferred_maintenance_window is not None:
            pulumi.set(__self__, "preferred_maintenance_window", preferred_maintenance_window)
        if primary_cluster_id is not None:
            pulumi.set(__self__, "primary_cluster_id", primary_cluster_id)
        if replicas_per_node_group is not None:
            pulumi.set(__self__, "replicas_per_node_group", replicas_per_node_group)
        if replication_group_id is not None:
            pulumi.set(__self__, "replication_group_id", replication_group_id)
        if security_group_ids is not None:
            pulumi.set(__self__, "security_group_ids", security_group_ids)
        if snapshot_arns is not None:
            pulumi.set(__self__, "snapshot_arns", snapshot_arns)
        if snapshot_name is not None:
            pulumi.set(__self__, "snapshot_name", snapshot_name)
        if snapshot_retention_limit is not None:
            pulumi.set(__self__, "snapshot_retention_limit", snapshot_retention_limit)
        if snapshot_window is not None:
            pulumi.set(__self__, "snapshot_window", snapshot_window)
        if snapshotting_cluster_id is not None:
            pulumi.set(__self__, "snapshotting_cluster_id", snapshotting_cluster_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if transit_encryption_enabled is not None:
            pulumi.set(__self__, "transit_encryption_enabled", transit_encryption_enabled)
        if user_group_ids is not None:
            pulumi.set(__self__, "user_group_ids", user_group_ids)

    @property
    @pulumi.getter(name="ReplicationGroupDescription")
    def replication_group_description(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupdescription
        """
        return pulumi.get(self, "replication_group_description")

    @property
    @pulumi.getter(name="AtRestEncryptionEnabled")
    def at_rest_encryption_enabled(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-atrestencryptionenabled
        """
        return pulumi.get(self, "at_rest_encryption_enabled")

    @property
    @pulumi.getter(name="AuthToken")
    def auth_token(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-authtoken
        """
        return pulumi.get(self, "auth_token")

    @property
    @pulumi.getter(name="AutoMinorVersionUpgrade")
    def auto_minor_version_upgrade(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-autominorversionupgrade
        """
        return pulumi.get(self, "auto_minor_version_upgrade")

    @property
    @pulumi.getter(name="AutomaticFailoverEnabled")
    def automatic_failover_enabled(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-automaticfailoverenabled
        """
        return pulumi.get(self, "automatic_failover_enabled")

    @property
    @pulumi.getter(name="CacheNodeType")
    def cache_node_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachenodetype
        """
        return pulumi.get(self, "cache_node_type")

    @property
    @pulumi.getter(name="CacheParameterGroupName")
    def cache_parameter_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cacheparametergroupname
        """
        return pulumi.get(self, "cache_parameter_group_name")

    @property
    @pulumi.getter(name="CacheSecurityGroupNames")
    def cache_security_group_names(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesecuritygroupnames
        """
        return pulumi.get(self, "cache_security_group_names")

    @property
    @pulumi.getter(name="CacheSubnetGroupName")
    def cache_subnet_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-cachesubnetgroupname
        """
        return pulumi.get(self, "cache_subnet_group_name")

    @property
    @pulumi.getter(name="Engine")
    def engine(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engine
        """
        return pulumi.get(self, "engine")

    @property
    @pulumi.getter(name="EngineVersion")
    def engine_version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-engineversion
        """
        return pulumi.get(self, "engine_version")

    @property
    @pulumi.getter(name="GlobalReplicationGroupId")
    def global_replication_group_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-globalreplicationgroupid
        """
        return pulumi.get(self, "global_replication_group_id")

    @property
    @pulumi.getter(name="KmsKeyId")
    def kms_key_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-kmskeyid
        """
        return pulumi.get(self, "kms_key_id")

    @property
    @pulumi.getter(name="MultiAZEnabled")
    def multi_az_enabled(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-multiazenabled
        """
        return pulumi.get(self, "multi_az_enabled")

    @property
    @pulumi.getter(name="NodeGroupConfiguration")
    def node_group_configuration(self) -> Optional[Sequence['outputs.ReplicationGroupNodeGroupConfiguration']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-nodegroupconfiguration
        """
        return pulumi.get(self, "node_group_configuration")

    @property
    @pulumi.getter(name="NotificationTopicArn")
    def notification_topic_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-notificationtopicarn
        """
        return pulumi.get(self, "notification_topic_arn")

    @property
    @pulumi.getter(name="NumCacheClusters")
    def num_cache_clusters(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numcacheclusters
        """
        return pulumi.get(self, "num_cache_clusters")

    @property
    @pulumi.getter(name="NumNodeGroups")
    def num_node_groups(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-numnodegroups
        """
        return pulumi.get(self, "num_node_groups")

    @property
    @pulumi.getter(name="Port")
    def port(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-port
        """
        return pulumi.get(self, "port")

    @property
    @pulumi.getter(name="PreferredCacheClusterAZs")
    def preferred_cache_cluster_azs(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredcacheclusterazs
        """
        return pulumi.get(self, "preferred_cache_cluster_azs")

    @property
    @pulumi.getter(name="PreferredMaintenanceWindow")
    def preferred_maintenance_window(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-preferredmaintenancewindow
        """
        return pulumi.get(self, "preferred_maintenance_window")

    @property
    @pulumi.getter(name="PrimaryClusterId")
    def primary_cluster_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-primaryclusterid
        """
        return pulumi.get(self, "primary_cluster_id")

    @property
    @pulumi.getter(name="ReplicasPerNodeGroup")
    def replicas_per_node_group(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicaspernodegroup
        """
        return pulumi.get(self, "replicas_per_node_group")

    @property
    @pulumi.getter(name="ReplicationGroupId")
    def replication_group_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-replicationgroupid
        """
        return pulumi.get(self, "replication_group_id")

    @property
    @pulumi.getter(name="SecurityGroupIds")
    def security_group_ids(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-securitygroupids
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="SnapshotArns")
    def snapshot_arns(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotarns
        """
        return pulumi.get(self, "snapshot_arns")

    @property
    @pulumi.getter(name="SnapshotName")
    def snapshot_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotname
        """
        return pulumi.get(self, "snapshot_name")

    @property
    @pulumi.getter(name="SnapshotRetentionLimit")
    def snapshot_retention_limit(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotretentionlimit
        """
        return pulumi.get(self, "snapshot_retention_limit")

    @property
    @pulumi.getter(name="SnapshotWindow")
    def snapshot_window(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshotwindow
        """
        return pulumi.get(self, "snapshot_window")

    @property
    @pulumi.getter(name="SnapshottingClusterId")
    def snapshotting_cluster_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-snapshottingclusterid
        """
        return pulumi.get(self, "snapshotting_cluster_id")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="TransitEncryptionEnabled")
    def transit_encryption_enabled(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-transitencryptionenabled
        """
        return pulumi.get(self, "transit_encryption_enabled")

    @property
    @pulumi.getter(name="UserGroupIds")
    def user_group_ids(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-replicationgroup.html#cfn-elasticache-replicationgroup-usergroupids
        """
        return pulumi.get(self, "user_group_ids")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ReplicationGroupUpdatePolicy(dict):
    """
    The UpdatePolicy for a ReplicationGroup.
    """
    def __init__(__self__, *,
                 use_online_resharding: Optional[bool] = None):
        """
        The UpdatePolicy for a ReplicationGroup.
        :param bool use_online_resharding: To modify a replication group's shards by adding or removing shards, rather than
               replacing the entire AWS::ElastiCache::ReplicationGroup resource, use the
               UseOnlineResharding update policy.
               
               If UseOnlineResharding is set to true, you can update the NumNodeGroups and
               NodeGroupConfiguration properties of the AWS::ElastiCache::ReplicationGroup resource, and
               CloudFormation will update those properties without interruption. When UseOnlineResharding
               is set to false, or not specified, updating the NumNodeGroups and NodeGroupConfiguration
               properties results in CloudFormation replacing the entire
               AWS::ElastiCache::ReplicationGroup resource.
               
               The UseOnlineResharding update policy has no properties.
               
               Things to consider when setting the UseOnlineResharding update policy to true:
               
               - We strongly recommend you perform updates to the NumNodeGroups and
                 NodeGroupConfiguration properties as the only updates in a given stack update operation.
                 Updating the node group configuration of a replication group is a resource-intensive
                 operation. If a stack update fails, CloudFormation does not roll back changes to the node
                 group configuration of a replication group. However, CloudFormation will roll back any
                 other properties that were changed as part of the failed update operation.
               - Any node group updates require identifying all node groups.  If you specify the
                 NodeGroupConfiguration property, you must also specify the NodeGroupId for each node group
                 configuration in order for CloudFormation to update the number of nodes without
                 interruption.  When creating a replication group, if you do not specify an ID for each
                 node group, ElastiCache automatically generates an ID for each node group. To update the
                 replication group without interruption, use the ElastiCache console
                 (https://console.aws.amazon.com/elasticache/) or DescribeReplicationGroups to retrieve the
                 IDs for all node groups in the replication group. Then specify the ID for each node group
                 in your stack template before attempting to add or remove shards.
               
                 *Note*: As a best practice, when you create a replication group in a stack template,
                 include an ID for each node group you specify.
               
                 In addition, updating the number of nodes without interruption requires that you have
                 accurately specified the PrimaryAvailabilityZone, ReplicaAvailabilityZones, and
                 ReplicaCount properties for each NodeGroupConfiguration as well. Again, you can use the
                 ElastiCache console (https://console.aws.amazon.com/elasticache/) or
                 DescribeReplicationGroups to retrieve the actual values for each node group and compare
                 them to the values in your stack template. You can update the property values of the
                 node groups as a separate stack update, or as part of the same stack update that changes
                 the number of node groups.  When you use an UseOnlineResharding update policy to update
                 the number of node groups without interruption, ElastiCache evenly distributes the
                 keyspaces between the specified number of slots. This cannot be updated later.
                 Therefore, after updating the number of node groups in this way, you should remove the
                 value specified for the Slots property of each NodeGroupConfiguration from the stack
                 template, as it no longer reflects the actual values in each node group.
               
               - Actual node group removal results may vary.  When you specify a NumNodeGroups value that
                 is less than the current number of node groups, CloudFormation instructs ElastiCache to
                 remove as many node groups as necessary to reach the specified number of nodes. However,
                 ElastiCache may not always be able to remove the desired number of node groups. In the
                 event ElastiCache cannot remove the desired number of node groups, CloudFormation
                 generates a stack event alerting you to this. In cases where ElastiCache cannot remove any
                 node groups, the CloudFormation resource update fails.
               
               For more information on modifying replication groups, see
               ModifyReplicationGroupShardConfiguration in the Amazon ElastiCache API Reference.
        """
        if use_online_resharding is not None:
            pulumi.set(__self__, "use_online_resharding", use_online_resharding)

    @property
    @pulumi.getter(name="UseOnlineResharding")
    def use_online_resharding(self) -> Optional[bool]:
        """
        To modify a replication group's shards by adding or removing shards, rather than
        replacing the entire AWS::ElastiCache::ReplicationGroup resource, use the
        UseOnlineResharding update policy.

        If UseOnlineResharding is set to true, you can update the NumNodeGroups and
        NodeGroupConfiguration properties of the AWS::ElastiCache::ReplicationGroup resource, and
        CloudFormation will update those properties without interruption. When UseOnlineResharding
        is set to false, or not specified, updating the NumNodeGroups and NodeGroupConfiguration
        properties results in CloudFormation replacing the entire
        AWS::ElastiCache::ReplicationGroup resource.

        The UseOnlineResharding update policy has no properties.

        Things to consider when setting the UseOnlineResharding update policy to true:

        - We strongly recommend you perform updates to the NumNodeGroups and
          NodeGroupConfiguration properties as the only updates in a given stack update operation.
          Updating the node group configuration of a replication group is a resource-intensive
          operation. If a stack update fails, CloudFormation does not roll back changes to the node
          group configuration of a replication group. However, CloudFormation will roll back any
          other properties that were changed as part of the failed update operation.
        - Any node group updates require identifying all node groups.  If you specify the
          NodeGroupConfiguration property, you must also specify the NodeGroupId for each node group
          configuration in order for CloudFormation to update the number of nodes without
          interruption.  When creating a replication group, if you do not specify an ID for each
          node group, ElastiCache automatically generates an ID for each node group. To update the
          replication group without interruption, use the ElastiCache console
          (https://console.aws.amazon.com/elasticache/) or DescribeReplicationGroups to retrieve the
          IDs for all node groups in the replication group. Then specify the ID for each node group
          in your stack template before attempting to add or remove shards.

          *Note*: As a best practice, when you create a replication group in a stack template,
          include an ID for each node group you specify.

          In addition, updating the number of nodes without interruption requires that you have
          accurately specified the PrimaryAvailabilityZone, ReplicaAvailabilityZones, and
          ReplicaCount properties for each NodeGroupConfiguration as well. Again, you can use the
          ElastiCache console (https://console.aws.amazon.com/elasticache/) or
          DescribeReplicationGroups to retrieve the actual values for each node group and compare
          them to the values in your stack template. You can update the property values of the
          node groups as a separate stack update, or as part of the same stack update that changes
          the number of node groups.  When you use an UseOnlineResharding update policy to update
          the number of node groups without interruption, ElastiCache evenly distributes the
          keyspaces between the specified number of slots. This cannot be updated later.
          Therefore, after updating the number of node groups in this way, you should remove the
          value specified for the Slots property of each NodeGroupConfiguration from the stack
          template, as it no longer reflects the actual values in each node group.

        - Actual node group removal results may vary.  When you specify a NumNodeGroups value that
          is less than the current number of node groups, CloudFormation instructs ElastiCache to
          remove as many node groups as necessary to reach the specified number of nodes. However,
          ElastiCache may not always be able to remove the desired number of node groups. In the
          event ElastiCache cannot remove the desired number of node groups, CloudFormation
          generates a stack event alerting you to this. In cases where ElastiCache cannot remove any
          node groups, the CloudFormation resource update fails.

        For more information on modifying replication groups, see
        ModifyReplicationGroupShardConfiguration in the Amazon ElastiCache API Reference.
        """
        return pulumi.get(self, "use_online_resharding")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SecurityGroupAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SecurityGroupIngressAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SecurityGroupIngressProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html
    """
    def __init__(__self__, *,
                 cache_security_group_name: str,
                 ec2_security_group_name: str,
                 ec2_security_group_owner_id: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html
        :param str cache_security_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-cachesecuritygroupname
        :param str ec2_security_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupname
        :param str ec2_security_group_owner_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupownerid
        """
        pulumi.set(__self__, "cache_security_group_name", cache_security_group_name)
        pulumi.set(__self__, "ec2_security_group_name", ec2_security_group_name)
        if ec2_security_group_owner_id is not None:
            pulumi.set(__self__, "ec2_security_group_owner_id", ec2_security_group_owner_id)

    @property
    @pulumi.getter(name="CacheSecurityGroupName")
    def cache_security_group_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-cachesecuritygroupname
        """
        return pulumi.get(self, "cache_security_group_name")

    @property
    @pulumi.getter(name="EC2SecurityGroupName")
    def ec2_security_group_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupname
        """
        return pulumi.get(self, "ec2_security_group_name")

    @property
    @pulumi.getter(name="EC2SecurityGroupOwnerId")
    def ec2_security_group_owner_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group-ingress.html#cfn-elasticache-securitygroupingress-ec2securitygroupownerid
        """
        return pulumi.get(self, "ec2_security_group_owner_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SecurityGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html
    """
    def __init__(__self__, *,
                 description: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html
        :param str description: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html#cfn-elasticache-securitygroup-description
        """
        pulumi.set(__self__, "description", description)

    @property
    @pulumi.getter(name="Description")
    def description(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-security-group.html#cfn-elasticache-securitygroup-description
        """
        return pulumi.get(self, "description")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SubnetGroupAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class SubnetGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html
    """
    def __init__(__self__, *,
                 description: str,
                 subnet_ids: Sequence[str],
                 cache_subnet_group_name: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html
        :param str description: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-description
        :param Sequence[str] subnet_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-subnetids
        :param str cache_subnet_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-cachesubnetgroupname
        """
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "subnet_ids", subnet_ids)
        if cache_subnet_group_name is not None:
            pulumi.set(__self__, "cache_subnet_group_name", cache_subnet_group_name)

    @property
    @pulumi.getter(name="Description")
    def description(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-description
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="SubnetIds")
    def subnet_ids(self) -> Sequence[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-subnetids
        """
        return pulumi.get(self, "subnet_ids")

    @property
    @pulumi.getter(name="CacheSubnetGroupName")
    def cache_subnet_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-subnetgroup.html#cfn-elasticache-subnetgroup-cachesubnetgroupname
        """
        return pulumi.get(self, "cache_subnet_group_name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserAttributes(dict):
    def __init__(__self__, *,
                 arn: str,
                 authentication: 'outputs.UserAuthentication',
                 status: str,
                 user_group_ids: 'outputs.UserUserGroupIdList'):
        pulumi.set(__self__, "arn", arn)
        pulumi.set(__self__, "authentication", authentication)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "user_group_ids", user_group_ids)

    @property
    @pulumi.getter(name="Arn")
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="Authentication")
    def authentication(self) -> 'outputs.UserAuthentication':
        return pulumi.get(self, "authentication")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="UserGroupIds")
    def user_group_ids(self) -> 'outputs.UserUserGroupIdList':
        return pulumi.get(self, "user_group_ids")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserAuthentication(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html
    """
    def __init__(__self__, *,
                 password_count: Optional[int] = None,
                 type: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html
        :param int password_count: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html#cfn-elasticache-user-authentication-passwordcount
        :param str type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html#cfn-elasticache-user-authentication-type
        """
        if password_count is not None:
            pulumi.set(__self__, "password_count", password_count)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="PasswordCount")
    def password_count(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html#cfn-elasticache-user-authentication-passwordcount
        """
        return pulumi.get(self, "password_count")

    @property
    @pulumi.getter(name="Type")
    def type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-authentication.html#cfn-elasticache-user-authentication-type
        """
        return pulumi.get(self, "type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserGroupAttributes(dict):
    def __init__(__self__, *,
                 arn: str,
                 pending_changes: 'outputs.UserGroupUserGroupPendingChanges',
                 replication_group_ids: 'outputs.UserGroupReplicationGroupIdList',
                 status: str):
        pulumi.set(__self__, "arn", arn)
        pulumi.set(__self__, "pending_changes", pending_changes)
        pulumi.set(__self__, "replication_group_ids", replication_group_ids)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="Arn")
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="PendingChanges")
    def pending_changes(self) -> 'outputs.UserGroupUserGroupPendingChanges':
        return pulumi.get(self, "pending_changes")

    @property
    @pulumi.getter(name="ReplicationGroupIds")
    def replication_group_ids(self) -> 'outputs.UserGroupReplicationGroupIdList':
        return pulumi.get(self, "replication_group_ids")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> str:
        return pulumi.get(self, "status")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html
    """
    def __init__(__self__, *,
                 engine: str,
                 user_group_id: str,
                 user_ids: Optional['outputs.UserGroupUserIdList'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html
        :param str engine: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-engine
        :param str user_group_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-usergroupid
        :param 'UserGroupUserIdListArgs' user_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-userids
        """
        pulumi.set(__self__, "engine", engine)
        pulumi.set(__self__, "user_group_id", user_group_id)
        if user_ids is not None:
            pulumi.set(__self__, "user_ids", user_ids)

    @property
    @pulumi.getter(name="Engine")
    def engine(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-engine
        """
        return pulumi.get(self, "engine")

    @property
    @pulumi.getter(name="UserGroupId")
    def user_group_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-usergroupid
        """
        return pulumi.get(self, "user_group_id")

    @property
    @pulumi.getter(name="UserIds")
    def user_ids(self) -> Optional['outputs.UserGroupUserIdList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-usergroup.html#cfn-elasticache-usergroup-userids
        """
        return pulumi.get(self, "user_ids")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserGroupReplicationGroupIdList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-replicationgroupidlist.html
    """
    def __init__(__self__, *,
                 replication_group_id_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-replicationgroupidlist.html
        :param Sequence[str] replication_group_id_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-replicationgroupidlist.html#cfn-elasticache-usergroup-replicationgroupidlist-replicationgroupidlist
        """
        if replication_group_id_list is not None:
            pulumi.set(__self__, "replication_group_id_list", replication_group_id_list)

    @property
    @pulumi.getter(name="ReplicationGroupIdList")
    def replication_group_id_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-replicationgroupidlist.html#cfn-elasticache-usergroup-replicationgroupidlist-replicationgroupidlist
        """
        return pulumi.get(self, "replication_group_id_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserGroupUserGroupPendingChanges(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html
    """
    def __init__(__self__, *,
                 user_ids_to_add: Optional[Sequence[str]] = None,
                 user_ids_to_remove: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html
        :param Sequence[str] user_ids_to_add: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html#cfn-elasticache-usergroup-usergrouppendingchanges-useridstoadd
        :param Sequence[str] user_ids_to_remove: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html#cfn-elasticache-usergroup-usergrouppendingchanges-useridstoremove
        """
        if user_ids_to_add is not None:
            pulumi.set(__self__, "user_ids_to_add", user_ids_to_add)
        if user_ids_to_remove is not None:
            pulumi.set(__self__, "user_ids_to_remove", user_ids_to_remove)

    @property
    @pulumi.getter(name="UserIdsToAdd")
    def user_ids_to_add(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html#cfn-elasticache-usergroup-usergrouppendingchanges-useridstoadd
        """
        return pulumi.get(self, "user_ids_to_add")

    @property
    @pulumi.getter(name="UserIdsToRemove")
    def user_ids_to_remove(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-usergrouppendingchanges.html#cfn-elasticache-usergroup-usergrouppendingchanges-useridstoremove
        """
        return pulumi.get(self, "user_ids_to_remove")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserGroupUserIdList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-useridlist.html
    """
    def __init__(__self__, *,
                 user_id_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-useridlist.html
        :param Sequence[str] user_id_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-useridlist.html#cfn-elasticache-usergroup-useridlist-useridlist
        """
        if user_id_list is not None:
            pulumi.set(__self__, "user_id_list", user_id_list)

    @property
    @pulumi.getter(name="UserIdList")
    def user_id_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-usergroup-useridlist.html#cfn-elasticache-usergroup-useridlist-useridlist
        """
        return pulumi.get(self, "user_id_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserPasswordList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-passwordlist.html
    """
    def __init__(__self__, *,
                 password_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-passwordlist.html
        :param Sequence[str] password_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-passwordlist.html#cfn-elasticache-user-passwordlist-passwordlist
        """
        if password_list is not None:
            pulumi.set(__self__, "password_list", password_list)

    @property
    @pulumi.getter(name="PasswordList")
    def password_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-passwordlist.html#cfn-elasticache-user-passwordlist-passwordlist
        """
        return pulumi.get(self, "password_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html
    """
    def __init__(__self__, *,
                 engine: str,
                 user_id: str,
                 user_name: str,
                 access_string: Optional[str] = None,
                 no_password_required: Optional[bool] = None,
                 passwords: Optional['outputs.UserPasswordList'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html
        :param str engine: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-engine
        :param str user_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-userid
        :param str user_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-username
        :param str access_string: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-accessstring
        :param bool no_password_required: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-nopasswordrequired
        :param 'UserPasswordListArgs' passwords: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-passwords
        """
        pulumi.set(__self__, "engine", engine)
        pulumi.set(__self__, "user_id", user_id)
        pulumi.set(__self__, "user_name", user_name)
        if access_string is not None:
            pulumi.set(__self__, "access_string", access_string)
        if no_password_required is not None:
            pulumi.set(__self__, "no_password_required", no_password_required)
        if passwords is not None:
            pulumi.set(__self__, "passwords", passwords)

    @property
    @pulumi.getter(name="Engine")
    def engine(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-engine
        """
        return pulumi.get(self, "engine")

    @property
    @pulumi.getter(name="UserId")
    def user_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-userid
        """
        return pulumi.get(self, "user_id")

    @property
    @pulumi.getter(name="UserName")
    def user_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-username
        """
        return pulumi.get(self, "user_name")

    @property
    @pulumi.getter(name="AccessString")
    def access_string(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-accessstring
        """
        return pulumi.get(self, "access_string")

    @property
    @pulumi.getter(name="NoPasswordRequired")
    def no_password_required(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-nopasswordrequired
        """
        return pulumi.get(self, "no_password_required")

    @property
    @pulumi.getter(name="Passwords")
    def passwords(self) -> Optional['outputs.UserPasswordList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticache-user.html#cfn-elasticache-user-passwords
        """
        return pulumi.get(self, "passwords")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class UserUserGroupIdList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-usergroupidlist.html
    """
    def __init__(__self__, *,
                 user_group_id_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-usergroupidlist.html
        :param Sequence[str] user_group_id_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-usergroupidlist.html#cfn-elasticache-user-usergroupidlist-usergroupidlist
        """
        if user_group_id_list is not None:
            pulumi.set(__self__, "user_group_id_list", user_group_id_list)

    @property
    @pulumi.getter(name="UserGroupIdList")
    def user_group_id_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-elasticache-user-usergroupidlist.html#cfn-elasticache-user-usergroupidlist-usergroupidlist
        """
        return pulumi.get(self, "user_group_id_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


