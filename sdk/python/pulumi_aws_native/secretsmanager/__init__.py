# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .resource_policy import *
from .rotation_schedule import *
from .secret import *
from .secret_target_attachment import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "aws-native:SecretsManager:ResourcePolicy":
                return ResourcePolicy(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:SecretsManager:RotationSchedule":
                return RotationSchedule(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:SecretsManager:Secret":
                return Secret(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "aws-native:SecretsManager:SecretTargetAttachment":
                return SecretTargetAttachment(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("aws-native", "SecretsManager", _module_instance)

_register_module()
