# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from .. import outputs as _root_outputs

__all__ = [
    'ResolverEndpointAttributes',
    'ResolverEndpointIpAddressRequest',
    'ResolverEndpointProperties',
    'ResolverQueryLoggingConfigAssociationAttributes',
    'ResolverQueryLoggingConfigAssociationProperties',
    'ResolverQueryLoggingConfigAttributes',
    'ResolverQueryLoggingConfigProperties',
    'ResolverRuleAssociationAttributes',
    'ResolverRuleAssociationProperties',
    'ResolverRuleAttributes',
    'ResolverRuleProperties',
    'ResolverRuleTargetAddress',
]

@pulumi.output_type
class ResolverEndpointAttributes(dict):
    def __init__(__self__, *,
                 arn: str,
                 direction: str,
                 host_vpc_id: str,
                 ip_address_count: str,
                 name: str,
                 resolver_endpoint_id: str):
        pulumi.set(__self__, "arn", arn)
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "host_vpc_id", host_vpc_id)
        pulumi.set(__self__, "ip_address_count", ip_address_count)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "resolver_endpoint_id", resolver_endpoint_id)

    @property
    @pulumi.getter(name="Arn")
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="Direction")
    def direction(self) -> str:
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="HostVPCId")
    def host_vpc_id(self) -> str:
        return pulumi.get(self, "host_vpc_id")

    @property
    @pulumi.getter(name="IpAddressCount")
    def ip_address_count(self) -> str:
        return pulumi.get(self, "ip_address_count")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ResolverEndpointId")
    def resolver_endpoint_id(self) -> str:
        return pulumi.get(self, "resolver_endpoint_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverEndpointIpAddressRequest(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
    """
    def __init__(__self__, *,
                 subnet_id: str,
                 ip: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
        :param str subnet_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
        :param str ip: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
        """
        pulumi.set(__self__, "subnet_id", subnet_id)
        if ip is not None:
            pulumi.set(__self__, "ip", ip)

    @property
    @pulumi.getter(name="SubnetId")
    def subnet_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
        """
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="Ip")
    def ip(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
        """
        return pulumi.get(self, "ip")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverEndpointProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
    """
    def __init__(__self__, *,
                 direction: str,
                 ip_addresses: Sequence['outputs.ResolverEndpointIpAddressRequest'],
                 security_group_ids: Sequence[str],
                 name: Optional[str] = None,
                 tags: Optional[Sequence['_root_outputs.Tag']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
        :param str direction: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
        :param Sequence['ResolverEndpointIpAddressRequestArgs'] ip_addresses: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
        :param Sequence[str] security_group_ids: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
        :param Sequence['_root_inputs.TagArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
        """
        pulumi.set(__self__, "direction", direction)
        pulumi.set(__self__, "ip_addresses", ip_addresses)
        pulumi.set(__self__, "security_group_ids", security_group_ids)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="Direction")
    def direction(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
        """
        return pulumi.get(self, "direction")

    @property
    @pulumi.getter(name="IpAddresses")
    def ip_addresses(self) -> Sequence['outputs.ResolverEndpointIpAddressRequest']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
        """
        return pulumi.get(self, "ip_addresses")

    @property
    @pulumi.getter(name="SecurityGroupIds")
    def security_group_ids(self) -> Sequence[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
        """
        return pulumi.get(self, "security_group_ids")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
        """
        return pulumi.get(self, "tags")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverQueryLoggingConfigAssociationAttributes(dict):
    def __init__(__self__, *,
                 creation_time: str,
                 error: str,
                 error_message: str,
                 id: str,
                 status: str):
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "error", error)
        pulumi.set(__self__, "error_message", error_message)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="CreationTime")
    def creation_time(self) -> str:
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="Error")
    def error(self) -> str:
        return pulumi.get(self, "error")

    @property
    @pulumi.getter(name="ErrorMessage")
    def error_message(self) -> str:
        return pulumi.get(self, "error_message")

    @property
    @pulumi.getter(name="Id")
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> str:
        return pulumi.get(self, "status")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverQueryLoggingConfigAssociationProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
    """
    def __init__(__self__, *,
                 resolver_query_log_config_id: Optional[str] = None,
                 resource_id: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
        :param str resolver_query_log_config_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
        :param str resource_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
        """
        if resolver_query_log_config_id is not None:
            pulumi.set(__self__, "resolver_query_log_config_id", resolver_query_log_config_id)
        if resource_id is not None:
            pulumi.set(__self__, "resource_id", resource_id)

    @property
    @pulumi.getter(name="ResolverQueryLogConfigId")
    def resolver_query_log_config_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
        """
        return pulumi.get(self, "resolver_query_log_config_id")

    @property
    @pulumi.getter(name="ResourceId")
    def resource_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
        """
        return pulumi.get(self, "resource_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverQueryLoggingConfigAttributes(dict):
    def __init__(__self__, *,
                 arn: str,
                 association_count: int,
                 creation_time: str,
                 creator_request_id: str,
                 id: str,
                 owner_id: str,
                 share_status: str,
                 status: str):
        pulumi.set(__self__, "arn", arn)
        pulumi.set(__self__, "association_count", association_count)
        pulumi.set(__self__, "creation_time", creation_time)
        pulumi.set(__self__, "creator_request_id", creator_request_id)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "owner_id", owner_id)
        pulumi.set(__self__, "share_status", share_status)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="Arn")
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="AssociationCount")
    def association_count(self) -> int:
        return pulumi.get(self, "association_count")

    @property
    @pulumi.getter(name="CreationTime")
    def creation_time(self) -> str:
        return pulumi.get(self, "creation_time")

    @property
    @pulumi.getter(name="CreatorRequestId")
    def creator_request_id(self) -> str:
        return pulumi.get(self, "creator_request_id")

    @property
    @pulumi.getter(name="Id")
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="OwnerId")
    def owner_id(self) -> str:
        return pulumi.get(self, "owner_id")

    @property
    @pulumi.getter(name="ShareStatus")
    def share_status(self) -> str:
        return pulumi.get(self, "share_status")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> str:
        return pulumi.get(self, "status")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverQueryLoggingConfigProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
    """
    def __init__(__self__, *,
                 destination_arn: Optional[str] = None,
                 name: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
        :param str destination_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
        """
        if destination_arn is not None:
            pulumi.set(__self__, "destination_arn", destination_arn)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="DestinationArn")
    def destination_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
        """
        return pulumi.get(self, "destination_arn")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverRuleAssociationAttributes(dict):
    def __init__(__self__, *,
                 name: str,
                 resolver_rule_association_id: str,
                 resolver_rule_id: str,
                 vpc_id: str):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "resolver_rule_association_id", resolver_rule_association_id)
        pulumi.set(__self__, "resolver_rule_id", resolver_rule_id)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ResolverRuleAssociationId")
    def resolver_rule_association_id(self) -> str:
        return pulumi.get(self, "resolver_rule_association_id")

    @property
    @pulumi.getter(name="ResolverRuleId")
    def resolver_rule_id(self) -> str:
        return pulumi.get(self, "resolver_rule_id")

    @property
    @pulumi.getter(name="VPCId")
    def vpc_id(self) -> str:
        return pulumi.get(self, "vpc_id")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverRuleAssociationProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
    """
    def __init__(__self__, *,
                 resolver_rule_id: str,
                 vpc_id: str,
                 name: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
        :param str resolver_rule_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
        :param str vpc_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
        """
        pulumi.set(__self__, "resolver_rule_id", resolver_rule_id)
        pulumi.set(__self__, "vpc_id", vpc_id)
        if name is not None:
            pulumi.set(__self__, "name", name)

    @property
    @pulumi.getter(name="ResolverRuleId")
    def resolver_rule_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
        """
        return pulumi.get(self, "resolver_rule_id")

    @property
    @pulumi.getter(name="VPCId")
    def vpc_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
        """
        return pulumi.get(self, "vpc_id")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
        """
        return pulumi.get(self, "name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverRuleAttributes(dict):
    def __init__(__self__, *,
                 arn: str,
                 domain_name: str,
                 name: str,
                 resolver_endpoint_id: str,
                 resolver_rule_id: str,
                 target_ips: str):
        pulumi.set(__self__, "arn", arn)
        pulumi.set(__self__, "domain_name", domain_name)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "resolver_endpoint_id", resolver_endpoint_id)
        pulumi.set(__self__, "resolver_rule_id", resolver_rule_id)
        pulumi.set(__self__, "target_ips", target_ips)

    @property
    @pulumi.getter(name="Arn")
    def arn(self) -> str:
        return pulumi.get(self, "arn")

    @property
    @pulumi.getter(name="DomainName")
    def domain_name(self) -> str:
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ResolverEndpointId")
    def resolver_endpoint_id(self) -> str:
        return pulumi.get(self, "resolver_endpoint_id")

    @property
    @pulumi.getter(name="ResolverRuleId")
    def resolver_rule_id(self) -> str:
        return pulumi.get(self, "resolver_rule_id")

    @property
    @pulumi.getter(name="TargetIps")
    def target_ips(self) -> str:
        return pulumi.get(self, "target_ips")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverRuleProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
    """
    def __init__(__self__, *,
                 domain_name: str,
                 rule_type: str,
                 name: Optional[str] = None,
                 resolver_endpoint_id: Optional[str] = None,
                 tags: Optional[Sequence['_root_outputs.Tag']] = None,
                 target_ips: Optional[Sequence['outputs.ResolverRuleTargetAddress']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
        :param str domain_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
        :param str rule_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
        :param str resolver_endpoint_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
        :param Sequence['_root_inputs.TagArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
        :param Sequence['ResolverRuleTargetAddressArgs'] target_ips: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
        """
        pulumi.set(__self__, "domain_name", domain_name)
        pulumi.set(__self__, "rule_type", rule_type)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if resolver_endpoint_id is not None:
            pulumi.set(__self__, "resolver_endpoint_id", resolver_endpoint_id)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if target_ips is not None:
            pulumi.set(__self__, "target_ips", target_ips)

    @property
    @pulumi.getter(name="DomainName")
    def domain_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
        """
        return pulumi.get(self, "domain_name")

    @property
    @pulumi.getter(name="RuleType")
    def rule_type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
        """
        return pulumi.get(self, "rule_type")

    @property
    @pulumi.getter(name="Name")
    def name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ResolverEndpointId")
    def resolver_endpoint_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
        """
        return pulumi.get(self, "resolver_endpoint_id")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="TargetIps")
    def target_ips(self) -> Optional[Sequence['outputs.ResolverRuleTargetAddress']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
        """
        return pulumi.get(self, "target_ips")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ResolverRuleTargetAddress(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
    """
    def __init__(__self__, *,
                 ip: str,
                 port: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
        :param str ip: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
        :param str port: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
        """
        pulumi.set(__self__, "ip", ip)
        if port is not None:
            pulumi.set(__self__, "port", port)

    @property
    @pulumi.getter(name="Ip")
    def ip(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
        """
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter(name="Port")
    def port(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
        """
        return pulumi.get(self, "port")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


