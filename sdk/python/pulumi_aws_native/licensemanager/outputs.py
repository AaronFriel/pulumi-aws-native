# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs
from .. import outputs as _root_outputs

__all__ = [
    'GrantAllowedOperationList',
    'GrantArnList',
    'GrantAttributes',
    'GrantFilter',
    'GrantFilterList',
    'GrantProperties',
    'GrantStringList',
    'GrantTagList',
    'LicenseArnList',
    'LicenseAttributes',
    'LicenseBorrowConfiguration',
    'LicenseConsumptionConfiguration',
    'LicenseEntitlement',
    'LicenseEntitlementList',
    'LicenseFilter',
    'LicenseFilterList',
    'LicenseIssuerData',
    'LicenseMetadata',
    'LicenseMetadataList',
    'LicenseProperties',
    'LicenseProvisionalConfiguration',
    'LicenseRule',
    'LicenseRuleList',
    'LicenseStringList',
    'LicenseTagList',
    'LicenseValidityDateFormat',
]

@pulumi.output_type
class GrantAllowedOperationList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
    """
    def __init__(__self__, *,
                 allowed_operation_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
        :param Sequence[str] allowed_operation_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
        """
        if allowed_operation_list is not None:
            pulumi.set(__self__, "allowed_operation_list", allowed_operation_list)

    @property
    @pulumi.getter(name="AllowedOperationList")
    def allowed_operation_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
        """
        return pulumi.get(self, "allowed_operation_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantArnList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
    """
    def __init__(__self__, *,
                 arn_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
        :param Sequence[str] arn_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
        """
        if arn_list is not None:
            pulumi.set(__self__, "arn_list", arn_list)

    @property
    @pulumi.getter(name="ArnList")
    def arn_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
        """
        return pulumi.get(self, "arn_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantAttributes(dict):
    def __init__(__self__, *,
                 grant_arn: str):
        pulumi.set(__self__, "grant_arn", grant_arn)

    @property
    @pulumi.getter(name="GrantArn")
    def grant_arn(self) -> str:
        return pulumi.get(self, "grant_arn")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantFilter(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
    """
    def __init__(__self__, *,
                 name: str,
                 values: 'outputs.GrantStringList'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
        :param 'GrantStringListArgs' values: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Values")
    def values(self) -> 'outputs.GrantStringList':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
        """
        return pulumi.get(self, "values")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantFilterList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
    """
    def __init__(__self__, *,
                 filter_list: Optional[Sequence['outputs.GrantFilter']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
        :param Sequence['GrantFilterArgs'] filter_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
        """
        if filter_list is not None:
            pulumi.set(__self__, "filter_list", filter_list)

    @property
    @pulumi.getter(name="FilterList")
    def filter_list(self) -> Optional[Sequence['outputs.GrantFilter']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
        """
        return pulumi.get(self, "filter_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html
    """
    def __init__(__self__, *,
                 allowed_operations: Optional['outputs.GrantAllowedOperationList'] = None,
                 client_token: Optional[str] = None,
                 filters: Optional['outputs.GrantFilterList'] = None,
                 grant_arns: Optional['outputs.GrantArnList'] = None,
                 grant_name: Optional[str] = None,
                 grant_status: Optional[str] = None,
                 granted_operations: Optional['outputs.GrantAllowedOperationList'] = None,
                 grantee_principal_arn: Optional[str] = None,
                 home_region: Optional[str] = None,
                 license_arn: Optional[str] = None,
                 max_results: Optional[int] = None,
                 next_token: Optional[str] = None,
                 parent_arn: Optional[str] = None,
                 principals: Optional['outputs.GrantArnList'] = None,
                 source_version: Optional[str] = None,
                 status: Optional[str] = None,
                 status_reason: Optional[str] = None,
                 tags: Optional['outputs.GrantTagList'] = None,
                 version: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html
        :param 'GrantAllowedOperationListArgs' allowed_operations: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-allowedoperations
        :param str client_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-clienttoken
        :param 'GrantFilterListArgs' filters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-filters
        :param 'GrantArnListArgs' grant_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantarns
        :param str grant_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantname
        :param str grant_status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantstatus
        :param 'GrantAllowedOperationListArgs' granted_operations: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantedoperations
        :param str grantee_principal_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-granteeprincipalarn
        :param str home_region: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-homeregion
        :param str license_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-licensearn
        :param int max_results: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-maxresults
        :param str next_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-nexttoken
        :param str parent_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-parentarn
        :param 'GrantArnListArgs' principals: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-principals
        :param str source_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-sourceversion
        :param str status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-status
        :param str status_reason: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-statusreason
        :param 'GrantTagListArgs' tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-tags
        :param str version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-version
        """
        if allowed_operations is not None:
            pulumi.set(__self__, "allowed_operations", allowed_operations)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if filters is not None:
            pulumi.set(__self__, "filters", filters)
        if grant_arns is not None:
            pulumi.set(__self__, "grant_arns", grant_arns)
        if grant_name is not None:
            pulumi.set(__self__, "grant_name", grant_name)
        if grant_status is not None:
            pulumi.set(__self__, "grant_status", grant_status)
        if granted_operations is not None:
            pulumi.set(__self__, "granted_operations", granted_operations)
        if grantee_principal_arn is not None:
            pulumi.set(__self__, "grantee_principal_arn", grantee_principal_arn)
        if home_region is not None:
            pulumi.set(__self__, "home_region", home_region)
        if license_arn is not None:
            pulumi.set(__self__, "license_arn", license_arn)
        if max_results is not None:
            pulumi.set(__self__, "max_results", max_results)
        if next_token is not None:
            pulumi.set(__self__, "next_token", next_token)
        if parent_arn is not None:
            pulumi.set(__self__, "parent_arn", parent_arn)
        if principals is not None:
            pulumi.set(__self__, "principals", principals)
        if source_version is not None:
            pulumi.set(__self__, "source_version", source_version)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_reason is not None:
            pulumi.set(__self__, "status_reason", status_reason)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="AllowedOperations")
    def allowed_operations(self) -> Optional['outputs.GrantAllowedOperationList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-allowedoperations
        """
        return pulumi.get(self, "allowed_operations")

    @property
    @pulumi.getter(name="ClientToken")
    def client_token(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-clienttoken
        """
        return pulumi.get(self, "client_token")

    @property
    @pulumi.getter(name="Filters")
    def filters(self) -> Optional['outputs.GrantFilterList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-filters
        """
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="GrantArns")
    def grant_arns(self) -> Optional['outputs.GrantArnList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantarns
        """
        return pulumi.get(self, "grant_arns")

    @property
    @pulumi.getter(name="GrantName")
    def grant_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantname
        """
        return pulumi.get(self, "grant_name")

    @property
    @pulumi.getter(name="GrantStatus")
    def grant_status(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantstatus
        """
        return pulumi.get(self, "grant_status")

    @property
    @pulumi.getter(name="GrantedOperations")
    def granted_operations(self) -> Optional['outputs.GrantAllowedOperationList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantedoperations
        """
        return pulumi.get(self, "granted_operations")

    @property
    @pulumi.getter(name="GranteePrincipalArn")
    def grantee_principal_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-granteeprincipalarn
        """
        return pulumi.get(self, "grantee_principal_arn")

    @property
    @pulumi.getter(name="HomeRegion")
    def home_region(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-homeregion
        """
        return pulumi.get(self, "home_region")

    @property
    @pulumi.getter(name="LicenseArn")
    def license_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-licensearn
        """
        return pulumi.get(self, "license_arn")

    @property
    @pulumi.getter(name="MaxResults")
    def max_results(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-maxresults
        """
        return pulumi.get(self, "max_results")

    @property
    @pulumi.getter(name="NextToken")
    def next_token(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-nexttoken
        """
        return pulumi.get(self, "next_token")

    @property
    @pulumi.getter(name="ParentArn")
    def parent_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-parentarn
        """
        return pulumi.get(self, "parent_arn")

    @property
    @pulumi.getter(name="Principals")
    def principals(self) -> Optional['outputs.GrantArnList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-principals
        """
        return pulumi.get(self, "principals")

    @property
    @pulumi.getter(name="SourceVersion")
    def source_version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-sourceversion
        """
        return pulumi.get(self, "source_version")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-status
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="StatusReason")
    def status_reason(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-statusreason
        """
        return pulumi.get(self, "status_reason")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional['outputs.GrantTagList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="Version")
    def version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-version
        """
        return pulumi.get(self, "version")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantStringList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
    """
    def __init__(__self__, *,
                 string_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
        :param Sequence[str] string_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
        """
        if string_list is not None:
            pulumi.set(__self__, "string_list", string_list)

    @property
    @pulumi.getter(name="StringList")
    def string_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
        """
        return pulumi.get(self, "string_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class GrantTagList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
    """
    def __init__(__self__, *,
                 tag_list: Optional[Sequence['_root_outputs.Tag']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
        :param Sequence['_root_inputs.TagArgs'] tag_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
        """
        if tag_list is not None:
            pulumi.set(__self__, "tag_list", tag_list)

    @property
    @pulumi.getter(name="TagList")
    def tag_list(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
        """
        return pulumi.get(self, "tag_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseArnList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
    """
    def __init__(__self__, *,
                 arn_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
        :param Sequence[str] arn_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
        """
        if arn_list is not None:
            pulumi.set(__self__, "arn_list", arn_list)

    @property
    @pulumi.getter(name="ArnList")
    def arn_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
        """
        return pulumi.get(self, "arn_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseAttributes(dict):
    def __init__(__self__, *,
                 license_arn: str):
        pulumi.set(__self__, "license_arn", license_arn)

    @property
    @pulumi.getter(name="LicenseArn")
    def license_arn(self) -> str:
        return pulumi.get(self, "license_arn")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseBorrowConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
    """
    def __init__(__self__, *,
                 allow_early_check_in: bool,
                 max_time_to_live_in_minutes: int):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
        :param bool allow_early_check_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
        :param int max_time_to_live_in_minutes: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
        """
        pulumi.set(__self__, "allow_early_check_in", allow_early_check_in)
        pulumi.set(__self__, "max_time_to_live_in_minutes", max_time_to_live_in_minutes)

    @property
    @pulumi.getter(name="AllowEarlyCheckIn")
    def allow_early_check_in(self) -> bool:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
        """
        return pulumi.get(self, "allow_early_check_in")

    @property
    @pulumi.getter(name="MaxTimeToLiveInMinutes")
    def max_time_to_live_in_minutes(self) -> int:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
        """
        return pulumi.get(self, "max_time_to_live_in_minutes")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseConsumptionConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
    """
    def __init__(__self__, *,
                 borrow_configuration: Optional['outputs.LicenseBorrowConfiguration'] = None,
                 provisional_configuration: Optional['outputs.LicenseProvisionalConfiguration'] = None,
                 renew_type: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
        :param 'LicenseBorrowConfigurationArgs' borrow_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
        :param 'LicenseProvisionalConfigurationArgs' provisional_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
        :param str renew_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
        """
        if borrow_configuration is not None:
            pulumi.set(__self__, "borrow_configuration", borrow_configuration)
        if provisional_configuration is not None:
            pulumi.set(__self__, "provisional_configuration", provisional_configuration)
        if renew_type is not None:
            pulumi.set(__self__, "renew_type", renew_type)

    @property
    @pulumi.getter(name="BorrowConfiguration")
    def borrow_configuration(self) -> Optional['outputs.LicenseBorrowConfiguration']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
        """
        return pulumi.get(self, "borrow_configuration")

    @property
    @pulumi.getter(name="ProvisionalConfiguration")
    def provisional_configuration(self) -> Optional['outputs.LicenseProvisionalConfiguration']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
        """
        return pulumi.get(self, "provisional_configuration")

    @property
    @pulumi.getter(name="RenewType")
    def renew_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
        """
        return pulumi.get(self, "renew_type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseEntitlement(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
    """
    def __init__(__self__, *,
                 name: str,
                 unit: str,
                 allow_check_in: Optional[bool] = None,
                 checkout_rules: Optional['outputs.LicenseRuleList'] = None,
                 max_count: Optional[int] = None,
                 overage: Optional[bool] = None,
                 value: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
        :param str unit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
        :param bool allow_check_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
        :param 'LicenseRuleListArgs' checkout_rules: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
        :param int max_count: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
        :param bool overage: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
        :param str value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "unit", unit)
        if allow_check_in is not None:
            pulumi.set(__self__, "allow_check_in", allow_check_in)
        if checkout_rules is not None:
            pulumi.set(__self__, "checkout_rules", checkout_rules)
        if max_count is not None:
            pulumi.set(__self__, "max_count", max_count)
        if overage is not None:
            pulumi.set(__self__, "overage", overage)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Unit")
    def unit(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
        """
        return pulumi.get(self, "unit")

    @property
    @pulumi.getter(name="AllowCheckIn")
    def allow_check_in(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
        """
        return pulumi.get(self, "allow_check_in")

    @property
    @pulumi.getter(name="CheckoutRules")
    def checkout_rules(self) -> Optional['outputs.LicenseRuleList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
        """
        return pulumi.get(self, "checkout_rules")

    @property
    @pulumi.getter(name="MaxCount")
    def max_count(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
        """
        return pulumi.get(self, "max_count")

    @property
    @pulumi.getter(name="Overage")
    def overage(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
        """
        return pulumi.get(self, "overage")

    @property
    @pulumi.getter(name="Value")
    def value(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
        """
        return pulumi.get(self, "value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseEntitlementList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
    """
    def __init__(__self__, *,
                 entitlement_list: Optional[Sequence['outputs.LicenseEntitlement']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
        :param Sequence['LicenseEntitlementArgs'] entitlement_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
        """
        if entitlement_list is not None:
            pulumi.set(__self__, "entitlement_list", entitlement_list)

    @property
    @pulumi.getter(name="EntitlementList")
    def entitlement_list(self) -> Optional[Sequence['outputs.LicenseEntitlement']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
        """
        return pulumi.get(self, "entitlement_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseFilter(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
    """
    def __init__(__self__, *,
                 name: str,
                 values: 'outputs.LicenseStringList'):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
        :param 'LicenseStringListArgs' values: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Values")
    def values(self) -> 'outputs.LicenseStringList':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
        """
        return pulumi.get(self, "values")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseFilterList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
    """
    def __init__(__self__, *,
                 filter_list: Optional[Sequence['outputs.LicenseFilter']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
        :param Sequence['LicenseFilterArgs'] filter_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
        """
        if filter_list is not None:
            pulumi.set(__self__, "filter_list", filter_list)

    @property
    @pulumi.getter(name="FilterList")
    def filter_list(self) -> Optional[Sequence['outputs.LicenseFilter']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
        """
        return pulumi.get(self, "filter_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseIssuerData(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
    """
    def __init__(__self__, *,
                 name: str,
                 sign_key: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
        :param str sign_key: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
        """
        pulumi.set(__self__, "name", name)
        if sign_key is not None:
            pulumi.set(__self__, "sign_key", sign_key)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="SignKey")
    def sign_key(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
        """
        return pulumi.get(self, "sign_key")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseMetadata(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
    """
    def __init__(__self__, *,
                 name: str,
                 value: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
        :param str value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Value")
    def value(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
        """
        return pulumi.get(self, "value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseMetadataList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
    """
    def __init__(__self__, *,
                 metadata_list: Optional[Sequence['outputs.LicenseMetadata']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
        :param Sequence['LicenseMetadataArgs'] metadata_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
        """
        if metadata_list is not None:
            pulumi.set(__self__, "metadata_list", metadata_list)

    @property
    @pulumi.getter(name="MetadataList")
    def metadata_list(self) -> Optional[Sequence['outputs.LicenseMetadata']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
        """
        return pulumi.get(self, "metadata_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html
    """
    def __init__(__self__, *,
                 consumption_configuration: 'outputs.LicenseConsumptionConfiguration',
                 entitlements: 'outputs.LicenseEntitlementList',
                 home_region: str,
                 issuer: 'outputs.LicenseIssuerData',
                 validity: 'outputs.LicenseValidityDateFormat',
                 beneficiary: Optional[str] = None,
                 client_token: Optional[str] = None,
                 filters: Optional['outputs.LicenseFilterList'] = None,
                 license_arns: Optional['outputs.LicenseArnList'] = None,
                 license_metadata: Optional['outputs.LicenseMetadataList'] = None,
                 license_name: Optional[str] = None,
                 max_results: Optional[int] = None,
                 next_token: Optional[str] = None,
                 product_name: Optional[str] = None,
                 product_sku: Optional[str] = None,
                 source_version: Optional[str] = None,
                 status: Optional[str] = None,
                 tags: Optional['outputs.LicenseTagList'] = None,
                 version: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html
        :param 'LicenseConsumptionConfigurationArgs' consumption_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-consumptionconfiguration
        :param 'LicenseEntitlementListArgs' entitlements: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-entitlements
        :param str home_region: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-homeregion
        :param 'LicenseIssuerDataArgs' issuer: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-issuer
        :param 'LicenseValidityDateFormatArgs' validity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-validity
        :param str beneficiary: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-beneficiary
        :param str client_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-clienttoken
        :param 'LicenseFilterListArgs' filters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-filters
        :param 'LicenseArnListArgs' license_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensearns
        :param 'LicenseMetadataListArgs' license_metadata: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensemetadata
        :param str license_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensename
        :param int max_results: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-maxresults
        :param str next_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-nexttoken
        :param str product_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productname
        :param str product_sku: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productsku
        :param str source_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-sourceversion
        :param str status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-status
        :param 'LicenseTagListArgs' tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-tags
        :param str version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-version
        """
        pulumi.set(__self__, "consumption_configuration", consumption_configuration)
        pulumi.set(__self__, "entitlements", entitlements)
        pulumi.set(__self__, "home_region", home_region)
        pulumi.set(__self__, "issuer", issuer)
        pulumi.set(__self__, "validity", validity)
        if beneficiary is not None:
            pulumi.set(__self__, "beneficiary", beneficiary)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if filters is not None:
            pulumi.set(__self__, "filters", filters)
        if license_arns is not None:
            pulumi.set(__self__, "license_arns", license_arns)
        if license_metadata is not None:
            pulumi.set(__self__, "license_metadata", license_metadata)
        if license_name is not None:
            pulumi.set(__self__, "license_name", license_name)
        if max_results is not None:
            pulumi.set(__self__, "max_results", max_results)
        if next_token is not None:
            pulumi.set(__self__, "next_token", next_token)
        if product_name is not None:
            pulumi.set(__self__, "product_name", product_name)
        if product_sku is not None:
            pulumi.set(__self__, "product_sku", product_sku)
        if source_version is not None:
            pulumi.set(__self__, "source_version", source_version)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="ConsumptionConfiguration")
    def consumption_configuration(self) -> 'outputs.LicenseConsumptionConfiguration':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-consumptionconfiguration
        """
        return pulumi.get(self, "consumption_configuration")

    @property
    @pulumi.getter(name="Entitlements")
    def entitlements(self) -> 'outputs.LicenseEntitlementList':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-entitlements
        """
        return pulumi.get(self, "entitlements")

    @property
    @pulumi.getter(name="HomeRegion")
    def home_region(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-homeregion
        """
        return pulumi.get(self, "home_region")

    @property
    @pulumi.getter(name="Issuer")
    def issuer(self) -> 'outputs.LicenseIssuerData':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-issuer
        """
        return pulumi.get(self, "issuer")

    @property
    @pulumi.getter(name="Validity")
    def validity(self) -> 'outputs.LicenseValidityDateFormat':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-validity
        """
        return pulumi.get(self, "validity")

    @property
    @pulumi.getter(name="Beneficiary")
    def beneficiary(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-beneficiary
        """
        return pulumi.get(self, "beneficiary")

    @property
    @pulumi.getter(name="ClientToken")
    def client_token(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-clienttoken
        """
        return pulumi.get(self, "client_token")

    @property
    @pulumi.getter(name="Filters")
    def filters(self) -> Optional['outputs.LicenseFilterList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-filters
        """
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter(name="LicenseArns")
    def license_arns(self) -> Optional['outputs.LicenseArnList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensearns
        """
        return pulumi.get(self, "license_arns")

    @property
    @pulumi.getter(name="LicenseMetadata")
    def license_metadata(self) -> Optional['outputs.LicenseMetadataList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensemetadata
        """
        return pulumi.get(self, "license_metadata")

    @property
    @pulumi.getter(name="LicenseName")
    def license_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensename
        """
        return pulumi.get(self, "license_name")

    @property
    @pulumi.getter(name="MaxResults")
    def max_results(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-maxresults
        """
        return pulumi.get(self, "max_results")

    @property
    @pulumi.getter(name="NextToken")
    def next_token(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-nexttoken
        """
        return pulumi.get(self, "next_token")

    @property
    @pulumi.getter(name="ProductName")
    def product_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productname
        """
        return pulumi.get(self, "product_name")

    @property
    @pulumi.getter(name="ProductSKU")
    def product_sku(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productsku
        """
        return pulumi.get(self, "product_sku")

    @property
    @pulumi.getter(name="SourceVersion")
    def source_version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-sourceversion
        """
        return pulumi.get(self, "source_version")

    @property
    @pulumi.getter(name="Status")
    def status(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-status
        """
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional['outputs.LicenseTagList']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="Version")
    def version(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-version
        """
        return pulumi.get(self, "version")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseProvisionalConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
    """
    def __init__(__self__, *,
                 max_time_to_live_in_minutes: int):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
        :param int max_time_to_live_in_minutes: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
        """
        pulumi.set(__self__, "max_time_to_live_in_minutes", max_time_to_live_in_minutes)

    @property
    @pulumi.getter(name="MaxTimeToLiveInMinutes")
    def max_time_to_live_in_minutes(self) -> int:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
        """
        return pulumi.get(self, "max_time_to_live_in_minutes")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseRule(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
    """
    def __init__(__self__, *,
                 name: str,
                 unit: str,
                 value: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
        :param str unit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
        :param str value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "unit", unit)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Unit")
    def unit(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
        """
        return pulumi.get(self, "unit")

    @property
    @pulumi.getter(name="Value")
    def value(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
        """
        return pulumi.get(self, "value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseRuleList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
    """
    def __init__(__self__, *,
                 rule_list: Optional[Sequence['outputs.LicenseRule']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
        :param Sequence['LicenseRuleArgs'] rule_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
        """
        if rule_list is not None:
            pulumi.set(__self__, "rule_list", rule_list)

    @property
    @pulumi.getter(name="RuleList")
    def rule_list(self) -> Optional[Sequence['outputs.LicenseRule']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
        """
        return pulumi.get(self, "rule_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseStringList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
    """
    def __init__(__self__, *,
                 string_list: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
        :param Sequence[str] string_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
        """
        if string_list is not None:
            pulumi.set(__self__, "string_list", string_list)

    @property
    @pulumi.getter(name="StringList")
    def string_list(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
        """
        return pulumi.get(self, "string_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseTagList(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
    """
    def __init__(__self__, *,
                 tag_list: Optional[Sequence['_root_outputs.Tag']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
        :param Sequence['_root_inputs.TagArgs'] tag_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
        """
        if tag_list is not None:
            pulumi.set(__self__, "tag_list", tag_list)

    @property
    @pulumi.getter(name="TagList")
    def tag_list(self) -> Optional[Sequence['_root_outputs.Tag']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
        """
        return pulumi.get(self, "tag_list")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LicenseValidityDateFormat(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
    """
    def __init__(__self__, *,
                 begin: str,
                 end: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
        :param str begin: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
        :param str end: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
        """
        pulumi.set(__self__, "begin", begin)
        pulumi.set(__self__, "end", end)

    @property
    @pulumi.getter(name="Begin")
    def begin(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
        """
        return pulumi.get(self, "begin")

    @property
    @pulumi.getter(name="End")
    def end(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
        """
        return pulumi.get(self, "end")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


