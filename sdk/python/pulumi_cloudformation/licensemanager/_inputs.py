# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from .. import _inputs as _root_inputs

__all__ = [
    'GrantAllowedOperationListArgs',
    'GrantArnListArgs',
    'GrantFilterArgs',
    'GrantFilterListArgs',
    'GrantPropertiesArgs',
    'GrantStringListArgs',
    'GrantTagListArgs',
    'LicenseArnListArgs',
    'LicenseBorrowConfigurationArgs',
    'LicenseConsumptionConfigurationArgs',
    'LicenseEntitlementArgs',
    'LicenseEntitlementListArgs',
    'LicenseFilterArgs',
    'LicenseFilterListArgs',
    'LicenseIssuerDataArgs',
    'LicenseMetadataArgs',
    'LicenseMetadataListArgs',
    'LicensePropertiesArgs',
    'LicenseProvisionalConfigurationArgs',
    'LicenseRuleArgs',
    'LicenseRuleListArgs',
    'LicenseStringListArgs',
    'LicenseTagListArgs',
    'LicenseValidityDateFormatArgs',
]

@pulumi.input_type
class GrantAllowedOperationListArgs:
    def __init__(__self__, *,
                 allowed_operation_list: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] allowed_operation_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
        """
        if allowed_operation_list is not None:
            pulumi.set(__self__, "allowed_operation_list", allowed_operation_list)

    @property
    @pulumi.getter(name="AllowedOperationList")
    def allowed_operation_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-allowedoperationlist.html#cfn-licensemanager-grant-allowedoperationlist-allowedoperationlist
        """
        return pulumi.get(self, "allowed_operation_list")

    @allowed_operation_list.setter
    def allowed_operation_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "allowed_operation_list", value)


@pulumi.input_type
class GrantArnListArgs:
    def __init__(__self__, *,
                 arn_list: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] arn_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
        """
        if arn_list is not None:
            pulumi.set(__self__, "arn_list", arn_list)

    @property
    @pulumi.getter(name="ArnList")
    def arn_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-arnlist.html#cfn-licensemanager-grant-arnlist-arnlist
        """
        return pulumi.get(self, "arn_list")

    @arn_list.setter
    def arn_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "arn_list", value)


@pulumi.input_type
class GrantFilterArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 values: pulumi.Input['GrantStringListArgs']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
        :param pulumi.Input['GrantStringListArgs'] values: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="Values")
    def values(self) -> pulumi.Input['GrantStringListArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filter.html#cfn-licensemanager-grant-filter-values
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: pulumi.Input['GrantStringListArgs']):
        pulumi.set(self, "values", value)


@pulumi.input_type
class GrantFilterListArgs:
    def __init__(__self__, *,
                 filter_list: Optional[pulumi.Input[Sequence[pulumi.Input['GrantFilterArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html
        :param pulumi.Input[Sequence[pulumi.Input['GrantFilterArgs']]] filter_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
        """
        if filter_list is not None:
            pulumi.set(__self__, "filter_list", filter_list)

    @property
    @pulumi.getter(name="FilterList")
    def filter_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['GrantFilterArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-filterlist.html#cfn-licensemanager-grant-filterlist-filterlist
        """
        return pulumi.get(self, "filter_list")

    @filter_list.setter
    def filter_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['GrantFilterArgs']]]]):
        pulumi.set(self, "filter_list", value)


@pulumi.input_type
class GrantPropertiesArgs:
    def __init__(__self__, *,
                 allowed_operations: Optional[pulumi.Input['GrantAllowedOperationListArgs']] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 filters: Optional[pulumi.Input['GrantFilterListArgs']] = None,
                 grant_arns: Optional[pulumi.Input['GrantArnListArgs']] = None,
                 grant_name: Optional[pulumi.Input[str]] = None,
                 grant_status: Optional[pulumi.Input[str]] = None,
                 granted_operations: Optional[pulumi.Input['GrantAllowedOperationListArgs']] = None,
                 grantee_principal_arn: Optional[pulumi.Input[str]] = None,
                 home_region: Optional[pulumi.Input[str]] = None,
                 license_arn: Optional[pulumi.Input[str]] = None,
                 max_results: Optional[pulumi.Input[int]] = None,
                 next_token: Optional[pulumi.Input[str]] = None,
                 parent_arn: Optional[pulumi.Input[str]] = None,
                 principals: Optional[pulumi.Input['GrantArnListArgs']] = None,
                 source_version: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 status_reason: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input['GrantTagListArgs']] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html
        :param pulumi.Input['GrantAllowedOperationListArgs'] allowed_operations: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-allowedoperations
        :param pulumi.Input[str] client_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-clienttoken
        :param pulumi.Input['GrantFilterListArgs'] filters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-filters
        :param pulumi.Input['GrantArnListArgs'] grant_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantarns
        :param pulumi.Input[str] grant_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantname
        :param pulumi.Input[str] grant_status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantstatus
        :param pulumi.Input['GrantAllowedOperationListArgs'] granted_operations: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantedoperations
        :param pulumi.Input[str] grantee_principal_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-granteeprincipalarn
        :param pulumi.Input[str] home_region: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-homeregion
        :param pulumi.Input[str] license_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-licensearn
        :param pulumi.Input[int] max_results: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-maxresults
        :param pulumi.Input[str] next_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-nexttoken
        :param pulumi.Input[str] parent_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-parentarn
        :param pulumi.Input['GrantArnListArgs'] principals: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-principals
        :param pulumi.Input[str] source_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-sourceversion
        :param pulumi.Input[str] status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-status
        :param pulumi.Input[str] status_reason: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-statusreason
        :param pulumi.Input['GrantTagListArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-tags
        :param pulumi.Input[str] version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-version
        """
        if allowed_operations is not None:
            pulumi.set(__self__, "allowed_operations", allowed_operations)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if filters is not None:
            pulumi.set(__self__, "filters", filters)
        if grant_arns is not None:
            pulumi.set(__self__, "grant_arns", grant_arns)
        if grant_name is not None:
            pulumi.set(__self__, "grant_name", grant_name)
        if grant_status is not None:
            pulumi.set(__self__, "grant_status", grant_status)
        if granted_operations is not None:
            pulumi.set(__self__, "granted_operations", granted_operations)
        if grantee_principal_arn is not None:
            pulumi.set(__self__, "grantee_principal_arn", grantee_principal_arn)
        if home_region is not None:
            pulumi.set(__self__, "home_region", home_region)
        if license_arn is not None:
            pulumi.set(__self__, "license_arn", license_arn)
        if max_results is not None:
            pulumi.set(__self__, "max_results", max_results)
        if next_token is not None:
            pulumi.set(__self__, "next_token", next_token)
        if parent_arn is not None:
            pulumi.set(__self__, "parent_arn", parent_arn)
        if principals is not None:
            pulumi.set(__self__, "principals", principals)
        if source_version is not None:
            pulumi.set(__self__, "source_version", source_version)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if status_reason is not None:
            pulumi.set(__self__, "status_reason", status_reason)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="AllowedOperations")
    def allowed_operations(self) -> Optional[pulumi.Input['GrantAllowedOperationListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-allowedoperations
        """
        return pulumi.get(self, "allowed_operations")

    @allowed_operations.setter
    def allowed_operations(self, value: Optional[pulumi.Input['GrantAllowedOperationListArgs']]):
        pulumi.set(self, "allowed_operations", value)

    @property
    @pulumi.getter(name="ClientToken")
    def client_token(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-clienttoken
        """
        return pulumi.get(self, "client_token")

    @client_token.setter
    def client_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_token", value)

    @property
    @pulumi.getter(name="Filters")
    def filters(self) -> Optional[pulumi.Input['GrantFilterListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-filters
        """
        return pulumi.get(self, "filters")

    @filters.setter
    def filters(self, value: Optional[pulumi.Input['GrantFilterListArgs']]):
        pulumi.set(self, "filters", value)

    @property
    @pulumi.getter(name="GrantArns")
    def grant_arns(self) -> Optional[pulumi.Input['GrantArnListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantarns
        """
        return pulumi.get(self, "grant_arns")

    @grant_arns.setter
    def grant_arns(self, value: Optional[pulumi.Input['GrantArnListArgs']]):
        pulumi.set(self, "grant_arns", value)

    @property
    @pulumi.getter(name="GrantName")
    def grant_name(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantname
        """
        return pulumi.get(self, "grant_name")

    @grant_name.setter
    def grant_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_name", value)

    @property
    @pulumi.getter(name="GrantStatus")
    def grant_status(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantstatus
        """
        return pulumi.get(self, "grant_status")

    @grant_status.setter
    def grant_status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grant_status", value)

    @property
    @pulumi.getter(name="GrantedOperations")
    def granted_operations(self) -> Optional[pulumi.Input['GrantAllowedOperationListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-grantedoperations
        """
        return pulumi.get(self, "granted_operations")

    @granted_operations.setter
    def granted_operations(self, value: Optional[pulumi.Input['GrantAllowedOperationListArgs']]):
        pulumi.set(self, "granted_operations", value)

    @property
    @pulumi.getter(name="GranteePrincipalArn")
    def grantee_principal_arn(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-granteeprincipalarn
        """
        return pulumi.get(self, "grantee_principal_arn")

    @grantee_principal_arn.setter
    def grantee_principal_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "grantee_principal_arn", value)

    @property
    @pulumi.getter(name="HomeRegion")
    def home_region(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-homeregion
        """
        return pulumi.get(self, "home_region")

    @home_region.setter
    def home_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "home_region", value)

    @property
    @pulumi.getter(name="LicenseArn")
    def license_arn(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-licensearn
        """
        return pulumi.get(self, "license_arn")

    @license_arn.setter
    def license_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "license_arn", value)

    @property
    @pulumi.getter(name="MaxResults")
    def max_results(self) -> Optional[pulumi.Input[int]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-maxresults
        """
        return pulumi.get(self, "max_results")

    @max_results.setter
    def max_results(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_results", value)

    @property
    @pulumi.getter(name="NextToken")
    def next_token(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-nexttoken
        """
        return pulumi.get(self, "next_token")

    @next_token.setter
    def next_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_token", value)

    @property
    @pulumi.getter(name="ParentArn")
    def parent_arn(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-parentarn
        """
        return pulumi.get(self, "parent_arn")

    @parent_arn.setter
    def parent_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "parent_arn", value)

    @property
    @pulumi.getter(name="Principals")
    def principals(self) -> Optional[pulumi.Input['GrantArnListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-principals
        """
        return pulumi.get(self, "principals")

    @principals.setter
    def principals(self, value: Optional[pulumi.Input['GrantArnListArgs']]):
        pulumi.set(self, "principals", value)

    @property
    @pulumi.getter(name="SourceVersion")
    def source_version(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-sourceversion
        """
        return pulumi.get(self, "source_version")

    @source_version.setter
    def source_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_version", value)

    @property
    @pulumi.getter(name="Status")
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-status
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="StatusReason")
    def status_reason(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-statusreason
        """
        return pulumi.get(self, "status_reason")

    @status_reason.setter
    def status_reason(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status_reason", value)

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[pulumi.Input['GrantTagListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-tags
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input['GrantTagListArgs']]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="Version")
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-grant.html#cfn-licensemanager-grant-version
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class GrantStringListArgs:
    def __init__(__self__, *,
                 string_list: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] string_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
        """
        if string_list is not None:
            pulumi.set(__self__, "string_list", string_list)

    @property
    @pulumi.getter(name="StringList")
    def string_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-stringlist.html#cfn-licensemanager-grant-stringlist-stringlist
        """
        return pulumi.get(self, "string_list")

    @string_list.setter
    def string_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "string_list", value)


@pulumi.input_type
class GrantTagListArgs:
    def __init__(__self__, *,
                 tag_list: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tag_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
        """
        if tag_list is not None:
            pulumi.set(__self__, "tag_list", tag_list)

    @property
    @pulumi.getter(name="TagList")
    def tag_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-grant-taglist.html#cfn-licensemanager-grant-taglist-taglist
        """
        return pulumi.get(self, "tag_list")

    @tag_list.setter
    def tag_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tag_list", value)


@pulumi.input_type
class LicenseArnListArgs:
    def __init__(__self__, *,
                 arn_list: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] arn_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
        """
        if arn_list is not None:
            pulumi.set(__self__, "arn_list", arn_list)

    @property
    @pulumi.getter(name="ArnList")
    def arn_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-arnlist.html#cfn-licensemanager-license-arnlist-arnlist
        """
        return pulumi.get(self, "arn_list")

    @arn_list.setter
    def arn_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "arn_list", value)


@pulumi.input_type
class LicenseBorrowConfigurationArgs:
    def __init__(__self__, *,
                 allow_early_check_in: pulumi.Input[bool],
                 max_time_to_live_in_minutes: pulumi.Input[int]):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html
        :param pulumi.Input[bool] allow_early_check_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
        :param pulumi.Input[int] max_time_to_live_in_minutes: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
        """
        pulumi.set(__self__, "allow_early_check_in", allow_early_check_in)
        pulumi.set(__self__, "max_time_to_live_in_minutes", max_time_to_live_in_minutes)

    @property
    @pulumi.getter(name="AllowEarlyCheckIn")
    def allow_early_check_in(self) -> pulumi.Input[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-allowearlycheckin
        """
        return pulumi.get(self, "allow_early_check_in")

    @allow_early_check_in.setter
    def allow_early_check_in(self, value: pulumi.Input[bool]):
        pulumi.set(self, "allow_early_check_in", value)

    @property
    @pulumi.getter(name="MaxTimeToLiveInMinutes")
    def max_time_to_live_in_minutes(self) -> pulumi.Input[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-borrowconfiguration.html#cfn-licensemanager-license-borrowconfiguration-maxtimetoliveinminutes
        """
        return pulumi.get(self, "max_time_to_live_in_minutes")

    @max_time_to_live_in_minutes.setter
    def max_time_to_live_in_minutes(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_time_to_live_in_minutes", value)


@pulumi.input_type
class LicenseConsumptionConfigurationArgs:
    def __init__(__self__, *,
                 borrow_configuration: Optional[pulumi.Input['LicenseBorrowConfigurationArgs']] = None,
                 provisional_configuration: Optional[pulumi.Input['LicenseProvisionalConfigurationArgs']] = None,
                 renew_type: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html
        :param pulumi.Input['LicenseBorrowConfigurationArgs'] borrow_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
        :param pulumi.Input['LicenseProvisionalConfigurationArgs'] provisional_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
        :param pulumi.Input[str] renew_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
        """
        if borrow_configuration is not None:
            pulumi.set(__self__, "borrow_configuration", borrow_configuration)
        if provisional_configuration is not None:
            pulumi.set(__self__, "provisional_configuration", provisional_configuration)
        if renew_type is not None:
            pulumi.set(__self__, "renew_type", renew_type)

    @property
    @pulumi.getter(name="BorrowConfiguration")
    def borrow_configuration(self) -> Optional[pulumi.Input['LicenseBorrowConfigurationArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-borrowconfiguration
        """
        return pulumi.get(self, "borrow_configuration")

    @borrow_configuration.setter
    def borrow_configuration(self, value: Optional[pulumi.Input['LicenseBorrowConfigurationArgs']]):
        pulumi.set(self, "borrow_configuration", value)

    @property
    @pulumi.getter(name="ProvisionalConfiguration")
    def provisional_configuration(self) -> Optional[pulumi.Input['LicenseProvisionalConfigurationArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-provisionalconfiguration
        """
        return pulumi.get(self, "provisional_configuration")

    @provisional_configuration.setter
    def provisional_configuration(self, value: Optional[pulumi.Input['LicenseProvisionalConfigurationArgs']]):
        pulumi.set(self, "provisional_configuration", value)

    @property
    @pulumi.getter(name="RenewType")
    def renew_type(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-consumptionconfiguration.html#cfn-licensemanager-license-consumptionconfiguration-renewtype
        """
        return pulumi.get(self, "renew_type")

    @renew_type.setter
    def renew_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "renew_type", value)


@pulumi.input_type
class LicenseEntitlementArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 unit: pulumi.Input[str],
                 allow_check_in: Optional[pulumi.Input[bool]] = None,
                 checkout_rules: Optional[pulumi.Input['LicenseRuleListArgs']] = None,
                 max_count: Optional[pulumi.Input[int]] = None,
                 overage: Optional[pulumi.Input[bool]] = None,
                 value: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
        :param pulumi.Input[str] unit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
        :param pulumi.Input[bool] allow_check_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
        :param pulumi.Input['LicenseRuleListArgs'] checkout_rules: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
        :param pulumi.Input[int] max_count: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
        :param pulumi.Input[bool] overage: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
        :param pulumi.Input[str] value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "unit", unit)
        if allow_check_in is not None:
            pulumi.set(__self__, "allow_check_in", allow_check_in)
        if checkout_rules is not None:
            pulumi.set(__self__, "checkout_rules", checkout_rules)
        if max_count is not None:
            pulumi.set(__self__, "max_count", max_count)
        if overage is not None:
            pulumi.set(__self__, "overage", overage)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="Unit")
    def unit(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-unit
        """
        return pulumi.get(self, "unit")

    @unit.setter
    def unit(self, value: pulumi.Input[str]):
        pulumi.set(self, "unit", value)

    @property
    @pulumi.getter(name="AllowCheckIn")
    def allow_check_in(self) -> Optional[pulumi.Input[bool]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-allowcheckin
        """
        return pulumi.get(self, "allow_check_in")

    @allow_check_in.setter
    def allow_check_in(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "allow_check_in", value)

    @property
    @pulumi.getter(name="CheckoutRules")
    def checkout_rules(self) -> Optional[pulumi.Input['LicenseRuleListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-checkoutrules
        """
        return pulumi.get(self, "checkout_rules")

    @checkout_rules.setter
    def checkout_rules(self, value: Optional[pulumi.Input['LicenseRuleListArgs']]):
        pulumi.set(self, "checkout_rules", value)

    @property
    @pulumi.getter(name="MaxCount")
    def max_count(self) -> Optional[pulumi.Input[int]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-maxcount
        """
        return pulumi.get(self, "max_count")

    @max_count.setter
    def max_count(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_count", value)

    @property
    @pulumi.getter(name="Overage")
    def overage(self) -> Optional[pulumi.Input[bool]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-overage
        """
        return pulumi.get(self, "overage")

    @overage.setter
    def overage(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "overage", value)

    @property
    @pulumi.getter(name="Value")
    def value(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlement.html#cfn-licensemanager-license-entitlement-value
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class LicenseEntitlementListArgs:
    def __init__(__self__, *,
                 entitlement_list: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseEntitlementArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html
        :param pulumi.Input[Sequence[pulumi.Input['LicenseEntitlementArgs']]] entitlement_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
        """
        if entitlement_list is not None:
            pulumi.set(__self__, "entitlement_list", entitlement_list)

    @property
    @pulumi.getter(name="EntitlementList")
    def entitlement_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LicenseEntitlementArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-entitlementlist.html#cfn-licensemanager-license-entitlementlist-entitlementlist
        """
        return pulumi.get(self, "entitlement_list")

    @entitlement_list.setter
    def entitlement_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseEntitlementArgs']]]]):
        pulumi.set(self, "entitlement_list", value)


@pulumi.input_type
class LicenseFilterArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 values: pulumi.Input['LicenseStringListArgs']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
        :param pulumi.Input['LicenseStringListArgs'] values: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="Values")
    def values(self) -> pulumi.Input['LicenseStringListArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filter.html#cfn-licensemanager-license-filter-values
        """
        return pulumi.get(self, "values")

    @values.setter
    def values(self, value: pulumi.Input['LicenseStringListArgs']):
        pulumi.set(self, "values", value)


@pulumi.input_type
class LicenseFilterListArgs:
    def __init__(__self__, *,
                 filter_list: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseFilterArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html
        :param pulumi.Input[Sequence[pulumi.Input['LicenseFilterArgs']]] filter_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
        """
        if filter_list is not None:
            pulumi.set(__self__, "filter_list", filter_list)

    @property
    @pulumi.getter(name="FilterList")
    def filter_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LicenseFilterArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-filterlist.html#cfn-licensemanager-license-filterlist-filterlist
        """
        return pulumi.get(self, "filter_list")

    @filter_list.setter
    def filter_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseFilterArgs']]]]):
        pulumi.set(self, "filter_list", value)


@pulumi.input_type
class LicenseIssuerDataArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 sign_key: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
        :param pulumi.Input[str] sign_key: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
        """
        pulumi.set(__self__, "name", name)
        if sign_key is not None:
            pulumi.set(__self__, "sign_key", sign_key)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="SignKey")
    def sign_key(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-issuerdata.html#cfn-licensemanager-license-issuerdata-signkey
        """
        return pulumi.get(self, "sign_key")

    @sign_key.setter
    def sign_key(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "sign_key", value)


@pulumi.input_type
class LicenseMetadataArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
        :param pulumi.Input[str] value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="Value")
    def value(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadata.html#cfn-licensemanager-license-metadata-value
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class LicenseMetadataListArgs:
    def __init__(__self__, *,
                 metadata_list: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseMetadataArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html
        :param pulumi.Input[Sequence[pulumi.Input['LicenseMetadataArgs']]] metadata_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
        """
        if metadata_list is not None:
            pulumi.set(__self__, "metadata_list", metadata_list)

    @property
    @pulumi.getter(name="MetadataList")
    def metadata_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LicenseMetadataArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-metadatalist.html#cfn-licensemanager-license-metadatalist-metadatalist
        """
        return pulumi.get(self, "metadata_list")

    @metadata_list.setter
    def metadata_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseMetadataArgs']]]]):
        pulumi.set(self, "metadata_list", value)


@pulumi.input_type
class LicensePropertiesArgs:
    def __init__(__self__, *,
                 consumption_configuration: pulumi.Input['LicenseConsumptionConfigurationArgs'],
                 entitlements: pulumi.Input['LicenseEntitlementListArgs'],
                 home_region: pulumi.Input[str],
                 issuer: pulumi.Input['LicenseIssuerDataArgs'],
                 validity: pulumi.Input['LicenseValidityDateFormatArgs'],
                 beneficiary: Optional[pulumi.Input[str]] = None,
                 client_token: Optional[pulumi.Input[str]] = None,
                 filters: Optional[pulumi.Input['LicenseFilterListArgs']] = None,
                 license_arns: Optional[pulumi.Input['LicenseArnListArgs']] = None,
                 license_metadata: Optional[pulumi.Input['LicenseMetadataListArgs']] = None,
                 license_name: Optional[pulumi.Input[str]] = None,
                 max_results: Optional[pulumi.Input[int]] = None,
                 next_token: Optional[pulumi.Input[str]] = None,
                 product_name: Optional[pulumi.Input[str]] = None,
                 product_sku: Optional[pulumi.Input[str]] = None,
                 source_version: Optional[pulumi.Input[str]] = None,
                 status: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input['LicenseTagListArgs']] = None,
                 version: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html
        :param pulumi.Input['LicenseConsumptionConfigurationArgs'] consumption_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-consumptionconfiguration
        :param pulumi.Input['LicenseEntitlementListArgs'] entitlements: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-entitlements
        :param pulumi.Input[str] home_region: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-homeregion
        :param pulumi.Input['LicenseIssuerDataArgs'] issuer: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-issuer
        :param pulumi.Input['LicenseValidityDateFormatArgs'] validity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-validity
        :param pulumi.Input[str] beneficiary: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-beneficiary
        :param pulumi.Input[str] client_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-clienttoken
        :param pulumi.Input['LicenseFilterListArgs'] filters: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-filters
        :param pulumi.Input['LicenseArnListArgs'] license_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensearns
        :param pulumi.Input['LicenseMetadataListArgs'] license_metadata: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensemetadata
        :param pulumi.Input[str] license_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensename
        :param pulumi.Input[int] max_results: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-maxresults
        :param pulumi.Input[str] next_token: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-nexttoken
        :param pulumi.Input[str] product_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productname
        :param pulumi.Input[str] product_sku: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productsku
        :param pulumi.Input[str] source_version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-sourceversion
        :param pulumi.Input[str] status: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-status
        :param pulumi.Input['LicenseTagListArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-tags
        :param pulumi.Input[str] version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-version
        """
        pulumi.set(__self__, "consumption_configuration", consumption_configuration)
        pulumi.set(__self__, "entitlements", entitlements)
        pulumi.set(__self__, "home_region", home_region)
        pulumi.set(__self__, "issuer", issuer)
        pulumi.set(__self__, "validity", validity)
        if beneficiary is not None:
            pulumi.set(__self__, "beneficiary", beneficiary)
        if client_token is not None:
            pulumi.set(__self__, "client_token", client_token)
        if filters is not None:
            pulumi.set(__self__, "filters", filters)
        if license_arns is not None:
            pulumi.set(__self__, "license_arns", license_arns)
        if license_metadata is not None:
            pulumi.set(__self__, "license_metadata", license_metadata)
        if license_name is not None:
            pulumi.set(__self__, "license_name", license_name)
        if max_results is not None:
            pulumi.set(__self__, "max_results", max_results)
        if next_token is not None:
            pulumi.set(__self__, "next_token", next_token)
        if product_name is not None:
            pulumi.set(__self__, "product_name", product_name)
        if product_sku is not None:
            pulumi.set(__self__, "product_sku", product_sku)
        if source_version is not None:
            pulumi.set(__self__, "source_version", source_version)
        if status is not None:
            pulumi.set(__self__, "status", status)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if version is not None:
            pulumi.set(__self__, "version", version)

    @property
    @pulumi.getter(name="ConsumptionConfiguration")
    def consumption_configuration(self) -> pulumi.Input['LicenseConsumptionConfigurationArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-consumptionconfiguration
        """
        return pulumi.get(self, "consumption_configuration")

    @consumption_configuration.setter
    def consumption_configuration(self, value: pulumi.Input['LicenseConsumptionConfigurationArgs']):
        pulumi.set(self, "consumption_configuration", value)

    @property
    @pulumi.getter(name="Entitlements")
    def entitlements(self) -> pulumi.Input['LicenseEntitlementListArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-entitlements
        """
        return pulumi.get(self, "entitlements")

    @entitlements.setter
    def entitlements(self, value: pulumi.Input['LicenseEntitlementListArgs']):
        pulumi.set(self, "entitlements", value)

    @property
    @pulumi.getter(name="HomeRegion")
    def home_region(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-homeregion
        """
        return pulumi.get(self, "home_region")

    @home_region.setter
    def home_region(self, value: pulumi.Input[str]):
        pulumi.set(self, "home_region", value)

    @property
    @pulumi.getter(name="Issuer")
    def issuer(self) -> pulumi.Input['LicenseIssuerDataArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-issuer
        """
        return pulumi.get(self, "issuer")

    @issuer.setter
    def issuer(self, value: pulumi.Input['LicenseIssuerDataArgs']):
        pulumi.set(self, "issuer", value)

    @property
    @pulumi.getter(name="Validity")
    def validity(self) -> pulumi.Input['LicenseValidityDateFormatArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-validity
        """
        return pulumi.get(self, "validity")

    @validity.setter
    def validity(self, value: pulumi.Input['LicenseValidityDateFormatArgs']):
        pulumi.set(self, "validity", value)

    @property
    @pulumi.getter(name="Beneficiary")
    def beneficiary(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-beneficiary
        """
        return pulumi.get(self, "beneficiary")

    @beneficiary.setter
    def beneficiary(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "beneficiary", value)

    @property
    @pulumi.getter(name="ClientToken")
    def client_token(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-clienttoken
        """
        return pulumi.get(self, "client_token")

    @client_token.setter
    def client_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "client_token", value)

    @property
    @pulumi.getter(name="Filters")
    def filters(self) -> Optional[pulumi.Input['LicenseFilterListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-filters
        """
        return pulumi.get(self, "filters")

    @filters.setter
    def filters(self, value: Optional[pulumi.Input['LicenseFilterListArgs']]):
        pulumi.set(self, "filters", value)

    @property
    @pulumi.getter(name="LicenseArns")
    def license_arns(self) -> Optional[pulumi.Input['LicenseArnListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensearns
        """
        return pulumi.get(self, "license_arns")

    @license_arns.setter
    def license_arns(self, value: Optional[pulumi.Input['LicenseArnListArgs']]):
        pulumi.set(self, "license_arns", value)

    @property
    @pulumi.getter(name="LicenseMetadata")
    def license_metadata(self) -> Optional[pulumi.Input['LicenseMetadataListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensemetadata
        """
        return pulumi.get(self, "license_metadata")

    @license_metadata.setter
    def license_metadata(self, value: Optional[pulumi.Input['LicenseMetadataListArgs']]):
        pulumi.set(self, "license_metadata", value)

    @property
    @pulumi.getter(name="LicenseName")
    def license_name(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-licensename
        """
        return pulumi.get(self, "license_name")

    @license_name.setter
    def license_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "license_name", value)

    @property
    @pulumi.getter(name="MaxResults")
    def max_results(self) -> Optional[pulumi.Input[int]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-maxresults
        """
        return pulumi.get(self, "max_results")

    @max_results.setter
    def max_results(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "max_results", value)

    @property
    @pulumi.getter(name="NextToken")
    def next_token(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-nexttoken
        """
        return pulumi.get(self, "next_token")

    @next_token.setter
    def next_token(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "next_token", value)

    @property
    @pulumi.getter(name="ProductName")
    def product_name(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productname
        """
        return pulumi.get(self, "product_name")

    @product_name.setter
    def product_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "product_name", value)

    @property
    @pulumi.getter(name="ProductSKU")
    def product_sku(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-productsku
        """
        return pulumi.get(self, "product_sku")

    @product_sku.setter
    def product_sku(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "product_sku", value)

    @property
    @pulumi.getter(name="SourceVersion")
    def source_version(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-sourceversion
        """
        return pulumi.get(self, "source_version")

    @source_version.setter
    def source_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_version", value)

    @property
    @pulumi.getter(name="Status")
    def status(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-status
        """
        return pulumi.get(self, "status")

    @status.setter
    def status(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "status", value)

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[pulumi.Input['LicenseTagListArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-tags
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input['LicenseTagListArgs']]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="Version")
    def version(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-licensemanager-license.html#cfn-licensemanager-license-version
        """
        return pulumi.get(self, "version")

    @version.setter
    def version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "version", value)


@pulumi.input_type
class LicenseProvisionalConfigurationArgs:
    def __init__(__self__, *,
                 max_time_to_live_in_minutes: pulumi.Input[int]):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html
        :param pulumi.Input[int] max_time_to_live_in_minutes: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
        """
        pulumi.set(__self__, "max_time_to_live_in_minutes", max_time_to_live_in_minutes)

    @property
    @pulumi.getter(name="MaxTimeToLiveInMinutes")
    def max_time_to_live_in_minutes(self) -> pulumi.Input[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-provisionalconfiguration.html#cfn-licensemanager-license-provisionalconfiguration-maxtimetoliveinminutes
        """
        return pulumi.get(self, "max_time_to_live_in_minutes")

    @max_time_to_live_in_minutes.setter
    def max_time_to_live_in_minutes(self, value: pulumi.Input[int]):
        pulumi.set(self, "max_time_to_live_in_minutes", value)


@pulumi.input_type
class LicenseRuleArgs:
    def __init__(__self__, *,
                 name: pulumi.Input[str],
                 unit: pulumi.Input[str],
                 value: pulumi.Input[str]):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html
        :param pulumi.Input[str] name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
        :param pulumi.Input[str] unit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
        :param pulumi.Input[str] value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "unit", unit)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-name
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: pulumi.Input[str]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="Unit")
    def unit(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-unit
        """
        return pulumi.get(self, "unit")

    @unit.setter
    def unit(self, value: pulumi.Input[str]):
        pulumi.set(self, "unit", value)

    @property
    @pulumi.getter(name="Value")
    def value(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rule.html#cfn-licensemanager-license-rule-value
        """
        return pulumi.get(self, "value")

    @value.setter
    def value(self, value: pulumi.Input[str]):
        pulumi.set(self, "value", value)


@pulumi.input_type
class LicenseRuleListArgs:
    def __init__(__self__, *,
                 rule_list: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseRuleArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html
        :param pulumi.Input[Sequence[pulumi.Input['LicenseRuleArgs']]] rule_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
        """
        if rule_list is not None:
            pulumi.set(__self__, "rule_list", rule_list)

    @property
    @pulumi.getter(name="RuleList")
    def rule_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['LicenseRuleArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-rulelist.html#cfn-licensemanager-license-rulelist-rulelist
        """
        return pulumi.get(self, "rule_list")

    @rule_list.setter
    def rule_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['LicenseRuleArgs']]]]):
        pulumi.set(self, "rule_list", value)


@pulumi.input_type
class LicenseStringListArgs:
    def __init__(__self__, *,
                 string_list: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] string_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
        """
        if string_list is not None:
            pulumi.set(__self__, "string_list", string_list)

    @property
    @pulumi.getter(name="StringList")
    def string_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-stringlist.html#cfn-licensemanager-license-stringlist-stringlist
        """
        return pulumi.get(self, "string_list")

    @string_list.setter
    def string_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "string_list", value)


@pulumi.input_type
class LicenseTagListArgs:
    def __init__(__self__, *,
                 tag_list: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html
        :param pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]] tag_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
        """
        if tag_list is not None:
            pulumi.set(__self__, "tag_list", tag_list)

    @property
    @pulumi.getter(name="TagList")
    def tag_list(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-taglist.html#cfn-licensemanager-license-taglist-taglist
        """
        return pulumi.get(self, "tag_list")

    @tag_list.setter
    def tag_list(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['_root_inputs.TagArgs']]]]):
        pulumi.set(self, "tag_list", value)


@pulumi.input_type
class LicenseValidityDateFormatArgs:
    def __init__(__self__, *,
                 begin: pulumi.Input[str],
                 end: pulumi.Input[str]):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html
        :param pulumi.Input[str] begin: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
        :param pulumi.Input[str] end: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
        """
        pulumi.set(__self__, "begin", begin)
        pulumi.set(__self__, "end", end)

    @property
    @pulumi.getter(name="Begin")
    def begin(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-begin
        """
        return pulumi.get(self, "begin")

    @begin.setter
    def begin(self, value: pulumi.Input[str]):
        pulumi.set(self, "begin", value)

    @property
    @pulumi.getter(name="End")
    def end(self) -> pulumi.Input[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-licensemanager-license-validitydateformat.html#cfn-licensemanager-license-validitydateformat-end
        """
        return pulumi.get(self, "end")

    @end.setter
    def end(self, value: pulumi.Input[str]):
        pulumi.set(self, "end", value)


