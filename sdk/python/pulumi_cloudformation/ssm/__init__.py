# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .association import *
from .document import *
from .maintenance_window import *
from .maintenance_window_target import *
from .maintenance_window_task import *
from .parameter import *
from .patch_baseline import *
from .resource_data_sync import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "cloudformation:SSM:Association":
                return Association(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:Document":
                return Document(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:MaintenanceWindow":
                return MaintenanceWindow(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:MaintenanceWindowTarget":
                return MaintenanceWindowTarget(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:MaintenanceWindowTask":
                return MaintenanceWindowTask(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:Parameter":
                return Parameter(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:PatchBaseline":
                return PatchBaseline(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:SSM:ResourceDataSync":
                return ResourceDataSync(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("cloudformation", "SSM", _module_instance)

_register_module()
