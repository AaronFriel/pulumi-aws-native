# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables
from . import outputs

__all__ = [
    'AutoScalingGroupAttributes',
    'AutoScalingGroupInstancesDistribution',
    'AutoScalingGroupLaunchTemplate',
    'AutoScalingGroupLaunchTemplateOverrides',
    'AutoScalingGroupLaunchTemplateSpecification',
    'AutoScalingGroupLifecycleHookSpecification',
    'AutoScalingGroupMetricsCollection',
    'AutoScalingGroupMixedInstancesPolicy',
    'AutoScalingGroupNotificationConfiguration',
    'AutoScalingGroupProperties',
    'AutoScalingGroupReplacingUpdate',
    'AutoScalingGroupRollingUpdate',
    'AutoScalingGroupScheduledAction',
    'AutoScalingGroupTagProperty',
    'AutoScalingGroupUpdatePolicy',
    'LaunchConfigurationAttributes',
    'LaunchConfigurationBlockDevice',
    'LaunchConfigurationBlockDeviceMapping',
    'LaunchConfigurationMetadataOptions',
    'LaunchConfigurationProperties',
    'LifecycleHookAttributes',
    'LifecycleHookProperties',
    'ScalingPolicyAttributes',
    'ScalingPolicyCustomizedMetricSpecification',
    'ScalingPolicyMetricDimension',
    'ScalingPolicyPredefinedMetricSpecification',
    'ScalingPolicyProperties',
    'ScalingPolicyStepAdjustment',
    'ScalingPolicyTargetTrackingConfiguration',
    'ScheduledActionAttributes',
    'ScheduledActionProperties',
]

@pulumi.output_type
class AutoScalingGroupAttributes(dict):
    def __init__(__self__, *,
                 launch_configuration_name: str,
                 launch_template_specification: str,
                 mixed_instances_policy: str,
                 placement_group: str,
                 vpc_zone_identifier: str):
        pulumi.set(__self__, "launch_configuration_name", launch_configuration_name)
        pulumi.set(__self__, "launch_template_specification", launch_template_specification)
        pulumi.set(__self__, "mixed_instances_policy", mixed_instances_policy)
        pulumi.set(__self__, "placement_group", placement_group)
        pulumi.set(__self__, "vpc_zone_identifier", vpc_zone_identifier)

    @property
    @pulumi.getter(name="LaunchConfigurationName")
    def launch_configuration_name(self) -> str:
        return pulumi.get(self, "launch_configuration_name")

    @property
    @pulumi.getter(name="LaunchTemplateSpecification")
    def launch_template_specification(self) -> str:
        return pulumi.get(self, "launch_template_specification")

    @property
    @pulumi.getter(name="MixedInstancesPolicy")
    def mixed_instances_policy(self) -> str:
        return pulumi.get(self, "mixed_instances_policy")

    @property
    @pulumi.getter(name="PlacementGroup")
    def placement_group(self) -> str:
        return pulumi.get(self, "placement_group")

    @property
    @pulumi.getter(name="VPCZoneIdentifier")
    def vpc_zone_identifier(self) -> str:
        return pulumi.get(self, "vpc_zone_identifier")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupInstancesDistribution(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html
    """
    def __init__(__self__, *,
                 on_demand_allocation_strategy: Optional[str] = None,
                 on_demand_base_capacity: Optional[int] = None,
                 on_demand_percentage_above_base_capacity: Optional[int] = None,
                 spot_allocation_strategy: Optional[str] = None,
                 spot_instance_pools: Optional[int] = None,
                 spot_max_price: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html
        :param str on_demand_allocation_strategy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandallocationstrategy
        :param int on_demand_base_capacity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandbasecapacity
        :param int on_demand_percentage_above_base_capacity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandpercentageabovebasecapacity
        :param str spot_allocation_strategy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotallocationstrategy
        :param int spot_instance_pools: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotinstancepools
        :param str spot_max_price: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotmaxprice
        """
        if on_demand_allocation_strategy is not None:
            pulumi.set(__self__, "on_demand_allocation_strategy", on_demand_allocation_strategy)
        if on_demand_base_capacity is not None:
            pulumi.set(__self__, "on_demand_base_capacity", on_demand_base_capacity)
        if on_demand_percentage_above_base_capacity is not None:
            pulumi.set(__self__, "on_demand_percentage_above_base_capacity", on_demand_percentage_above_base_capacity)
        if spot_allocation_strategy is not None:
            pulumi.set(__self__, "spot_allocation_strategy", spot_allocation_strategy)
        if spot_instance_pools is not None:
            pulumi.set(__self__, "spot_instance_pools", spot_instance_pools)
        if spot_max_price is not None:
            pulumi.set(__self__, "spot_max_price", spot_max_price)

    @property
    @pulumi.getter(name="OnDemandAllocationStrategy")
    def on_demand_allocation_strategy(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandallocationstrategy
        """
        return pulumi.get(self, "on_demand_allocation_strategy")

    @property
    @pulumi.getter(name="OnDemandBaseCapacity")
    def on_demand_base_capacity(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandbasecapacity
        """
        return pulumi.get(self, "on_demand_base_capacity")

    @property
    @pulumi.getter(name="OnDemandPercentageAboveBaseCapacity")
    def on_demand_percentage_above_base_capacity(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-ondemandpercentageabovebasecapacity
        """
        return pulumi.get(self, "on_demand_percentage_above_base_capacity")

    @property
    @pulumi.getter(name="SpotAllocationStrategy")
    def spot_allocation_strategy(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotallocationstrategy
        """
        return pulumi.get(self, "spot_allocation_strategy")

    @property
    @pulumi.getter(name="SpotInstancePools")
    def spot_instance_pools(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotinstancepools
        """
        return pulumi.get(self, "spot_instance_pools")

    @property
    @pulumi.getter(name="SpotMaxPrice")
    def spot_max_price(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-instancesdistribution.html#cfn-autoscaling-autoscalinggroup-instancesdistribution-spotmaxprice
        """
        return pulumi.get(self, "spot_max_price")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupLaunchTemplate(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html
    """
    def __init__(__self__, *,
                 launch_template_specification: 'outputs.AutoScalingGroupLaunchTemplateSpecification',
                 overrides: Optional[Sequence['outputs.AutoScalingGroupLaunchTemplateOverrides']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html
        :param 'AutoScalingGroupLaunchTemplateSpecificationArgs' launch_template_specification: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-group-launchtemplate
        :param Sequence['AutoScalingGroupLaunchTemplateOverridesArgs'] overrides: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-mixedinstancespolicy-overrides
        """
        pulumi.set(__self__, "launch_template_specification", launch_template_specification)
        if overrides is not None:
            pulumi.set(__self__, "overrides", overrides)

    @property
    @pulumi.getter(name="LaunchTemplateSpecification")
    def launch_template_specification(self) -> 'outputs.AutoScalingGroupLaunchTemplateSpecification':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-group-launchtemplate
        """
        return pulumi.get(self, "launch_template_specification")

    @property
    @pulumi.getter(name="Overrides")
    def overrides(self) -> Optional[Sequence['outputs.AutoScalingGroupLaunchTemplateOverrides']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplate.html#cfn-as-mixedinstancespolicy-overrides
        """
        return pulumi.get(self, "overrides")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupLaunchTemplateOverrides(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html
    """
    def __init__(__self__, *,
                 instance_type: Optional[str] = None,
                 launch_template_specification: Optional['outputs.AutoScalingGroupLaunchTemplateSpecification'] = None,
                 weighted_capacity: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html
        :param str instance_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-instancetype
        :param 'AutoScalingGroupLaunchTemplateSpecificationArgs' launch_template_specification: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-launchtemplatespecification
        :param str weighted_capacity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-weightedcapacity
        """
        if instance_type is not None:
            pulumi.set(__self__, "instance_type", instance_type)
        if launch_template_specification is not None:
            pulumi.set(__self__, "launch_template_specification", launch_template_specification)
        if weighted_capacity is not None:
            pulumi.set(__self__, "weighted_capacity", weighted_capacity)

    @property
    @pulumi.getter(name="InstanceType")
    def instance_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-instancetype
        """
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="LaunchTemplateSpecification")
    def launch_template_specification(self) -> Optional['outputs.AutoScalingGroupLaunchTemplateSpecification']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-launchtemplatespecification
        """
        return pulumi.get(self, "launch_template_specification")

    @property
    @pulumi.getter(name="WeightedCapacity")
    def weighted_capacity(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-mixedinstancespolicy-launchtemplateoverrides.html#cfn-autoscaling-autoscalinggroup-launchtemplateoverrides-weightedcapacity
        """
        return pulumi.get(self, "weighted_capacity")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupLaunchTemplateSpecification(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html
    """
    def __init__(__self__, *,
                 version: str,
                 launch_template_id: Optional[str] = None,
                 launch_template_name: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html
        :param str version: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-version
        :param str launch_template_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplateid
        :param str launch_template_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplatename
        """
        pulumi.set(__self__, "version", version)
        if launch_template_id is not None:
            pulumi.set(__self__, "launch_template_id", launch_template_id)
        if launch_template_name is not None:
            pulumi.set(__self__, "launch_template_name", launch_template_name)

    @property
    @pulumi.getter(name="Version")
    def version(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-version
        """
        return pulumi.get(self, "version")

    @property
    @pulumi.getter(name="LaunchTemplateId")
    def launch_template_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplateid
        """
        return pulumi.get(self, "launch_template_id")

    @property
    @pulumi.getter(name="LaunchTemplateName")
    def launch_template_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-launchtemplatespecification.html#cfn-autoscaling-autoscalinggroup-launchtemplatespecification-launchtemplatename
        """
        return pulumi.get(self, "launch_template_name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupLifecycleHookSpecification(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html
    """
    def __init__(__self__, *,
                 lifecycle_hook_name: str,
                 lifecycle_transition: str,
                 default_result: Optional[str] = None,
                 heartbeat_timeout: Optional[int] = None,
                 notification_metadata: Optional[str] = None,
                 notification_target_arn: Optional[str] = None,
                 role_arn: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html
        :param str lifecycle_hook_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecyclehookname
        :param str lifecycle_transition: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecycletransition
        :param str default_result: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-defaultresult
        :param int heartbeat_timeout: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-heartbeattimeout
        :param str notification_metadata: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationmetadata
        :param str notification_target_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationtargetarn
        :param str role_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-rolearn
        """
        pulumi.set(__self__, "lifecycle_hook_name", lifecycle_hook_name)
        pulumi.set(__self__, "lifecycle_transition", lifecycle_transition)
        if default_result is not None:
            pulumi.set(__self__, "default_result", default_result)
        if heartbeat_timeout is not None:
            pulumi.set(__self__, "heartbeat_timeout", heartbeat_timeout)
        if notification_metadata is not None:
            pulumi.set(__self__, "notification_metadata", notification_metadata)
        if notification_target_arn is not None:
            pulumi.set(__self__, "notification_target_arn", notification_target_arn)
        if role_arn is not None:
            pulumi.set(__self__, "role_arn", role_arn)

    @property
    @pulumi.getter(name="LifecycleHookName")
    def lifecycle_hook_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecyclehookname
        """
        return pulumi.get(self, "lifecycle_hook_name")

    @property
    @pulumi.getter(name="LifecycleTransition")
    def lifecycle_transition(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-lifecycletransition
        """
        return pulumi.get(self, "lifecycle_transition")

    @property
    @pulumi.getter(name="DefaultResult")
    def default_result(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-defaultresult
        """
        return pulumi.get(self, "default_result")

    @property
    @pulumi.getter(name="HeartbeatTimeout")
    def heartbeat_timeout(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-heartbeattimeout
        """
        return pulumi.get(self, "heartbeat_timeout")

    @property
    @pulumi.getter(name="NotificationMetadata")
    def notification_metadata(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationmetadata
        """
        return pulumi.get(self, "notification_metadata")

    @property
    @pulumi.getter(name="NotificationTargetARN")
    def notification_target_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-notificationtargetarn
        """
        return pulumi.get(self, "notification_target_arn")

    @property
    @pulumi.getter(name="RoleARN")
    def role_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-autoscalinggroup-lifecyclehookspecification.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecification-rolearn
        """
        return pulumi.get(self, "role_arn")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupMetricsCollection(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html
    """
    def __init__(__self__, *,
                 granularity: str,
                 metrics: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html
        :param str granularity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-granularity
        :param Sequence[str] metrics: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-metrics
        """
        pulumi.set(__self__, "granularity", granularity)
        if metrics is not None:
            pulumi.set(__self__, "metrics", metrics)

    @property
    @pulumi.getter(name="Granularity")
    def granularity(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-granularity
        """
        return pulumi.get(self, "granularity")

    @property
    @pulumi.getter(name="Metrics")
    def metrics(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-metricscollection.html#cfn-as-metricscollection-metrics
        """
        return pulumi.get(self, "metrics")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupMixedInstancesPolicy(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html
    """
    def __init__(__self__, *,
                 launch_template: 'outputs.AutoScalingGroupLaunchTemplate',
                 instances_distribution: Optional['outputs.AutoScalingGroupInstancesDistribution'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html
        :param 'AutoScalingGroupLaunchTemplateArgs' launch_template: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-launchtemplate
        :param 'AutoScalingGroupInstancesDistributionArgs' instances_distribution: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-instancesdistribution
        """
        pulumi.set(__self__, "launch_template", launch_template)
        if instances_distribution is not None:
            pulumi.set(__self__, "instances_distribution", instances_distribution)

    @property
    @pulumi.getter(name="LaunchTemplate")
    def launch_template(self) -> 'outputs.AutoScalingGroupLaunchTemplate':
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-launchtemplate
        """
        return pulumi.get(self, "launch_template")

    @property
    @pulumi.getter(name="InstancesDistribution")
    def instances_distribution(self) -> Optional['outputs.AutoScalingGroupInstancesDistribution']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-as-group-mixedinstancespolicy.html#cfn-as-mixedinstancespolicy-instancesdistribution
        """
        return pulumi.get(self, "instances_distribution")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupNotificationConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html
    """
    def __init__(__self__, *,
                 topic_arn: str,
                 notification_types: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html
        :param str topic_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-autoscaling-autoscalinggroup-notificationconfigurations-topicarn
        :param Sequence[str] notification_types: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-as-group-notificationconfigurations-notificationtypes
        """
        pulumi.set(__self__, "topic_arn", topic_arn)
        if notification_types is not None:
            pulumi.set(__self__, "notification_types", notification_types)

    @property
    @pulumi.getter(name="TopicARN")
    def topic_arn(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-autoscaling-autoscalinggroup-notificationconfigurations-topicarn
        """
        return pulumi.get(self, "topic_arn")

    @property
    @pulumi.getter(name="NotificationTypes")
    def notification_types(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-notificationconfigurations.html#cfn-as-group-notificationconfigurations-notificationtypes
        """
        return pulumi.get(self, "notification_types")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html
    """
    def __init__(__self__, *,
                 max_size: str,
                 min_size: str,
                 auto_scaling_group_name: Optional[str] = None,
                 availability_zones: Optional[Sequence[str]] = None,
                 capacity_rebalance: Optional[bool] = None,
                 cooldown: Optional[str] = None,
                 desired_capacity: Optional[str] = None,
                 health_check_grace_period: Optional[int] = None,
                 health_check_type: Optional[str] = None,
                 instance_id: Optional[str] = None,
                 launch_configuration_name: Optional[str] = None,
                 launch_template: Optional['outputs.AutoScalingGroupLaunchTemplateSpecification'] = None,
                 lifecycle_hook_specification_list: Optional[Sequence['outputs.AutoScalingGroupLifecycleHookSpecification']] = None,
                 load_balancer_names: Optional[Sequence[str]] = None,
                 max_instance_lifetime: Optional[int] = None,
                 metrics_collection: Optional[Sequence['outputs.AutoScalingGroupMetricsCollection']] = None,
                 mixed_instances_policy: Optional['outputs.AutoScalingGroupMixedInstancesPolicy'] = None,
                 new_instances_protected_from_scale_in: Optional[bool] = None,
                 notification_configurations: Optional[Sequence['outputs.AutoScalingGroupNotificationConfiguration']] = None,
                 placement_group: Optional[str] = None,
                 service_linked_role_arn: Optional[str] = None,
                 tags: Optional[Sequence['outputs.AutoScalingGroupTagProperty']] = None,
                 target_group_arns: Optional[Sequence[str]] = None,
                 termination_policies: Optional[Sequence[str]] = None,
                 vpc_zone_identifier: Optional[Sequence[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html
        :param str max_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize
        :param str min_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize
        :param str auto_scaling_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname
        :param Sequence[str] availability_zones: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones
        :param bool capacity_rebalance: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance
        :param str cooldown: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown
        :param str desired_capacity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity
        :param int health_check_grace_period: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod
        :param str health_check_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype
        :param str instance_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid
        :param str launch_configuration_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname
        :param 'AutoScalingGroupLaunchTemplateSpecificationArgs' launch_template: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate
        :param Sequence['AutoScalingGroupLifecycleHookSpecificationArgs'] lifecycle_hook_specification_list: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist
        :param Sequence[str] load_balancer_names: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames
        :param int max_instance_lifetime: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime
        :param Sequence['AutoScalingGroupMetricsCollectionArgs'] metrics_collection: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection
        :param 'AutoScalingGroupMixedInstancesPolicyArgs' mixed_instances_policy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy
        :param bool new_instances_protected_from_scale_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein
        :param Sequence['AutoScalingGroupNotificationConfigurationArgs'] notification_configurations: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations
        :param str placement_group: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup
        :param str service_linked_role_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn
        :param Sequence['AutoScalingGroupTagPropertyArgs'] tags: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags
        :param Sequence[str] target_group_arns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns
        :param Sequence[str] termination_policies: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy
        :param Sequence[str] vpc_zone_identifier: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier
        """
        pulumi.set(__self__, "max_size", max_size)
        pulumi.set(__self__, "min_size", min_size)
        if auto_scaling_group_name is not None:
            pulumi.set(__self__, "auto_scaling_group_name", auto_scaling_group_name)
        if availability_zones is not None:
            pulumi.set(__self__, "availability_zones", availability_zones)
        if capacity_rebalance is not None:
            pulumi.set(__self__, "capacity_rebalance", capacity_rebalance)
        if cooldown is not None:
            pulumi.set(__self__, "cooldown", cooldown)
        if desired_capacity is not None:
            pulumi.set(__self__, "desired_capacity", desired_capacity)
        if health_check_grace_period is not None:
            pulumi.set(__self__, "health_check_grace_period", health_check_grace_period)
        if health_check_type is not None:
            pulumi.set(__self__, "health_check_type", health_check_type)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if launch_configuration_name is not None:
            pulumi.set(__self__, "launch_configuration_name", launch_configuration_name)
        if launch_template is not None:
            pulumi.set(__self__, "launch_template", launch_template)
        if lifecycle_hook_specification_list is not None:
            pulumi.set(__self__, "lifecycle_hook_specification_list", lifecycle_hook_specification_list)
        if load_balancer_names is not None:
            pulumi.set(__self__, "load_balancer_names", load_balancer_names)
        if max_instance_lifetime is not None:
            pulumi.set(__self__, "max_instance_lifetime", max_instance_lifetime)
        if metrics_collection is not None:
            pulumi.set(__self__, "metrics_collection", metrics_collection)
        if mixed_instances_policy is not None:
            pulumi.set(__self__, "mixed_instances_policy", mixed_instances_policy)
        if new_instances_protected_from_scale_in is not None:
            pulumi.set(__self__, "new_instances_protected_from_scale_in", new_instances_protected_from_scale_in)
        if notification_configurations is not None:
            pulumi.set(__self__, "notification_configurations", notification_configurations)
        if placement_group is not None:
            pulumi.set(__self__, "placement_group", placement_group)
        if service_linked_role_arn is not None:
            pulumi.set(__self__, "service_linked_role_arn", service_linked_role_arn)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if target_group_arns is not None:
            pulumi.set(__self__, "target_group_arns", target_group_arns)
        if termination_policies is not None:
            pulumi.set(__self__, "termination_policies", termination_policies)
        if vpc_zone_identifier is not None:
            pulumi.set(__self__, "vpc_zone_identifier", vpc_zone_identifier)

    @property
    @pulumi.getter(name="MaxSize")
    def max_size(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxsize
        """
        return pulumi.get(self, "max_size")

    @property
    @pulumi.getter(name="MinSize")
    def min_size(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-minsize
        """
        return pulumi.get(self, "min_size")

    @property
    @pulumi.getter(name="AutoScalingGroupName")
    def auto_scaling_group_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-autoscalinggroupname
        """
        return pulumi.get(self, "auto_scaling_group_name")

    @property
    @pulumi.getter(name="AvailabilityZones")
    def availability_zones(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-availabilityzones
        """
        return pulumi.get(self, "availability_zones")

    @property
    @pulumi.getter(name="CapacityRebalance")
    def capacity_rebalance(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-capacityrebalance
        """
        return pulumi.get(self, "capacity_rebalance")

    @property
    @pulumi.getter(name="Cooldown")
    def cooldown(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-cooldown
        """
        return pulumi.get(self, "cooldown")

    @property
    @pulumi.getter(name="DesiredCapacity")
    def desired_capacity(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-desiredcapacity
        """
        return pulumi.get(self, "desired_capacity")

    @property
    @pulumi.getter(name="HealthCheckGracePeriod")
    def health_check_grace_period(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthcheckgraceperiod
        """
        return pulumi.get(self, "health_check_grace_period")

    @property
    @pulumi.getter(name="HealthCheckType")
    def health_check_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-healthchecktype
        """
        return pulumi.get(self, "health_check_type")

    @property
    @pulumi.getter(name="InstanceId")
    def instance_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-instanceid
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="LaunchConfigurationName")
    def launch_configuration_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchconfigurationname
        """
        return pulumi.get(self, "launch_configuration_name")

    @property
    @pulumi.getter(name="LaunchTemplate")
    def launch_template(self) -> Optional['outputs.AutoScalingGroupLaunchTemplateSpecification']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-launchtemplate
        """
        return pulumi.get(self, "launch_template")

    @property
    @pulumi.getter(name="LifecycleHookSpecificationList")
    def lifecycle_hook_specification_list(self) -> Optional[Sequence['outputs.AutoScalingGroupLifecycleHookSpecification']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-lifecyclehookspecificationlist
        """
        return pulumi.get(self, "lifecycle_hook_specification_list")

    @property
    @pulumi.getter(name="LoadBalancerNames")
    def load_balancer_names(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-loadbalancernames
        """
        return pulumi.get(self, "load_balancer_names")

    @property
    @pulumi.getter(name="MaxInstanceLifetime")
    def max_instance_lifetime(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-maxinstancelifetime
        """
        return pulumi.get(self, "max_instance_lifetime")

    @property
    @pulumi.getter(name="MetricsCollection")
    def metrics_collection(self) -> Optional[Sequence['outputs.AutoScalingGroupMetricsCollection']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-metricscollection
        """
        return pulumi.get(self, "metrics_collection")

    @property
    @pulumi.getter(name="MixedInstancesPolicy")
    def mixed_instances_policy(self) -> Optional['outputs.AutoScalingGroupMixedInstancesPolicy']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-mixedinstancespolicy
        """
        return pulumi.get(self, "mixed_instances_policy")

    @property
    @pulumi.getter(name="NewInstancesProtectedFromScaleIn")
    def new_instances_protected_from_scale_in(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-newinstancesprotectedfromscalein
        """
        return pulumi.get(self, "new_instances_protected_from_scale_in")

    @property
    @pulumi.getter(name="NotificationConfigurations")
    def notification_configurations(self) -> Optional[Sequence['outputs.AutoScalingGroupNotificationConfiguration']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-notificationconfigurations
        """
        return pulumi.get(self, "notification_configurations")

    @property
    @pulumi.getter(name="PlacementGroup")
    def placement_group(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-placementgroup
        """
        return pulumi.get(self, "placement_group")

    @property
    @pulumi.getter(name="ServiceLinkedRoleARN")
    def service_linked_role_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-autoscaling-autoscalinggroup-servicelinkedrolearn
        """
        return pulumi.get(self, "service_linked_role_arn")

    @property
    @pulumi.getter(name="Tags")
    def tags(self) -> Optional[Sequence['outputs.AutoScalingGroupTagProperty']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-tags
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="TargetGroupARNs")
    def target_group_arns(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-targetgrouparns
        """
        return pulumi.get(self, "target_group_arns")

    @property
    @pulumi.getter(name="TerminationPolicies")
    def termination_policies(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-termpolicy
        """
        return pulumi.get(self, "termination_policies")

    @property
    @pulumi.getter(name="VPCZoneIdentifier")
    def vpc_zone_identifier(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-group.html#cfn-as-group-vpczoneidentifier
        """
        return pulumi.get(self, "vpc_zone_identifier")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupReplacingUpdate(dict):
    def __init__(__self__, *,
                 will_replace: Optional[bool] = None):
        """
        :param bool will_replace: Specifies whether an Auto Scaling group and the instances it contains are replaced
               during an update. During replacement, AWS CloudFormation retains the old group until it
               finishes creating the new one. If the update fails, AWS CloudFormation can roll back to the
               old Auto Scaling group and delete the new Auto Scaling group.
               
               While AWS CloudFormation creates the new group, it doesn't detach or attach any instances.
               After successfully creating the new Auto Scaling group, AWS CloudFormation deletes the old
               Auto Scaling group during the cleanup process.
               
               When you set the WillReplace parameter, remember to specify a matching CreationPolicy. If the
               minimum number of instances (specified by the MinSuccessfulInstancesPercent property) don't
               signal success within the Timeout period (specified in the CreationPolicy policy), the
               replacement update fails and AWS CloudFormation rolls back to the old Auto Scaling group.
        """
        if will_replace is not None:
            pulumi.set(__self__, "will_replace", will_replace)

    @property
    @pulumi.getter(name="WillReplace")
    def will_replace(self) -> Optional[bool]:
        """
        Specifies whether an Auto Scaling group and the instances it contains are replaced
        during an update. During replacement, AWS CloudFormation retains the old group until it
        finishes creating the new one. If the update fails, AWS CloudFormation can roll back to the
        old Auto Scaling group and delete the new Auto Scaling group.

        While AWS CloudFormation creates the new group, it doesn't detach or attach any instances.
        After successfully creating the new Auto Scaling group, AWS CloudFormation deletes the old
        Auto Scaling group during the cleanup process.

        When you set the WillReplace parameter, remember to specify a matching CreationPolicy. If the
        minimum number of instances (specified by the MinSuccessfulInstancesPercent property) don't
        signal success within the Timeout period (specified in the CreationPolicy policy), the
        replacement update fails and AWS CloudFormation rolls back to the old Auto Scaling group.
        """
        return pulumi.get(self, "will_replace")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupRollingUpdate(dict):
    def __init__(__self__, *,
                 max_batch_size: Optional[int] = None,
                 min_instances_in_service: Optional[int] = None,
                 min_successful_instances_percent: Optional[int] = None,
                 pause_time: Optional[str] = None,
                 suspend_processes: Optional[Sequence[str]] = None,
                 wait_on_resource_signals: Optional[bool] = None):
        """
        :param int max_batch_size: Specifies the maximum number of instances that AWS CloudFormation updates.
        :param int min_instances_in_service: Specifies the minimum number of instances that must be in service within the Auto
               Scaling group while AWS CloudFormation updates old instances. This value must be less than the
               MaxSize of the Auto Scaling group.
        :param int min_successful_instances_percent: Specifies the percentage of instances in an Auto Scaling rolling update that must
               signal success for an update to succeed. You can specify a value from 0 to 100. AWS
               CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
               instances with a minimum successful percentage of 50, three instances must signal success.
               
               If an instance doesn't send a signal within the time specified in the PauseTime property, AWS
               CloudFormation assumes that the instance wasn't updated.
               
               If you specify this property, you must also enable the WaitOnResourceSignals and PauseTime
               properties.
               
               The MinSuccessfulInstancesPercent parameter applies only to instances only for signaling
               purpose. To specify the number of instances in your autoscaling group, see the MinSize,
               MaxSize, and DesiredCapacity properties fo the AWS::AutoScaling::AutoScalingGroup resource.
        :param str pause_time: The amount of time that AWS CloudFormation pauses after making a change to a batch of
               instances to give those instances time to start software applications. For example, you might
               need to specify PauseTime when scaling up the number of instances in an Auto Scaling group.
               
               If you enable the WaitOnResourceSignals property, PauseTime is the amount of time that AWS
               CloudFormation should wait for the Auto Scaling group to receive the required number of valid
               signals from added or replaced instances. If the PauseTime is exceeded before the Auto Scaling
               group receives the required number of signals, the update fails. For best results, specify a
               time period that gives your applications sufficient time to get started. If the update needs
               to be rolled back, a short PauseTime can cause the rollback to fail.
               
               Specify PauseTime in the ISO8601 duration format (in the format PT#H#M#S, where each # is the
               number of hours, minutes, and seconds, respectively). The maximum PauseTime is one hour (PT1H).
        :param Sequence[str] suspend_processes: Specifies the Auto Scaling processes to suspend during a stack update. Suspending
               processes prevents Auto Scaling from interfering with a stack update. For example, you can
               suspend alarming so that Amazon EC2 Auto Scaling doesn't execute scaling policies associated
               with an alarm. For valid values, see the ScalingProcesses.member.N parameter for the
               SuspendProcesses action in the Amazon EC2 Auto Scaling API Reference.
        :param bool wait_on_resource_signals: Specifies whether the Auto Scaling group waits on signals from new instances during
               an update. Use this property to ensure that instances have completed installing and
               configuring applications before the Auto Scaling group update proceeds. AWS CloudFormation
               suspends the update of an Auto Scaling group after new EC2 instances are launched into the
               group. AWS CloudFormation must receive a signal from each new instance within the specified
               PauseTime before continuing the update. To signal the Auto Scaling group, use the cfn-signal
               helper script or SignalResource API.
               
               To have instances wait for an Elastic Load Balancing health check before they signal success,
               add a health-check verification by using the cfn-init helper script. For an example, see the
               verify_instance_health command in the Auto Scaling rolling updates sample template.
        """
        if max_batch_size is None:
            max_batch_size = 1
        if max_batch_size is not None:
            pulumi.set(__self__, "max_batch_size", max_batch_size)
        if min_instances_in_service is None:
            min_instances_in_service = 0
        if min_instances_in_service is not None:
            pulumi.set(__self__, "min_instances_in_service", min_instances_in_service)
        if min_successful_instances_percent is None:
            min_successful_instances_percent = 100
        if min_successful_instances_percent is not None:
            pulumi.set(__self__, "min_successful_instances_percent", min_successful_instances_percent)
        if pause_time is None:
            pause_time = 'PT5M'
        if pause_time is not None:
            pulumi.set(__self__, "pause_time", pause_time)
        if suspend_processes is not None:
            pulumi.set(__self__, "suspend_processes", suspend_processes)
        if wait_on_resource_signals is None:
            wait_on_resource_signals = False
        if wait_on_resource_signals is not None:
            pulumi.set(__self__, "wait_on_resource_signals", wait_on_resource_signals)

    @property
    @pulumi.getter(name="MaxBatchSize")
    def max_batch_size(self) -> Optional[int]:
        """
        Specifies the maximum number of instances that AWS CloudFormation updates.
        """
        return pulumi.get(self, "max_batch_size")

    @property
    @pulumi.getter(name="MinInstancesInService")
    def min_instances_in_service(self) -> Optional[int]:
        """
        Specifies the minimum number of instances that must be in service within the Auto
        Scaling group while AWS CloudFormation updates old instances. This value must be less than the
        MaxSize of the Auto Scaling group.
        """
        return pulumi.get(self, "min_instances_in_service")

    @property
    @pulumi.getter(name="MinSuccessfulInstancesPercent")
    def min_successful_instances_percent(self) -> Optional[int]:
        """
        Specifies the percentage of instances in an Auto Scaling rolling update that must
        signal success for an update to succeed. You can specify a value from 0 to 100. AWS
        CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
        instances with a minimum successful percentage of 50, three instances must signal success.

        If an instance doesn't send a signal within the time specified in the PauseTime property, AWS
        CloudFormation assumes that the instance wasn't updated.

        If you specify this property, you must also enable the WaitOnResourceSignals and PauseTime
        properties.

        The MinSuccessfulInstancesPercent parameter applies only to instances only for signaling
        purpose. To specify the number of instances in your autoscaling group, see the MinSize,
        MaxSize, and DesiredCapacity properties fo the AWS::AutoScaling::AutoScalingGroup resource.
        """
        return pulumi.get(self, "min_successful_instances_percent")

    @property
    @pulumi.getter(name="PauseTime")
    def pause_time(self) -> Optional[str]:
        """
        The amount of time that AWS CloudFormation pauses after making a change to a batch of
        instances to give those instances time to start software applications. For example, you might
        need to specify PauseTime when scaling up the number of instances in an Auto Scaling group.

        If you enable the WaitOnResourceSignals property, PauseTime is the amount of time that AWS
        CloudFormation should wait for the Auto Scaling group to receive the required number of valid
        signals from added or replaced instances. If the PauseTime is exceeded before the Auto Scaling
        group receives the required number of signals, the update fails. For best results, specify a
        time period that gives your applications sufficient time to get started. If the update needs
        to be rolled back, a short PauseTime can cause the rollback to fail.

        Specify PauseTime in the ISO8601 duration format (in the format PT#H#M#S, where each # is the
        number of hours, minutes, and seconds, respectively). The maximum PauseTime is one hour (PT1H).
        """
        return pulumi.get(self, "pause_time")

    @property
    @pulumi.getter(name="SuspendProcesses")
    def suspend_processes(self) -> Optional[Sequence[str]]:
        """
        Specifies the Auto Scaling processes to suspend during a stack update. Suspending
        processes prevents Auto Scaling from interfering with a stack update. For example, you can
        suspend alarming so that Amazon EC2 Auto Scaling doesn't execute scaling policies associated
        with an alarm. For valid values, see the ScalingProcesses.member.N parameter for the
        SuspendProcesses action in the Amazon EC2 Auto Scaling API Reference.
        """
        return pulumi.get(self, "suspend_processes")

    @property
    @pulumi.getter(name="WaitOnResourceSignals")
    def wait_on_resource_signals(self) -> Optional[bool]:
        """
        Specifies whether the Auto Scaling group waits on signals from new instances during
        an update. Use this property to ensure that instances have completed installing and
        configuring applications before the Auto Scaling group update proceeds. AWS CloudFormation
        suspends the update of an Auto Scaling group after new EC2 instances are launched into the
        group. AWS CloudFormation must receive a signal from each new instance within the specified
        PauseTime before continuing the update. To signal the Auto Scaling group, use the cfn-signal
        helper script or SignalResource API.

        To have instances wait for an Elastic Load Balancing health check before they signal success,
        add a health-check verification by using the cfn-init helper script. For an example, see the
        verify_instance_health command in the Auto Scaling rolling updates sample template.
        """
        return pulumi.get(self, "wait_on_resource_signals")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupScheduledAction(dict):
    def __init__(__self__, *,
                 ignore_unmodified_group_size_properties: Optional[bool] = None):
        """
        :param bool ignore_unmodified_group_size_properties: If true, AWS CloudFormation ignores differences in group size properties between your
               current Auto Scaling group and the Auto Scaling group described in the	AWS::AutoScaling::AutoScalingGroup resource of your template during a stack update. If you
               modify any of the group size property values in your template, AWS CloudFormation uses the
               modified values and updates your Auto Scaling group.
        """
        if ignore_unmodified_group_size_properties is None:
            ignore_unmodified_group_size_properties = False
        if ignore_unmodified_group_size_properties is not None:
            pulumi.set(__self__, "ignore_unmodified_group_size_properties", ignore_unmodified_group_size_properties)

    @property
    @pulumi.getter(name="IgnoreUnmodifiedGroupSizeProperties")
    def ignore_unmodified_group_size_properties(self) -> Optional[bool]:
        """
        If true, AWS CloudFormation ignores differences in group size properties between your
        current Auto Scaling group and the Auto Scaling group described in the	AWS::AutoScaling::AutoScalingGroup resource of your template during a stack update. If you
        modify any of the group size property values in your template, AWS CloudFormation uses the
        modified values and updates your Auto Scaling group.
        """
        return pulumi.get(self, "ignore_unmodified_group_size_properties")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupTagProperty(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html
    """
    def __init__(__self__, *,
                 key: str,
                 propagate_at_launch: bool,
                 value: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html
        :param str key: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Key
        :param bool propagate_at_launch: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-PropagateAtLaunch
        :param str value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Value
        """
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "propagate_at_launch", propagate_at_launch)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Key")
    def key(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Key
        """
        return pulumi.get(self, "key")

    @property
    @pulumi.getter(name="PropagateAtLaunch")
    def propagate_at_launch(self) -> bool:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-PropagateAtLaunch
        """
        return pulumi.get(self, "propagate_at_launch")

    @property
    @pulumi.getter(name="Value")
    def value(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-tags.html#cfn-as-tags-Value
        """
        return pulumi.get(self, "value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class AutoScalingGroupUpdatePolicy(dict):
    """
    The UpdatePolicy for AutoScalingGroup resources.
    """
    def __init__(__self__, *,
                 auto_scaling_replacing_update: Optional['outputs.AutoScalingGroupReplacingUpdate'] = None,
                 auto_scaling_rolling_update: Optional['outputs.AutoScalingGroupRollingUpdate'] = None,
                 auto_scaling_scheduled_action: Optional['outputs.AutoScalingGroupScheduledAction'] = None):
        """
        The UpdatePolicy for AutoScalingGroup resources.
        :param 'AutoScalingGroupReplacingUpdateArgs' auto_scaling_replacing_update: To specify how AWS CloudFormation handles replacement updates for an Auto Scaling
               group, use the AutoScalingReplacingUpdate policy. This policy enables you to specify whether
               AWS CloudFormation replaces an Auto Scaling group with a new one or replaces only the
               instances in the Auto Scaling group.
        :param 'AutoScalingGroupRollingUpdateArgs' auto_scaling_rolling_update: To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group,
               use the AutoScalingRollingUpdate policy. Rolling updates enable you to specify whether AWS
               CloudFormation updates instances that are in an Auto Scaling group in batches or all at once.
               
               *Important*: During a rolling update, some Auto Scaling processes might make changes to the
               Auto Scaling group before AWS CloudFormation completes the rolling update. These changes might
               cause the rolling update to fail. To prevent Auto Scaling from running processes during a
               rolling update, use the SuspendProcesses property. For more information, see
               [What are some recommended best practices for performing Auto Scaling group rolling updates?](https://aws.amazon.com/premiumsupport/knowledge-center/auto-scaling-group-rolling-updates/)
               
               Be aware that, during stack update rollback operations, CloudFormation uses the UpdatePolicy
               configuration specified in the template before the current stack update operation. For
               example, suppose you have updated the MaxBatchSize in your stack template's UpdatePolicy from
               1 to 10. You then perform a stack update, and that update fails and CloudFormation initiates
               an update rollback operation. In such a case, CloudFormation will use 1 as the maximum batch
               size, rather than 10. For this reason, we recommend you make changes to the UpdatePolicy
               configuration in a stack update separate from, and prior to, any updates to the
               AutoScalingGroup resource that are likely to trigger rolling updates.
        :param 'AutoScalingGroupScheduledActionArgs' auto_scaling_scheduled_action: To specify how AWS CloudFormation handles updates for the MinSize, MaxSize, and
               DesiredCapacity properties when the AWS::AutoScaling::AutoScalingGroup resource has an
               associated scheduled action, use the AutoScalingScheduledAction policy.
               
               With scheduled actions, the group size properties of an Auto Scaling group can change at any
               time. When you update a stack with an Auto Scaling group and scheduled action, AWS
               CloudFormation always sets the group size property values of your Auto Scaling group to the
               values that are defined in the AWS::AutoScaling::AutoScalingGroup resource of your template,
               even if a scheduled action is in effect.
               
               If you do not want AWS CloudFormation to change any of the group size property values when you
               have a scheduled action in effect, use the AutoScalingScheduledAction update policy and set
               IgnoreUnmodifiedGroupSizeProperties to true to prevent AWS CloudFormation from changing the
               MinSize, MaxSize, or DesiredCapacity properties unless you have modified these values in your
               template.
        """
        if auto_scaling_replacing_update is not None:
            pulumi.set(__self__, "auto_scaling_replacing_update", auto_scaling_replacing_update)
        if auto_scaling_rolling_update is not None:
            pulumi.set(__self__, "auto_scaling_rolling_update", auto_scaling_rolling_update)
        if auto_scaling_scheduled_action is not None:
            pulumi.set(__self__, "auto_scaling_scheduled_action", auto_scaling_scheduled_action)

    @property
    @pulumi.getter(name="AutoScalingReplacingUpdate")
    def auto_scaling_replacing_update(self) -> Optional['outputs.AutoScalingGroupReplacingUpdate']:
        """
        To specify how AWS CloudFormation handles replacement updates for an Auto Scaling
        group, use the AutoScalingReplacingUpdate policy. This policy enables you to specify whether
        AWS CloudFormation replaces an Auto Scaling group with a new one or replaces only the
        instances in the Auto Scaling group.
        """
        return pulumi.get(self, "auto_scaling_replacing_update")

    @property
    @pulumi.getter(name="AutoScalingRollingUpdate")
    def auto_scaling_rolling_update(self) -> Optional['outputs.AutoScalingGroupRollingUpdate']:
        """
        To specify how AWS CloudFormation handles rolling updates for an Auto Scaling group,
        use the AutoScalingRollingUpdate policy. Rolling updates enable you to specify whether AWS
        CloudFormation updates instances that are in an Auto Scaling group in batches or all at once.

        *Important*: During a rolling update, some Auto Scaling processes might make changes to the
        Auto Scaling group before AWS CloudFormation completes the rolling update. These changes might
        cause the rolling update to fail. To prevent Auto Scaling from running processes during a
        rolling update, use the SuspendProcesses property. For more information, see
        [What are some recommended best practices for performing Auto Scaling group rolling updates?](https://aws.amazon.com/premiumsupport/knowledge-center/auto-scaling-group-rolling-updates/)

        Be aware that, during stack update rollback operations, CloudFormation uses the UpdatePolicy
        configuration specified in the template before the current stack update operation. For
        example, suppose you have updated the MaxBatchSize in your stack template's UpdatePolicy from
        1 to 10. You then perform a stack update, and that update fails and CloudFormation initiates
        an update rollback operation. In such a case, CloudFormation will use 1 as the maximum batch
        size, rather than 10. For this reason, we recommend you make changes to the UpdatePolicy
        configuration in a stack update separate from, and prior to, any updates to the
        AutoScalingGroup resource that are likely to trigger rolling updates.
        """
        return pulumi.get(self, "auto_scaling_rolling_update")

    @property
    @pulumi.getter(name="AutoScalingScheduledAction")
    def auto_scaling_scheduled_action(self) -> Optional['outputs.AutoScalingGroupScheduledAction']:
        """
        To specify how AWS CloudFormation handles updates for the MinSize, MaxSize, and
        DesiredCapacity properties when the AWS::AutoScaling::AutoScalingGroup resource has an
        associated scheduled action, use the AutoScalingScheduledAction policy.

        With scheduled actions, the group size properties of an Auto Scaling group can change at any
        time. When you update a stack with an Auto Scaling group and scheduled action, AWS
        CloudFormation always sets the group size property values of your Auto Scaling group to the
        values that are defined in the AWS::AutoScaling::AutoScalingGroup resource of your template,
        even if a scheduled action is in effect.

        If you do not want AWS CloudFormation to change any of the group size property values when you
        have a scheduled action in effect, use the AutoScalingScheduledAction update policy and set
        IgnoreUnmodifiedGroupSizeProperties to true to prevent AWS CloudFormation from changing the
        MinSize, MaxSize, or DesiredCapacity properties unless you have modified these values in your
        template.
        """
        return pulumi.get(self, "auto_scaling_scheduled_action")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LaunchConfigurationAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LaunchConfigurationBlockDevice(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html
    """
    def __init__(__self__, *,
                 delete_on_termination: Optional[bool] = None,
                 encrypted: Optional[bool] = None,
                 iops: Optional[int] = None,
                 snapshot_id: Optional[str] = None,
                 volume_size: Optional[int] = None,
                 volume_type: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html
        :param bool delete_on_termination: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-deleteonterm
        :param bool encrypted: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-encrypted
        :param int iops: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-iops
        :param str snapshot_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-snapshotid
        :param int volume_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumesize
        :param str volume_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumetype
        """
        if delete_on_termination is not None:
            pulumi.set(__self__, "delete_on_termination", delete_on_termination)
        if encrypted is not None:
            pulumi.set(__self__, "encrypted", encrypted)
        if iops is not None:
            pulumi.set(__self__, "iops", iops)
        if snapshot_id is not None:
            pulumi.set(__self__, "snapshot_id", snapshot_id)
        if volume_size is not None:
            pulumi.set(__self__, "volume_size", volume_size)
        if volume_type is not None:
            pulumi.set(__self__, "volume_type", volume_type)

    @property
    @pulumi.getter(name="DeleteOnTermination")
    def delete_on_termination(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-deleteonterm
        """
        return pulumi.get(self, "delete_on_termination")

    @property
    @pulumi.getter(name="Encrypted")
    def encrypted(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-encrypted
        """
        return pulumi.get(self, "encrypted")

    @property
    @pulumi.getter(name="Iops")
    def iops(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-iops
        """
        return pulumi.get(self, "iops")

    @property
    @pulumi.getter(name="SnapshotId")
    def snapshot_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-snapshotid
        """
        return pulumi.get(self, "snapshot_id")

    @property
    @pulumi.getter(name="VolumeSize")
    def volume_size(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumesize
        """
        return pulumi.get(self, "volume_size")

    @property
    @pulumi.getter(name="VolumeType")
    def volume_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-template.html#cfn-as-launchconfig-blockdev-template-volumetype
        """
        return pulumi.get(self, "volume_type")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LaunchConfigurationBlockDeviceMapping(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html
    """
    def __init__(__self__, *,
                 device_name: str,
                 ebs: Optional['outputs.LaunchConfigurationBlockDevice'] = None,
                 no_device: Optional[bool] = None,
                 virtual_name: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html
        :param str device_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-devicename
        :param 'LaunchConfigurationBlockDeviceArgs' ebs: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-ebs
        :param bool no_device: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-nodevice
        :param str virtual_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-virtualname
        """
        pulumi.set(__self__, "device_name", device_name)
        if ebs is not None:
            pulumi.set(__self__, "ebs", ebs)
        if no_device is not None:
            pulumi.set(__self__, "no_device", no_device)
        if virtual_name is not None:
            pulumi.set(__self__, "virtual_name", virtual_name)

    @property
    @pulumi.getter(name="DeviceName")
    def device_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-devicename
        """
        return pulumi.get(self, "device_name")

    @property
    @pulumi.getter(name="Ebs")
    def ebs(self) -> Optional['outputs.LaunchConfigurationBlockDevice']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-ebs
        """
        return pulumi.get(self, "ebs")

    @property
    @pulumi.getter(name="NoDevice")
    def no_device(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-nodevice
        """
        return pulumi.get(self, "no_device")

    @property
    @pulumi.getter(name="VirtualName")
    def virtual_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig-blockdev-mapping.html#cfn-as-launchconfig-blockdev-mapping-virtualname
        """
        return pulumi.get(self, "virtual_name")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LaunchConfigurationMetadataOptions(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html
    """
    def __init__(__self__, *,
                 http_endpoint: Optional[str] = None,
                 http_put_response_hop_limit: Optional[int] = None,
                 http_tokens: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html
        :param str http_endpoint: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpendpoint
        :param int http_put_response_hop_limit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpputresponsehoplimit
        :param str http_tokens: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httptokens
        """
        if http_endpoint is not None:
            pulumi.set(__self__, "http_endpoint", http_endpoint)
        if http_put_response_hop_limit is not None:
            pulumi.set(__self__, "http_put_response_hop_limit", http_put_response_hop_limit)
        if http_tokens is not None:
            pulumi.set(__self__, "http_tokens", http_tokens)

    @property
    @pulumi.getter(name="HttpEndpoint")
    def http_endpoint(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpendpoint
        """
        return pulumi.get(self, "http_endpoint")

    @property
    @pulumi.getter(name="HttpPutResponseHopLimit")
    def http_put_response_hop_limit(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httpputresponsehoplimit
        """
        return pulumi.get(self, "http_put_response_hop_limit")

    @property
    @pulumi.getter(name="HttpTokens")
    def http_tokens(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-launchconfig-metadataoptions.html#cfn-autoscaling-launchconfig-metadataoptions-httptokens
        """
        return pulumi.get(self, "http_tokens")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LaunchConfigurationProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html
    """
    def __init__(__self__, *,
                 image_id: str,
                 instance_type: str,
                 associate_public_ip_address: Optional[bool] = None,
                 block_device_mappings: Optional[Sequence['outputs.LaunchConfigurationBlockDeviceMapping']] = None,
                 classic_link_vpc_id: Optional[str] = None,
                 classic_link_vpc_security_groups: Optional[Sequence[str]] = None,
                 ebs_optimized: Optional[bool] = None,
                 iam_instance_profile: Optional[str] = None,
                 instance_id: Optional[str] = None,
                 instance_monitoring: Optional[bool] = None,
                 kernel_id: Optional[str] = None,
                 key_name: Optional[str] = None,
                 launch_configuration_name: Optional[str] = None,
                 metadata_options: Optional['outputs.LaunchConfigurationMetadataOptions'] = None,
                 placement_tenancy: Optional[str] = None,
                 ram_disk_id: Optional[str] = None,
                 security_groups: Optional[Sequence[str]] = None,
                 spot_price: Optional[str] = None,
                 user_data: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html
        :param str image_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-imageid
        :param str instance_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancetype
        :param bool associate_public_ip_address: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cf-as-launchconfig-associatepubip
        :param Sequence['LaunchConfigurationBlockDeviceMappingArgs'] block_device_mappings: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-blockdevicemappings
        :param str classic_link_vpc_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcid
        :param Sequence[str] classic_link_vpc_security_groups: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcsecuritygroups
        :param bool ebs_optimized: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ebsoptimized
        :param str iam_instance_profile: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile
        :param str instance_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instanceid
        :param bool instance_monitoring: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancemonitoring
        :param str kernel_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-kernelid
        :param str key_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-keyname
        :param str launch_configuration_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-launchconfigurationname
        :param 'LaunchConfigurationMetadataOptionsArgs' metadata_options: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-metadataoptions
        :param str placement_tenancy: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-placementtenancy
        :param str ram_disk_id: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ramdiskid
        :param Sequence[str] security_groups: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-securitygroups
        :param str spot_price: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-spotprice
        :param str user_data: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-userdata
        """
        pulumi.set(__self__, "image_id", image_id)
        pulumi.set(__self__, "instance_type", instance_type)
        if associate_public_ip_address is not None:
            pulumi.set(__self__, "associate_public_ip_address", associate_public_ip_address)
        if block_device_mappings is not None:
            pulumi.set(__self__, "block_device_mappings", block_device_mappings)
        if classic_link_vpc_id is not None:
            pulumi.set(__self__, "classic_link_vpc_id", classic_link_vpc_id)
        if classic_link_vpc_security_groups is not None:
            pulumi.set(__self__, "classic_link_vpc_security_groups", classic_link_vpc_security_groups)
        if ebs_optimized is not None:
            pulumi.set(__self__, "ebs_optimized", ebs_optimized)
        if iam_instance_profile is not None:
            pulumi.set(__self__, "iam_instance_profile", iam_instance_profile)
        if instance_id is not None:
            pulumi.set(__self__, "instance_id", instance_id)
        if instance_monitoring is not None:
            pulumi.set(__self__, "instance_monitoring", instance_monitoring)
        if kernel_id is not None:
            pulumi.set(__self__, "kernel_id", kernel_id)
        if key_name is not None:
            pulumi.set(__self__, "key_name", key_name)
        if launch_configuration_name is not None:
            pulumi.set(__self__, "launch_configuration_name", launch_configuration_name)
        if metadata_options is not None:
            pulumi.set(__self__, "metadata_options", metadata_options)
        if placement_tenancy is not None:
            pulumi.set(__self__, "placement_tenancy", placement_tenancy)
        if ram_disk_id is not None:
            pulumi.set(__self__, "ram_disk_id", ram_disk_id)
        if security_groups is not None:
            pulumi.set(__self__, "security_groups", security_groups)
        if spot_price is not None:
            pulumi.set(__self__, "spot_price", spot_price)
        if user_data is not None:
            pulumi.set(__self__, "user_data", user_data)

    @property
    @pulumi.getter(name="ImageId")
    def image_id(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-imageid
        """
        return pulumi.get(self, "image_id")

    @property
    @pulumi.getter(name="InstanceType")
    def instance_type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancetype
        """
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="AssociatePublicIpAddress")
    def associate_public_ip_address(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cf-as-launchconfig-associatepubip
        """
        return pulumi.get(self, "associate_public_ip_address")

    @property
    @pulumi.getter(name="BlockDeviceMappings")
    def block_device_mappings(self) -> Optional[Sequence['outputs.LaunchConfigurationBlockDeviceMapping']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-blockdevicemappings
        """
        return pulumi.get(self, "block_device_mappings")

    @property
    @pulumi.getter(name="ClassicLinkVPCId")
    def classic_link_vpc_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcid
        """
        return pulumi.get(self, "classic_link_vpc_id")

    @property
    @pulumi.getter(name="ClassicLinkVPCSecurityGroups")
    def classic_link_vpc_security_groups(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-classiclinkvpcsecuritygroups
        """
        return pulumi.get(self, "classic_link_vpc_security_groups")

    @property
    @pulumi.getter(name="EbsOptimized")
    def ebs_optimized(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ebsoptimized
        """
        return pulumi.get(self, "ebs_optimized")

    @property
    @pulumi.getter(name="IamInstanceProfile")
    def iam_instance_profile(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-iaminstanceprofile
        """
        return pulumi.get(self, "iam_instance_profile")

    @property
    @pulumi.getter(name="InstanceId")
    def instance_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instanceid
        """
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="InstanceMonitoring")
    def instance_monitoring(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-instancemonitoring
        """
        return pulumi.get(self, "instance_monitoring")

    @property
    @pulumi.getter(name="KernelId")
    def kernel_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-kernelid
        """
        return pulumi.get(self, "kernel_id")

    @property
    @pulumi.getter(name="KeyName")
    def key_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-keyname
        """
        return pulumi.get(self, "key_name")

    @property
    @pulumi.getter(name="LaunchConfigurationName")
    def launch_configuration_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-launchconfigurationname
        """
        return pulumi.get(self, "launch_configuration_name")

    @property
    @pulumi.getter(name="MetadataOptions")
    def metadata_options(self) -> Optional['outputs.LaunchConfigurationMetadataOptions']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-autoscaling-launchconfig-metadataoptions
        """
        return pulumi.get(self, "metadata_options")

    @property
    @pulumi.getter(name="PlacementTenancy")
    def placement_tenancy(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-placementtenancy
        """
        return pulumi.get(self, "placement_tenancy")

    @property
    @pulumi.getter(name="RamDiskId")
    def ram_disk_id(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-ramdiskid
        """
        return pulumi.get(self, "ram_disk_id")

    @property
    @pulumi.getter(name="SecurityGroups")
    def security_groups(self) -> Optional[Sequence[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-securitygroups
        """
        return pulumi.get(self, "security_groups")

    @property
    @pulumi.getter(name="SpotPrice")
    def spot_price(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-spotprice
        """
        return pulumi.get(self, "spot_price")

    @property
    @pulumi.getter(name="UserData")
    def user_data(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-launchconfig.html#cfn-as-launchconfig-userdata
        """
        return pulumi.get(self, "user_data")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LifecycleHookAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class LifecycleHookProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html
    """
    def __init__(__self__, *,
                 auto_scaling_group_name: str,
                 lifecycle_transition: str,
                 default_result: Optional[str] = None,
                 heartbeat_timeout: Optional[int] = None,
                 lifecycle_hook_name: Optional[str] = None,
                 notification_metadata: Optional[str] = None,
                 notification_target_arn: Optional[str] = None,
                 role_arn: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html
        :param str auto_scaling_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-autoscalinggroupname
        :param str lifecycle_transition: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-lifecycletransition
        :param str default_result: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-defaultresult
        :param int heartbeat_timeout: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-heartbeattimeout
        :param str lifecycle_hook_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname
        :param str notification_metadata: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-notificationmetadata
        :param str notification_target_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-notificationtargetarn
        :param str role_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-rolearn
        """
        pulumi.set(__self__, "auto_scaling_group_name", auto_scaling_group_name)
        pulumi.set(__self__, "lifecycle_transition", lifecycle_transition)
        if default_result is not None:
            pulumi.set(__self__, "default_result", default_result)
        if heartbeat_timeout is not None:
            pulumi.set(__self__, "heartbeat_timeout", heartbeat_timeout)
        if lifecycle_hook_name is not None:
            pulumi.set(__self__, "lifecycle_hook_name", lifecycle_hook_name)
        if notification_metadata is not None:
            pulumi.set(__self__, "notification_metadata", notification_metadata)
        if notification_target_arn is not None:
            pulumi.set(__self__, "notification_target_arn", notification_target_arn)
        if role_arn is not None:
            pulumi.set(__self__, "role_arn", role_arn)

    @property
    @pulumi.getter(name="AutoScalingGroupName")
    def auto_scaling_group_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-autoscalinggroupname
        """
        return pulumi.get(self, "auto_scaling_group_name")

    @property
    @pulumi.getter(name="LifecycleTransition")
    def lifecycle_transition(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-lifecycletransition
        """
        return pulumi.get(self, "lifecycle_transition")

    @property
    @pulumi.getter(name="DefaultResult")
    def default_result(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-defaultresult
        """
        return pulumi.get(self, "default_result")

    @property
    @pulumi.getter(name="HeartbeatTimeout")
    def heartbeat_timeout(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-heartbeattimeout
        """
        return pulumi.get(self, "heartbeat_timeout")

    @property
    @pulumi.getter(name="LifecycleHookName")
    def lifecycle_hook_name(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-autoscaling-lifecyclehook-lifecyclehookname
        """
        return pulumi.get(self, "lifecycle_hook_name")

    @property
    @pulumi.getter(name="NotificationMetadata")
    def notification_metadata(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-notificationmetadata
        """
        return pulumi.get(self, "notification_metadata")

    @property
    @pulumi.getter(name="NotificationTargetARN")
    def notification_target_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-notificationtargetarn
        """
        return pulumi.get(self, "notification_target_arn")

    @property
    @pulumi.getter(name="RoleARN")
    def role_arn(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-lifecyclehook.html#cfn-as-lifecyclehook-rolearn
        """
        return pulumi.get(self, "role_arn")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyCustomizedMetricSpecification(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html
    """
    def __init__(__self__, *,
                 metric_name: str,
                 namespace: str,
                 statistic: str,
                 dimensions: Optional[Sequence['outputs.ScalingPolicyMetricDimension']] = None,
                 unit: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html
        :param str metric_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-metricname
        :param str namespace: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-namespace
        :param str statistic: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-statistic
        :param Sequence['ScalingPolicyMetricDimensionArgs'] dimensions: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-dimensions
        :param str unit: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-unit
        """
        pulumi.set(__self__, "metric_name", metric_name)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "statistic", statistic)
        if dimensions is not None:
            pulumi.set(__self__, "dimensions", dimensions)
        if unit is not None:
            pulumi.set(__self__, "unit", unit)

    @property
    @pulumi.getter(name="MetricName")
    def metric_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-metricname
        """
        return pulumi.get(self, "metric_name")

    @property
    @pulumi.getter(name="Namespace")
    def namespace(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-namespace
        """
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="Statistic")
    def statistic(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-statistic
        """
        return pulumi.get(self, "statistic")

    @property
    @pulumi.getter(name="Dimensions")
    def dimensions(self) -> Optional[Sequence['outputs.ScalingPolicyMetricDimension']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-dimensions
        """
        return pulumi.get(self, "dimensions")

    @property
    @pulumi.getter(name="Unit")
    def unit(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-customizedmetricspecification.html#cfn-autoscaling-scalingpolicy-customizedmetricspecification-unit
        """
        return pulumi.get(self, "unit")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyMetricDimension(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html
    """
    def __init__(__self__, *,
                 name: str,
                 value: str):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html
        :param str name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-name
        :param str value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-value
        """
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter(name="Name")
    def name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-name
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="Value")
    def value(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-metricdimension.html#cfn-autoscaling-scalingpolicy-metricdimension-value
        """
        return pulumi.get(self, "value")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyPredefinedMetricSpecification(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html
    """
    def __init__(__self__, *,
                 predefined_metric_type: str,
                 resource_label: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html
        :param str predefined_metric_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype
        :param str resource_label: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel
        """
        pulumi.set(__self__, "predefined_metric_type", predefined_metric_type)
        if resource_label is not None:
            pulumi.set(__self__, "resource_label", resource_label)

    @property
    @pulumi.getter(name="PredefinedMetricType")
    def predefined_metric_type(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-predefinedmetrictype
        """
        return pulumi.get(self, "predefined_metric_type")

    @property
    @pulumi.getter(name="ResourceLabel")
    def resource_label(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-predefinedmetricspecification.html#cfn-autoscaling-scalingpolicy-predefinedmetricspecification-resourcelabel
        """
        return pulumi.get(self, "resource_label")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html
    """
    def __init__(__self__, *,
                 auto_scaling_group_name: str,
                 adjustment_type: Optional[str] = None,
                 cooldown: Optional[str] = None,
                 estimated_instance_warmup: Optional[int] = None,
                 metric_aggregation_type: Optional[str] = None,
                 min_adjustment_magnitude: Optional[int] = None,
                 policy_type: Optional[str] = None,
                 scaling_adjustment: Optional[int] = None,
                 step_adjustments: Optional[Sequence['outputs.ScalingPolicyStepAdjustment']] = None,
                 target_tracking_configuration: Optional['outputs.ScalingPolicyTargetTrackingConfiguration'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html
        :param str auto_scaling_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-autoscalinggroupname
        :param str adjustment_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-adjustmenttype
        :param str cooldown: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-cooldown
        :param int estimated_instance_warmup: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-estimatedinstancewarmup
        :param str metric_aggregation_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-metricaggregationtype
        :param int min_adjustment_magnitude: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-minadjustmentmagnitude
        :param str policy_type: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-policytype
        :param int scaling_adjustment: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-scalingadjustment
        :param Sequence['ScalingPolicyStepAdjustmentArgs'] step_adjustments: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-stepadjustments
        :param 'ScalingPolicyTargetTrackingConfigurationArgs' target_tracking_configuration: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration
        """
        pulumi.set(__self__, "auto_scaling_group_name", auto_scaling_group_name)
        if adjustment_type is not None:
            pulumi.set(__self__, "adjustment_type", adjustment_type)
        if cooldown is not None:
            pulumi.set(__self__, "cooldown", cooldown)
        if estimated_instance_warmup is not None:
            pulumi.set(__self__, "estimated_instance_warmup", estimated_instance_warmup)
        if metric_aggregation_type is not None:
            pulumi.set(__self__, "metric_aggregation_type", metric_aggregation_type)
        if min_adjustment_magnitude is not None:
            pulumi.set(__self__, "min_adjustment_magnitude", min_adjustment_magnitude)
        if policy_type is not None:
            pulumi.set(__self__, "policy_type", policy_type)
        if scaling_adjustment is not None:
            pulumi.set(__self__, "scaling_adjustment", scaling_adjustment)
        if step_adjustments is not None:
            pulumi.set(__self__, "step_adjustments", step_adjustments)
        if target_tracking_configuration is not None:
            pulumi.set(__self__, "target_tracking_configuration", target_tracking_configuration)

    @property
    @pulumi.getter(name="AutoScalingGroupName")
    def auto_scaling_group_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-autoscalinggroupname
        """
        return pulumi.get(self, "auto_scaling_group_name")

    @property
    @pulumi.getter(name="AdjustmentType")
    def adjustment_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-adjustmenttype
        """
        return pulumi.get(self, "adjustment_type")

    @property
    @pulumi.getter(name="Cooldown")
    def cooldown(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-cooldown
        """
        return pulumi.get(self, "cooldown")

    @property
    @pulumi.getter(name="EstimatedInstanceWarmup")
    def estimated_instance_warmup(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-estimatedinstancewarmup
        """
        return pulumi.get(self, "estimated_instance_warmup")

    @property
    @pulumi.getter(name="MetricAggregationType")
    def metric_aggregation_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-metricaggregationtype
        """
        return pulumi.get(self, "metric_aggregation_type")

    @property
    @pulumi.getter(name="MinAdjustmentMagnitude")
    def min_adjustment_magnitude(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-minadjustmentmagnitude
        """
        return pulumi.get(self, "min_adjustment_magnitude")

    @property
    @pulumi.getter(name="PolicyType")
    def policy_type(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-policytype
        """
        return pulumi.get(self, "policy_type")

    @property
    @pulumi.getter(name="ScalingAdjustment")
    def scaling_adjustment(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-scalingadjustment
        """
        return pulumi.get(self, "scaling_adjustment")

    @property
    @pulumi.getter(name="StepAdjustments")
    def step_adjustments(self) -> Optional[Sequence['outputs.ScalingPolicyStepAdjustment']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-as-scalingpolicy-stepadjustments
        """
        return pulumi.get(self, "step_adjustments")

    @property
    @pulumi.getter(name="TargetTrackingConfiguration")
    def target_tracking_configuration(self) -> Optional['outputs.ScalingPolicyTargetTrackingConfiguration']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-as-policy.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration
        """
        return pulumi.get(self, "target_tracking_configuration")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyStepAdjustment(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html
    """
    def __init__(__self__, *,
                 scaling_adjustment: int,
                 metric_interval_lower_bound: Optional[float] = None,
                 metric_interval_upper_bound: Optional[float] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html
        :param int scaling_adjustment: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-scalingadjustment
        :param float metric_interval_lower_bound: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervallowerbound
        :param float metric_interval_upper_bound: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervalupperbound
        """
        pulumi.set(__self__, "scaling_adjustment", scaling_adjustment)
        if metric_interval_lower_bound is not None:
            pulumi.set(__self__, "metric_interval_lower_bound", metric_interval_lower_bound)
        if metric_interval_upper_bound is not None:
            pulumi.set(__self__, "metric_interval_upper_bound", metric_interval_upper_bound)

    @property
    @pulumi.getter(name="ScalingAdjustment")
    def scaling_adjustment(self) -> int:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-scalingadjustment
        """
        return pulumi.get(self, "scaling_adjustment")

    @property
    @pulumi.getter(name="MetricIntervalLowerBound")
    def metric_interval_lower_bound(self) -> Optional[float]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervallowerbound
        """
        return pulumi.get(self, "metric_interval_lower_bound")

    @property
    @pulumi.getter(name="MetricIntervalUpperBound")
    def metric_interval_upper_bound(self) -> Optional[float]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-stepadjustments.html#cfn-autoscaling-scalingpolicy-stepadjustment-metricintervalupperbound
        """
        return pulumi.get(self, "metric_interval_upper_bound")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScalingPolicyTargetTrackingConfiguration(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html
    """
    def __init__(__self__, *,
                 target_value: float,
                 customized_metric_specification: Optional['outputs.ScalingPolicyCustomizedMetricSpecification'] = None,
                 disable_scale_in: Optional[bool] = None,
                 predefined_metric_specification: Optional['outputs.ScalingPolicyPredefinedMetricSpecification'] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html
        :param float target_value: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-targetvalue
        :param 'ScalingPolicyCustomizedMetricSpecificationArgs' customized_metric_specification: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-customizedmetricspecification
        :param bool disable_scale_in: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-disablescalein
        :param 'ScalingPolicyPredefinedMetricSpecificationArgs' predefined_metric_specification: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-predefinedmetricspecification
        """
        pulumi.set(__self__, "target_value", target_value)
        if customized_metric_specification is not None:
            pulumi.set(__self__, "customized_metric_specification", customized_metric_specification)
        if disable_scale_in is not None:
            pulumi.set(__self__, "disable_scale_in", disable_scale_in)
        if predefined_metric_specification is not None:
            pulumi.set(__self__, "predefined_metric_specification", predefined_metric_specification)

    @property
    @pulumi.getter(name="TargetValue")
    def target_value(self) -> float:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-targetvalue
        """
        return pulumi.get(self, "target_value")

    @property
    @pulumi.getter(name="CustomizedMetricSpecification")
    def customized_metric_specification(self) -> Optional['outputs.ScalingPolicyCustomizedMetricSpecification']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-customizedmetricspecification
        """
        return pulumi.get(self, "customized_metric_specification")

    @property
    @pulumi.getter(name="DisableScaleIn")
    def disable_scale_in(self) -> Optional[bool]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-disablescalein
        """
        return pulumi.get(self, "disable_scale_in")

    @property
    @pulumi.getter(name="PredefinedMetricSpecification")
    def predefined_metric_specification(self) -> Optional['outputs.ScalingPolicyPredefinedMetricSpecification']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-autoscaling-scalingpolicy-targettrackingconfiguration.html#cfn-autoscaling-scalingpolicy-targettrackingconfiguration-predefinedmetricspecification
        """
        return pulumi.get(self, "predefined_metric_specification")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduledActionAttributes(dict):
    def __init__(__self__):
        pass

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


@pulumi.output_type
class ScheduledActionProperties(dict):
    """
    http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html
    """
    def __init__(__self__, *,
                 auto_scaling_group_name: str,
                 desired_capacity: Optional[int] = None,
                 end_time: Optional[str] = None,
                 max_size: Optional[int] = None,
                 min_size: Optional[int] = None,
                 recurrence: Optional[str] = None,
                 start_time: Optional[str] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html
        :param str auto_scaling_group_name: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-asgname
        :param int desired_capacity: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-desiredcapacity
        :param str end_time: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-endtime
        :param int max_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-maxsize
        :param int min_size: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-minsize
        :param str recurrence: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-recurrence
        :param str start_time: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-starttime
        """
        pulumi.set(__self__, "auto_scaling_group_name", auto_scaling_group_name)
        if desired_capacity is not None:
            pulumi.set(__self__, "desired_capacity", desired_capacity)
        if end_time is not None:
            pulumi.set(__self__, "end_time", end_time)
        if max_size is not None:
            pulumi.set(__self__, "max_size", max_size)
        if min_size is not None:
            pulumi.set(__self__, "min_size", min_size)
        if recurrence is not None:
            pulumi.set(__self__, "recurrence", recurrence)
        if start_time is not None:
            pulumi.set(__self__, "start_time", start_time)

    @property
    @pulumi.getter(name="AutoScalingGroupName")
    def auto_scaling_group_name(self) -> str:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-asgname
        """
        return pulumi.get(self, "auto_scaling_group_name")

    @property
    @pulumi.getter(name="DesiredCapacity")
    def desired_capacity(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-desiredcapacity
        """
        return pulumi.get(self, "desired_capacity")

    @property
    @pulumi.getter(name="EndTime")
    def end_time(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-endtime
        """
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter(name="MaxSize")
    def max_size(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-maxsize
        """
        return pulumi.get(self, "max_size")

    @property
    @pulumi.getter(name="MinSize")
    def min_size(self) -> Optional[int]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-minsize
        """
        return pulumi.get(self, "min_size")

    @property
    @pulumi.getter(name="Recurrence")
    def recurrence(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-recurrence
        """
        return pulumi.get(self, "recurrence")

    @property
    @pulumi.getter(name="StartTime")
    def start_time(self) -> Optional[str]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-as-scheduledaction.html#cfn-as-scheduledaction-starttime
        """
        return pulumi.get(self, "start_time")

    def _translate_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop


