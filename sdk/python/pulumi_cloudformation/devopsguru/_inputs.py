# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from .. import _utilities, _tables

__all__ = [
    'NotificationChannelNotificationChannelConfigArgs',
    'NotificationChannelPropertiesArgs',
    'NotificationChannelSnsChannelConfigArgs',
    'ResourceCollectionCloudFormationCollectionFilterArgs',
    'ResourceCollectionPropertiesArgs',
    'ResourceCollectionResourceCollectionFilterArgs',
]

@pulumi.input_type
class NotificationChannelNotificationChannelConfigArgs:
    def __init__(__self__, *,
                 sns: Optional[pulumi.Input['NotificationChannelSnsChannelConfigArgs']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html
        :param pulumi.Input['NotificationChannelSnsChannelConfigArgs'] sns: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html#cfn-devopsguru-notificationchannel-notificationchannelconfig-sns
        """
        if sns is not None:
            pulumi.set(__self__, "sns", sns)

    @property
    @pulumi.getter(name="Sns")
    def sns(self) -> Optional[pulumi.Input['NotificationChannelSnsChannelConfigArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-notificationchannelconfig.html#cfn-devopsguru-notificationchannel-notificationchannelconfig-sns
        """
        return pulumi.get(self, "sns")

    @sns.setter
    def sns(self, value: Optional[pulumi.Input['NotificationChannelSnsChannelConfigArgs']]):
        pulumi.set(self, "sns", value)


@pulumi.input_type
class NotificationChannelPropertiesArgs:
    def __init__(__self__, *,
                 config: pulumi.Input['NotificationChannelNotificationChannelConfigArgs']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html
        :param pulumi.Input['NotificationChannelNotificationChannelConfigArgs'] config: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html#cfn-devopsguru-notificationchannel-config
        """
        pulumi.set(__self__, "config", config)

    @property
    @pulumi.getter(name="Config")
    def config(self) -> pulumi.Input['NotificationChannelNotificationChannelConfigArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-notificationchannel.html#cfn-devopsguru-notificationchannel-config
        """
        return pulumi.get(self, "config")

    @config.setter
    def config(self, value: pulumi.Input['NotificationChannelNotificationChannelConfigArgs']):
        pulumi.set(self, "config", value)


@pulumi.input_type
class NotificationChannelSnsChannelConfigArgs:
    def __init__(__self__, *,
                 topic_arn: Optional[pulumi.Input[str]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html
        :param pulumi.Input[str] topic_arn: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html#cfn-devopsguru-notificationchannel-snschannelconfig-topicarn
        """
        if topic_arn is not None:
            pulumi.set(__self__, "topic_arn", topic_arn)

    @property
    @pulumi.getter(name="TopicArn")
    def topic_arn(self) -> Optional[pulumi.Input[str]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-notificationchannel-snschannelconfig.html#cfn-devopsguru-notificationchannel-snschannelconfig-topicarn
        """
        return pulumi.get(self, "topic_arn")

    @topic_arn.setter
    def topic_arn(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "topic_arn", value)


@pulumi.input_type
class ResourceCollectionCloudFormationCollectionFilterArgs:
    def __init__(__self__, *,
                 stack_names: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html
        :param pulumi.Input[Sequence[pulumi.Input[str]]] stack_names: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html#cfn-devopsguru-resourcecollection-cloudformationcollectionfilter-stacknames
        """
        if stack_names is not None:
            pulumi.set(__self__, "stack_names", stack_names)

    @property
    @pulumi.getter(name="StackNames")
    def stack_names(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-cloudformationcollectionfilter.html#cfn-devopsguru-resourcecollection-cloudformationcollectionfilter-stacknames
        """
        return pulumi.get(self, "stack_names")

    @stack_names.setter
    def stack_names(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "stack_names", value)


@pulumi.input_type
class ResourceCollectionPropertiesArgs:
    def __init__(__self__, *,
                 resource_collection_filter: pulumi.Input['ResourceCollectionResourceCollectionFilterArgs']):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html
        :param pulumi.Input['ResourceCollectionResourceCollectionFilterArgs'] resource_collection_filter: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter
        """
        pulumi.set(__self__, "resource_collection_filter", resource_collection_filter)

    @property
    @pulumi.getter(name="ResourceCollectionFilter")
    def resource_collection_filter(self) -> pulumi.Input['ResourceCollectionResourceCollectionFilterArgs']:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-devopsguru-resourcecollection.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter
        """
        return pulumi.get(self, "resource_collection_filter")

    @resource_collection_filter.setter
    def resource_collection_filter(self, value: pulumi.Input['ResourceCollectionResourceCollectionFilterArgs']):
        pulumi.set(self, "resource_collection_filter", value)


@pulumi.input_type
class ResourceCollectionResourceCollectionFilterArgs:
    def __init__(__self__, *,
                 cloud_formation: Optional[pulumi.Input['ResourceCollectionCloudFormationCollectionFilterArgs']] = None):
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html
        :param pulumi.Input['ResourceCollectionCloudFormationCollectionFilterArgs'] cloud_formation: http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter-cloudformation
        """
        if cloud_formation is not None:
            pulumi.set(__self__, "cloud_formation", cloud_formation)

    @property
    @pulumi.getter(name="CloudFormation")
    def cloud_formation(self) -> Optional[pulumi.Input['ResourceCollectionCloudFormationCollectionFilterArgs']]:
        """
        http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-devopsguru-resourcecollection-resourcecollectionfilter.html#cfn-devopsguru-resourcecollection-resourcecollectionfilter-cloudformation
        """
        return pulumi.get(self, "cloud_formation")

    @cloud_formation.setter
    def cloud_formation(self, value: Optional[pulumi.Input['ResourceCollectionCloudFormationCollectionFilterArgs']]):
        pulumi.set(self, "cloud_formation", value)


