# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class GetAzsResult:
    def __init__(__self__, azs=None):
        if azs and not isinstance(azs, list):
            raise TypeError("Expected argument 'azs' to be a list")
        __self__.azs = azs


class AwaitableGetAzsResult(GetAzsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAzsResult(
            azs=self.azs)


def get_azs(region=None, opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['region'] = region
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('cloudformation:index:getAzs', __args__, opts=opts).value

    return AwaitableGetAzsResult(
        azs=__ret__.get('azs'))
