# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables


class CidrResult:
    def __init__(__self__, cidr=None):
        if cidr and not isinstance(cidr, list):
            raise TypeError("Expected argument 'cidr' to be a list")
        __self__.cidr = cidr


class AwaitableCidrResult(CidrResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return CidrResult(
            cidr=self.cidr)


def cidr(cidr_bits=None, count=None, ip_block=None, opts=None):
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['cidrBits'] = cidr_bits
    __args__['count'] = count
    __args__['ipBlock'] = ip_block
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('cloudformation:index:cidr', __args__, opts=opts).value

    return AwaitableCidrResult(
        cidr=__ret__.get('cidr'))
