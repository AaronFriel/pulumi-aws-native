# coding=utf-8
# *** WARNING: this file was generated by pulumigen. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

# Export this package's modules as members:
from .api import *
from .api_mapping import *
from .authorizer import *
from .deployment import *
from .domain_name import *
from .integration import *
from .integration_response import *
from .model import *
from .route import *
from .route_response import *
from .stage import *
from ._inputs import *
from . import outputs

def _register_module():
    import pulumi
    from .. import _utilities


    class Module(pulumi.runtime.ResourceModule):
        _version = _utilities.get_semver_version()

        def version(self):
            return Module._version

        def construct(self, name: str, typ: str, urn: str) -> pulumi.Resource:
            if typ == "cloudformation:ApiGatewayV2:Api":
                return Api(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:ApiMapping":
                return ApiMapping(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Authorizer":
                return Authorizer(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Deployment":
                return Deployment(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:DomainName":
                return DomainName(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Integration":
                return Integration(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:IntegrationResponse":
                return IntegrationResponse(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Model":
                return Model(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Route":
                return Route(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:RouteResponse":
                return RouteResponse(name, pulumi.ResourceOptions(urn=urn))
            elif typ == "cloudformation:ApiGatewayV2:Stage":
                return Stage(name, pulumi.ResourceOptions(urn=urn))
            else:
                raise Exception(f"unknown resource type {typ}")


    _module_instance = Module()
    pulumi.runtime.register_resource_module("cloudformation", "ApiGatewayV2", _module_instance)

_register_module()
