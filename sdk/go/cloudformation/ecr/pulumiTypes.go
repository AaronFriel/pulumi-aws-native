// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ecr

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudformation/sdk/go/cloudformation"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RepositoryAttributes struct {
	Arn string `pulumi:"Arn"`
}

// RepositoryAttributesInput is an input type that accepts RepositoryAttributesArgs and RepositoryAttributesOutput values.
// You can construct a concrete instance of `RepositoryAttributesInput` via:
//
//          RepositoryAttributesArgs{...}
type RepositoryAttributesInput interface {
	pulumi.Input

	ToRepositoryAttributesOutput() RepositoryAttributesOutput
	ToRepositoryAttributesOutputWithContext(context.Context) RepositoryAttributesOutput
}

type RepositoryAttributesArgs struct {
	Arn pulumi.StringInput `pulumi:"Arn"`
}

func (RepositoryAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAttributes)(nil)).Elem()
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesOutput() RepositoryAttributesOutput {
	return i.ToRepositoryAttributesOutputWithContext(context.Background())
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesOutputWithContext(ctx context.Context) RepositoryAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesOutput)
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return i.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesOutput).ToRepositoryAttributesPtrOutputWithContext(ctx)
}

// RepositoryAttributesPtrInput is an input type that accepts RepositoryAttributesArgs, RepositoryAttributesPtr and RepositoryAttributesPtrOutput values.
// You can construct a concrete instance of `RepositoryAttributesPtrInput` via:
//
//          RepositoryAttributesArgs{...}
//
//  or:
//
//          nil
type RepositoryAttributesPtrInput interface {
	pulumi.Input

	ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput
	ToRepositoryAttributesPtrOutputWithContext(context.Context) RepositoryAttributesPtrOutput
}

type repositoryAttributesPtrType RepositoryAttributesArgs

func RepositoryAttributesPtr(v *RepositoryAttributesArgs) RepositoryAttributesPtrInput {
	return (*repositoryAttributesPtrType)(v)
}

func (*repositoryAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryAttributes)(nil)).Elem()
}

func (i *repositoryAttributesPtrType) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return i.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i *repositoryAttributesPtrType) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesPtrOutput)
}

type RepositoryAttributesOutput struct{ *pulumi.OutputState }

func (RepositoryAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAttributes)(nil)).Elem()
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesOutput() RepositoryAttributesOutput {
	return o
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesOutputWithContext(ctx context.Context) RepositoryAttributesOutput {
	return o
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return o.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return o.ApplyT(func(v RepositoryAttributes) *RepositoryAttributes {
		return &v
	}).(RepositoryAttributesPtrOutput)
}
func (o RepositoryAttributesOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAttributes) string { return v.Arn }).(pulumi.StringOutput)
}

type RepositoryAttributesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryAttributes)(nil)).Elem()
}

func (o RepositoryAttributesPtrOutput) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return o
}

func (o RepositoryAttributesPtrOutput) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return o
}

func (o RepositoryAttributesPtrOutput) Elem() RepositoryAttributesOutput {
	return o.ApplyT(func(v *RepositoryAttributes) RepositoryAttributes { return *v }).(RepositoryAttributesOutput)
}

func (o RepositoryAttributesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
	LifecyclePolicyText *string `pulumi:"LifecyclePolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
	RegistryId *string `pulumi:"RegistryId"`
}

// RepositoryLifecyclePolicyInput is an input type that accepts RepositoryLifecyclePolicyArgs and RepositoryLifecyclePolicyOutput values.
// You can construct a concrete instance of `RepositoryLifecyclePolicyInput` via:
//
//          RepositoryLifecyclePolicyArgs{...}
type RepositoryLifecyclePolicyInput interface {
	pulumi.Input

	ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput
	ToRepositoryLifecyclePolicyOutputWithContext(context.Context) RepositoryLifecyclePolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
	LifecyclePolicyText pulumi.StringPtrInput `pulumi:"LifecyclePolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
	RegistryId pulumi.StringPtrInput `pulumi:"RegistryId"`
}

func (RepositoryLifecyclePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryLifecyclePolicy)(nil)).Elem()
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput {
	return i.ToRepositoryLifecyclePolicyOutputWithContext(context.Background())
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyOutput)
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return i.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i RepositoryLifecyclePolicyArgs) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyOutput).ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx)
}

// RepositoryLifecyclePolicyPtrInput is an input type that accepts RepositoryLifecyclePolicyArgs, RepositoryLifecyclePolicyPtr and RepositoryLifecyclePolicyPtrOutput values.
// You can construct a concrete instance of `RepositoryLifecyclePolicyPtrInput` via:
//
//          RepositoryLifecyclePolicyArgs{...}
//
//  or:
//
//          nil
type RepositoryLifecyclePolicyPtrInput interface {
	pulumi.Input

	ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput
	ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Context) RepositoryLifecyclePolicyPtrOutput
}

type repositoryLifecyclePolicyPtrType RepositoryLifecyclePolicyArgs

func RepositoryLifecyclePolicyPtr(v *RepositoryLifecyclePolicyArgs) RepositoryLifecyclePolicyPtrInput {
	return (*repositoryLifecyclePolicyPtrType)(v)
}

func (*repositoryLifecyclePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryLifecyclePolicy)(nil)).Elem()
}

func (i *repositoryLifecyclePolicyPtrType) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return i.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (i *repositoryLifecyclePolicyPtrType) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html
type RepositoryLifecyclePolicyOutput struct{ *pulumi.OutputState }

func (RepositoryLifecyclePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryLifecyclePolicy)(nil)).Elem()
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyOutput() RepositoryLifecyclePolicyOutput {
	return o
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyOutput {
	return o
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return o.ToRepositoryLifecyclePolicyPtrOutputWithContext(context.Background())
}

func (o RepositoryLifecyclePolicyOutput) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return o.ApplyT(func(v RepositoryLifecyclePolicy) *RepositoryLifecyclePolicy {
		return &v
	}).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
func (o RepositoryLifecyclePolicyOutput) LifecyclePolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryLifecyclePolicy) *string { return v.LifecyclePolicyText }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
func (o RepositoryLifecyclePolicyOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryLifecyclePolicy) *string { return v.RegistryId }).(pulumi.StringPtrOutput)
}

type RepositoryLifecyclePolicyPtrOutput struct{ *pulumi.OutputState }

func (RepositoryLifecyclePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryLifecyclePolicy)(nil)).Elem()
}

func (o RepositoryLifecyclePolicyPtrOutput) ToRepositoryLifecyclePolicyPtrOutput() RepositoryLifecyclePolicyPtrOutput {
	return o
}

func (o RepositoryLifecyclePolicyPtrOutput) ToRepositoryLifecyclePolicyPtrOutputWithContext(ctx context.Context) RepositoryLifecyclePolicyPtrOutput {
	return o
}

func (o RepositoryLifecyclePolicyPtrOutput) Elem() RepositoryLifecyclePolicyOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) RepositoryLifecyclePolicy { return *v }).(RepositoryLifecyclePolicyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-lifecyclepolicytext
func (o RepositoryLifecyclePolicyPtrOutput) LifecyclePolicyText() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) *string {
		if v == nil {
			return nil
		}
		return v.LifecyclePolicyText
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-ecr-repository-lifecyclepolicy.html#cfn-ecr-repository-lifecyclepolicy-registryid
func (o RepositoryLifecyclePolicyPtrOutput) RegistryId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryLifecyclePolicy) *string {
		if v == nil {
			return nil
		}
		return v.RegistryId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
type RepositoryProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
	LifecyclePolicy *RepositoryLifecyclePolicy `pulumi:"LifecyclePolicy"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
	RepositoryName *string `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
	RepositoryPolicyText interface{} `pulumi:"RepositoryPolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
	Tags []cloudformation.Tag `pulumi:"Tags"`
}

// RepositoryPropertiesInput is an input type that accepts RepositoryPropertiesArgs and RepositoryPropertiesOutput values.
// You can construct a concrete instance of `RepositoryPropertiesInput` via:
//
//          RepositoryPropertiesArgs{...}
type RepositoryPropertiesInput interface {
	pulumi.Input

	ToRepositoryPropertiesOutput() RepositoryPropertiesOutput
	ToRepositoryPropertiesOutputWithContext(context.Context) RepositoryPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
type RepositoryPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
	LifecyclePolicy RepositoryLifecyclePolicyPtrInput `pulumi:"LifecyclePolicy"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
	RepositoryName pulumi.StringPtrInput `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
	RepositoryPolicyText pulumi.Input `pulumi:"RepositoryPolicyText"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
	Tags cloudformation.TagArrayInput `pulumi:"Tags"`
}

func (RepositoryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryProperties)(nil)).Elem()
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesOutput() RepositoryPropertiesOutput {
	return i.ToRepositoryPropertiesOutputWithContext(context.Background())
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesOutputWithContext(ctx context.Context) RepositoryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesOutput)
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return i.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesOutput).ToRepositoryPropertiesPtrOutputWithContext(ctx)
}

// RepositoryPropertiesPtrInput is an input type that accepts RepositoryPropertiesArgs, RepositoryPropertiesPtr and RepositoryPropertiesPtrOutput values.
// You can construct a concrete instance of `RepositoryPropertiesPtrInput` via:
//
//          RepositoryPropertiesArgs{...}
//
//  or:
//
//          nil
type RepositoryPropertiesPtrInput interface {
	pulumi.Input

	ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput
	ToRepositoryPropertiesPtrOutputWithContext(context.Context) RepositoryPropertiesPtrOutput
}

type repositoryPropertiesPtrType RepositoryPropertiesArgs

func RepositoryPropertiesPtr(v *RepositoryPropertiesArgs) RepositoryPropertiesPtrInput {
	return (*repositoryPropertiesPtrType)(v)
}

func (*repositoryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProperties)(nil)).Elem()
}

func (i *repositoryPropertiesPtrType) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return i.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i *repositoryPropertiesPtrType) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html
type RepositoryPropertiesOutput struct{ *pulumi.OutputState }

func (RepositoryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryProperties)(nil)).Elem()
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesOutput() RepositoryPropertiesOutput {
	return o
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesOutputWithContext(ctx context.Context) RepositoryPropertiesOutput {
	return o
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return o.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *RepositoryProperties {
		return &v
	}).(RepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
func (o RepositoryPropertiesOutput) LifecyclePolicy() RepositoryLifecyclePolicyPtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *RepositoryLifecyclePolicy { return v.LifecyclePolicy }).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
func (o RepositoryPropertiesOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *string { return v.RepositoryName }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
func (o RepositoryPropertiesOutput) RepositoryPolicyText() pulumi.AnyOutput {
	return o.ApplyT(func(v RepositoryProperties) interface{} { return v.RepositoryPolicyText }).(pulumi.AnyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
func (o RepositoryPropertiesOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v RepositoryProperties) []cloudformation.Tag { return v.Tags }).(cloudformation.TagArrayOutput)
}

type RepositoryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProperties)(nil)).Elem()
}

func (o RepositoryPropertiesPtrOutput) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return o
}

func (o RepositoryPropertiesPtrOutput) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return o
}

func (o RepositoryPropertiesPtrOutput) Elem() RepositoryPropertiesOutput {
	return o.ApplyT(func(v *RepositoryProperties) RepositoryProperties { return *v }).(RepositoryPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-lifecyclepolicy
func (o RepositoryPropertiesPtrOutput) LifecyclePolicy() RepositoryLifecyclePolicyPtrOutput {
	return o.ApplyT(func(v *RepositoryProperties) *RepositoryLifecyclePolicy {
		if v == nil {
			return nil
		}
		return v.LifecyclePolicy
	}).(RepositoryLifecyclePolicyPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositoryname
func (o RepositoryPropertiesPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-repositorypolicytext
func (o RepositoryPropertiesPtrOutput) RepositoryPolicyText() pulumi.AnyOutput {
	return o.ApplyT(func(v *RepositoryProperties) interface{} {
		if v == nil {
			return nil
		}
		return v.RepositoryPolicyText
	}).(pulumi.AnyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecr-repository.html#cfn-ecr-repository-tags
func (o RepositoryPropertiesPtrOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v *RepositoryProperties) []cloudformation.Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(cloudformation.TagArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryAttributesOutput{})
	pulumi.RegisterOutputType(RepositoryAttributesPtrOutput{})
	pulumi.RegisterOutputType(RepositoryLifecyclePolicyOutput{})
	pulumi.RegisterOutputType(RepositoryLifecyclePolicyPtrOutput{})
	pulumi.RegisterOutputType(RepositoryPropertiesOutput{})
	pulumi.RegisterOutputType(RepositoryPropertiesPtrOutput{})
}
