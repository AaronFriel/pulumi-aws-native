// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package appstream

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-appstream-stackuserassociation.html
type StackUserAssociation struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes StackUserAssociationAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties StackUserAssociationPropertiesOutput `pulumi:"properties"`
}

// NewStackUserAssociation registers a new resource with the given unique name, arguments, and options.
func NewStackUserAssociation(ctx *pulumi.Context,
	name string, args *StackUserAssociationArgs, opts ...pulumi.ResourceOption) (*StackUserAssociation, error) {
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &StackUserAssociationArgs{}
	}
	var resource StackUserAssociation
	err := ctx.RegisterResource("cloudformation:AppStream:StackUserAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetStackUserAssociation gets an existing StackUserAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetStackUserAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *StackUserAssociationState, opts ...pulumi.ResourceOption) (*StackUserAssociation, error) {
	var resource StackUserAssociation
	err := ctx.ReadResource("cloudformation:AppStream:StackUserAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering StackUserAssociation resources.
type stackUserAssociationState struct {
	// The attributes associated with the resource
	Attributes *StackUserAssociationAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *StackUserAssociationProperties `pulumi:"properties"`
}

type StackUserAssociationState struct {
	// The attributes associated with the resource
	Attributes StackUserAssociationAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties StackUserAssociationPropertiesPtrInput
}

func (StackUserAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*stackUserAssociationState)(nil)).Elem()
}

type stackUserAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties StackUserAssociationProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a StackUserAssociation resource.
type StackUserAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties StackUserAssociationPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (StackUserAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*stackUserAssociationArgs)(nil)).Elem()
}
