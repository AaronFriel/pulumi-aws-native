// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codecommit

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudformation/sdk/go/cloudformation"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type RepositoryAttributes struct {
	Arn          string `pulumi:"Arn"`
	CloneUrlHttp string `pulumi:"CloneUrlHttp"`
	CloneUrlSsh  string `pulumi:"CloneUrlSsh"`
	Name         string `pulumi:"Name"`
}

// RepositoryAttributesInput is an input type that accepts RepositoryAttributesArgs and RepositoryAttributesOutput values.
// You can construct a concrete instance of `RepositoryAttributesInput` via:
//
//          RepositoryAttributesArgs{...}
type RepositoryAttributesInput interface {
	pulumi.Input

	ToRepositoryAttributesOutput() RepositoryAttributesOutput
	ToRepositoryAttributesOutputWithContext(context.Context) RepositoryAttributesOutput
}

type RepositoryAttributesArgs struct {
	Arn          pulumi.StringInput `pulumi:"Arn"`
	CloneUrlHttp pulumi.StringInput `pulumi:"CloneUrlHttp"`
	CloneUrlSsh  pulumi.StringInput `pulumi:"CloneUrlSsh"`
	Name         pulumi.StringInput `pulumi:"Name"`
}

func (RepositoryAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAttributes)(nil)).Elem()
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesOutput() RepositoryAttributesOutput {
	return i.ToRepositoryAttributesOutputWithContext(context.Background())
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesOutputWithContext(ctx context.Context) RepositoryAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesOutput)
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return i.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i RepositoryAttributesArgs) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesOutput).ToRepositoryAttributesPtrOutputWithContext(ctx)
}

// RepositoryAttributesPtrInput is an input type that accepts RepositoryAttributesArgs, RepositoryAttributesPtr and RepositoryAttributesPtrOutput values.
// You can construct a concrete instance of `RepositoryAttributesPtrInput` via:
//
//          RepositoryAttributesArgs{...}
//
//  or:
//
//          nil
type RepositoryAttributesPtrInput interface {
	pulumi.Input

	ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput
	ToRepositoryAttributesPtrOutputWithContext(context.Context) RepositoryAttributesPtrOutput
}

type repositoryAttributesPtrType RepositoryAttributesArgs

func RepositoryAttributesPtr(v *RepositoryAttributesArgs) RepositoryAttributesPtrInput {
	return (*repositoryAttributesPtrType)(v)
}

func (*repositoryAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryAttributes)(nil)).Elem()
}

func (i *repositoryAttributesPtrType) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return i.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i *repositoryAttributesPtrType) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryAttributesPtrOutput)
}

type RepositoryAttributesOutput struct{ *pulumi.OutputState }

func (RepositoryAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryAttributes)(nil)).Elem()
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesOutput() RepositoryAttributesOutput {
	return o
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesOutputWithContext(ctx context.Context) RepositoryAttributesOutput {
	return o
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return o.ToRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (o RepositoryAttributesOutput) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return o.ApplyT(func(v RepositoryAttributes) *RepositoryAttributes {
		return &v
	}).(RepositoryAttributesPtrOutput)
}
func (o RepositoryAttributesOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAttributes) string { return v.Arn }).(pulumi.StringOutput)
}

func (o RepositoryAttributesOutput) CloneUrlHttp() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAttributes) string { return v.CloneUrlHttp }).(pulumi.StringOutput)
}

func (o RepositoryAttributesOutput) CloneUrlSsh() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAttributes) string { return v.CloneUrlSsh }).(pulumi.StringOutput)
}

func (o RepositoryAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryAttributes) string { return v.Name }).(pulumi.StringOutput)
}

type RepositoryAttributesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryAttributes)(nil)).Elem()
}

func (o RepositoryAttributesPtrOutput) ToRepositoryAttributesPtrOutput() RepositoryAttributesPtrOutput {
	return o
}

func (o RepositoryAttributesPtrOutput) ToRepositoryAttributesPtrOutputWithContext(ctx context.Context) RepositoryAttributesPtrOutput {
	return o
}

func (o RepositoryAttributesPtrOutput) Elem() RepositoryAttributesOutput {
	return o.ApplyT(func(v *RepositoryAttributes) RepositoryAttributes { return *v }).(RepositoryAttributesOutput)
}

func (o RepositoryAttributesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryAttributesPtrOutput) CloneUrlHttp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.CloneUrlHttp
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryAttributesPtrOutput) CloneUrlSsh() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.CloneUrlSsh
	}).(pulumi.StringPtrOutput)
}

func (o RepositoryAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html
type RepositoryCode struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-branchname
	BranchName *string `pulumi:"BranchName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-s3
	S3 RepositoryS3 `pulumi:"S3"`
}

// RepositoryCodeInput is an input type that accepts RepositoryCodeArgs and RepositoryCodeOutput values.
// You can construct a concrete instance of `RepositoryCodeInput` via:
//
//          RepositoryCodeArgs{...}
type RepositoryCodeInput interface {
	pulumi.Input

	ToRepositoryCodeOutput() RepositoryCodeOutput
	ToRepositoryCodeOutputWithContext(context.Context) RepositoryCodeOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html
type RepositoryCodeArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-branchname
	BranchName pulumi.StringPtrInput `pulumi:"BranchName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-s3
	S3 RepositoryS3Input `pulumi:"S3"`
}

func (RepositoryCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCode)(nil)).Elem()
}

func (i RepositoryCodeArgs) ToRepositoryCodeOutput() RepositoryCodeOutput {
	return i.ToRepositoryCodeOutputWithContext(context.Background())
}

func (i RepositoryCodeArgs) ToRepositoryCodeOutputWithContext(ctx context.Context) RepositoryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCodeOutput)
}

func (i RepositoryCodeArgs) ToRepositoryCodePtrOutput() RepositoryCodePtrOutput {
	return i.ToRepositoryCodePtrOutputWithContext(context.Background())
}

func (i RepositoryCodeArgs) ToRepositoryCodePtrOutputWithContext(ctx context.Context) RepositoryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCodeOutput).ToRepositoryCodePtrOutputWithContext(ctx)
}

// RepositoryCodePtrInput is an input type that accepts RepositoryCodeArgs, RepositoryCodePtr and RepositoryCodePtrOutput values.
// You can construct a concrete instance of `RepositoryCodePtrInput` via:
//
//          RepositoryCodeArgs{...}
//
//  or:
//
//          nil
type RepositoryCodePtrInput interface {
	pulumi.Input

	ToRepositoryCodePtrOutput() RepositoryCodePtrOutput
	ToRepositoryCodePtrOutputWithContext(context.Context) RepositoryCodePtrOutput
}

type repositoryCodePtrType RepositoryCodeArgs

func RepositoryCodePtr(v *RepositoryCodeArgs) RepositoryCodePtrInput {
	return (*repositoryCodePtrType)(v)
}

func (*repositoryCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCode)(nil)).Elem()
}

func (i *repositoryCodePtrType) ToRepositoryCodePtrOutput() RepositoryCodePtrOutput {
	return i.ToRepositoryCodePtrOutputWithContext(context.Background())
}

func (i *repositoryCodePtrType) ToRepositoryCodePtrOutputWithContext(ctx context.Context) RepositoryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html
type RepositoryCodeOutput struct{ *pulumi.OutputState }

func (RepositoryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryCode)(nil)).Elem()
}

func (o RepositoryCodeOutput) ToRepositoryCodeOutput() RepositoryCodeOutput {
	return o
}

func (o RepositoryCodeOutput) ToRepositoryCodeOutputWithContext(ctx context.Context) RepositoryCodeOutput {
	return o
}

func (o RepositoryCodeOutput) ToRepositoryCodePtrOutput() RepositoryCodePtrOutput {
	return o.ToRepositoryCodePtrOutputWithContext(context.Background())
}

func (o RepositoryCodeOutput) ToRepositoryCodePtrOutputWithContext(ctx context.Context) RepositoryCodePtrOutput {
	return o.ApplyT(func(v RepositoryCode) *RepositoryCode {
		return &v
	}).(RepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-branchname
func (o RepositoryCodeOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryCode) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-s3
func (o RepositoryCodeOutput) S3() RepositoryS3Output {
	return o.ApplyT(func(v RepositoryCode) RepositoryS3 { return v.S3 }).(RepositoryS3Output)
}

type RepositoryCodePtrOutput struct{ *pulumi.OutputState }

func (RepositoryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryCode)(nil)).Elem()
}

func (o RepositoryCodePtrOutput) ToRepositoryCodePtrOutput() RepositoryCodePtrOutput {
	return o
}

func (o RepositoryCodePtrOutput) ToRepositoryCodePtrOutputWithContext(ctx context.Context) RepositoryCodePtrOutput {
	return o
}

func (o RepositoryCodePtrOutput) Elem() RepositoryCodeOutput {
	return o.ApplyT(func(v *RepositoryCode) RepositoryCode { return *v }).(RepositoryCodeOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-branchname
func (o RepositoryCodePtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryCode) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-code.html#cfn-codecommit-repository-code-s3
func (o RepositoryCodePtrOutput) S3() RepositoryS3PtrOutput {
	return o.ApplyT(func(v *RepositoryCode) *RepositoryS3 {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(RepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
type RepositoryProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
	Code *RepositoryCode `pulumi:"Code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
	RepositoryDescription *string `pulumi:"RepositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
	RepositoryName string `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
	Tags []cloudformation.Tag `pulumi:"Tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
	Triggers []RepositoryRepositoryTrigger `pulumi:"Triggers"`
}

// RepositoryPropertiesInput is an input type that accepts RepositoryPropertiesArgs and RepositoryPropertiesOutput values.
// You can construct a concrete instance of `RepositoryPropertiesInput` via:
//
//          RepositoryPropertiesArgs{...}
type RepositoryPropertiesInput interface {
	pulumi.Input

	ToRepositoryPropertiesOutput() RepositoryPropertiesOutput
	ToRepositoryPropertiesOutputWithContext(context.Context) RepositoryPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
type RepositoryPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
	Code RepositoryCodePtrInput `pulumi:"Code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
	RepositoryDescription pulumi.StringPtrInput `pulumi:"RepositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
	RepositoryName pulumi.StringInput `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
	Tags cloudformation.TagArrayInput `pulumi:"Tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
	Triggers RepositoryRepositoryTriggerArrayInput `pulumi:"Triggers"`
}

func (RepositoryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryProperties)(nil)).Elem()
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesOutput() RepositoryPropertiesOutput {
	return i.ToRepositoryPropertiesOutputWithContext(context.Background())
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesOutputWithContext(ctx context.Context) RepositoryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesOutput)
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return i.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i RepositoryPropertiesArgs) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesOutput).ToRepositoryPropertiesPtrOutputWithContext(ctx)
}

// RepositoryPropertiesPtrInput is an input type that accepts RepositoryPropertiesArgs, RepositoryPropertiesPtr and RepositoryPropertiesPtrOutput values.
// You can construct a concrete instance of `RepositoryPropertiesPtrInput` via:
//
//          RepositoryPropertiesArgs{...}
//
//  or:
//
//          nil
type RepositoryPropertiesPtrInput interface {
	pulumi.Input

	ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput
	ToRepositoryPropertiesPtrOutputWithContext(context.Context) RepositoryPropertiesPtrOutput
}

type repositoryPropertiesPtrType RepositoryPropertiesArgs

func RepositoryPropertiesPtr(v *RepositoryPropertiesArgs) RepositoryPropertiesPtrInput {
	return (*repositoryPropertiesPtrType)(v)
}

func (*repositoryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProperties)(nil)).Elem()
}

func (i *repositoryPropertiesPtrType) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return i.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i *repositoryPropertiesPtrType) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html
type RepositoryPropertiesOutput struct{ *pulumi.OutputState }

func (RepositoryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryProperties)(nil)).Elem()
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesOutput() RepositoryPropertiesOutput {
	return o
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesOutputWithContext(ctx context.Context) RepositoryPropertiesOutput {
	return o
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return o.ToRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (o RepositoryPropertiesOutput) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *RepositoryProperties {
		return &v
	}).(RepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
func (o RepositoryPropertiesOutput) Code() RepositoryCodePtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *RepositoryCode { return v.Code }).(RepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
func (o RepositoryPropertiesOutput) RepositoryDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryProperties) *string { return v.RepositoryDescription }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
func (o RepositoryPropertiesOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryProperties) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
func (o RepositoryPropertiesOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v RepositoryProperties) []cloudformation.Tag { return v.Tags }).(cloudformation.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
func (o RepositoryPropertiesOutput) Triggers() RepositoryRepositoryTriggerArrayOutput {
	return o.ApplyT(func(v RepositoryProperties) []RepositoryRepositoryTrigger { return v.Triggers }).(RepositoryRepositoryTriggerArrayOutput)
}

type RepositoryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (RepositoryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryProperties)(nil)).Elem()
}

func (o RepositoryPropertiesPtrOutput) ToRepositoryPropertiesPtrOutput() RepositoryPropertiesPtrOutput {
	return o
}

func (o RepositoryPropertiesPtrOutput) ToRepositoryPropertiesPtrOutputWithContext(ctx context.Context) RepositoryPropertiesPtrOutput {
	return o
}

func (o RepositoryPropertiesPtrOutput) Elem() RepositoryPropertiesOutput {
	return o.ApplyT(func(v *RepositoryProperties) RepositoryProperties { return *v }).(RepositoryPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-code
func (o RepositoryPropertiesPtrOutput) Code() RepositoryCodePtrOutput {
	return o.ApplyT(func(v *RepositoryProperties) *RepositoryCode {
		if v == nil {
			return nil
		}
		return v.Code
	}).(RepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositorydescription
func (o RepositoryPropertiesPtrOutput) RepositoryDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryDescription
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-repositoryname
func (o RepositoryPropertiesPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-tags
func (o RepositoryPropertiesPtrOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v *RepositoryProperties) []cloudformation.Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(cloudformation.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codecommit-repository.html#cfn-codecommit-repository-triggers
func (o RepositoryPropertiesPtrOutput) Triggers() RepositoryRepositoryTriggerArrayOutput {
	return o.ApplyT(func(v *RepositoryProperties) []RepositoryRepositoryTrigger {
		if v == nil {
			return nil
		}
		return v.Triggers
	}).(RepositoryRepositoryTriggerArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html
type RepositoryRepositoryTrigger struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-branches
	Branches []string `pulumi:"Branches"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-customdata
	CustomData *string `pulumi:"CustomData"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-destinationarn
	DestinationArn string `pulumi:"DestinationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-events
	Events []string `pulumi:"Events"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-name
	Name string `pulumi:"Name"`
}

// RepositoryRepositoryTriggerInput is an input type that accepts RepositoryRepositoryTriggerArgs and RepositoryRepositoryTriggerOutput values.
// You can construct a concrete instance of `RepositoryRepositoryTriggerInput` via:
//
//          RepositoryRepositoryTriggerArgs{...}
type RepositoryRepositoryTriggerInput interface {
	pulumi.Input

	ToRepositoryRepositoryTriggerOutput() RepositoryRepositoryTriggerOutput
	ToRepositoryRepositoryTriggerOutputWithContext(context.Context) RepositoryRepositoryTriggerOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html
type RepositoryRepositoryTriggerArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-branches
	Branches pulumi.StringArrayInput `pulumi:"Branches"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-customdata
	CustomData pulumi.StringPtrInput `pulumi:"CustomData"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-destinationarn
	DestinationArn pulumi.StringInput `pulumi:"DestinationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-events
	Events pulumi.StringArrayInput `pulumi:"Events"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-name
	Name pulumi.StringInput `pulumi:"Name"`
}

func (RepositoryRepositoryTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryRepositoryTrigger)(nil)).Elem()
}

func (i RepositoryRepositoryTriggerArgs) ToRepositoryRepositoryTriggerOutput() RepositoryRepositoryTriggerOutput {
	return i.ToRepositoryRepositoryTriggerOutputWithContext(context.Background())
}

func (i RepositoryRepositoryTriggerArgs) ToRepositoryRepositoryTriggerOutputWithContext(ctx context.Context) RepositoryRepositoryTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryRepositoryTriggerOutput)
}

// RepositoryRepositoryTriggerArrayInput is an input type that accepts RepositoryRepositoryTriggerArray and RepositoryRepositoryTriggerArrayOutput values.
// You can construct a concrete instance of `RepositoryRepositoryTriggerArrayInput` via:
//
//          RepositoryRepositoryTriggerArray{ RepositoryRepositoryTriggerArgs{...} }
type RepositoryRepositoryTriggerArrayInput interface {
	pulumi.Input

	ToRepositoryRepositoryTriggerArrayOutput() RepositoryRepositoryTriggerArrayOutput
	ToRepositoryRepositoryTriggerArrayOutputWithContext(context.Context) RepositoryRepositoryTriggerArrayOutput
}

type RepositoryRepositoryTriggerArray []RepositoryRepositoryTriggerInput

func (RepositoryRepositoryTriggerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryRepositoryTrigger)(nil)).Elem()
}

func (i RepositoryRepositoryTriggerArray) ToRepositoryRepositoryTriggerArrayOutput() RepositoryRepositoryTriggerArrayOutput {
	return i.ToRepositoryRepositoryTriggerArrayOutputWithContext(context.Background())
}

func (i RepositoryRepositoryTriggerArray) ToRepositoryRepositoryTriggerArrayOutputWithContext(ctx context.Context) RepositoryRepositoryTriggerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryRepositoryTriggerArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html
type RepositoryRepositoryTriggerOutput struct{ *pulumi.OutputState }

func (RepositoryRepositoryTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryRepositoryTrigger)(nil)).Elem()
}

func (o RepositoryRepositoryTriggerOutput) ToRepositoryRepositoryTriggerOutput() RepositoryRepositoryTriggerOutput {
	return o
}

func (o RepositoryRepositoryTriggerOutput) ToRepositoryRepositoryTriggerOutputWithContext(ctx context.Context) RepositoryRepositoryTriggerOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-branches
func (o RepositoryRepositoryTriggerOutput) Branches() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryRepositoryTrigger) []string { return v.Branches }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-customdata
func (o RepositoryRepositoryTriggerOutput) CustomData() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryRepositoryTrigger) *string { return v.CustomData }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-destinationarn
func (o RepositoryRepositoryTriggerOutput) DestinationArn() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryRepositoryTrigger) string { return v.DestinationArn }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-events
func (o RepositoryRepositoryTriggerOutput) Events() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RepositoryRepositoryTrigger) []string { return v.Events }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-repositorytrigger.html#cfn-codecommit-repository-repositorytrigger-name
func (o RepositoryRepositoryTriggerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryRepositoryTrigger) string { return v.Name }).(pulumi.StringOutput)
}

type RepositoryRepositoryTriggerArrayOutput struct{ *pulumi.OutputState }

func (RepositoryRepositoryTriggerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RepositoryRepositoryTrigger)(nil)).Elem()
}

func (o RepositoryRepositoryTriggerArrayOutput) ToRepositoryRepositoryTriggerArrayOutput() RepositoryRepositoryTriggerArrayOutput {
	return o
}

func (o RepositoryRepositoryTriggerArrayOutput) ToRepositoryRepositoryTriggerArrayOutputWithContext(ctx context.Context) RepositoryRepositoryTriggerArrayOutput {
	return o
}

func (o RepositoryRepositoryTriggerArrayOutput) Index(i pulumi.IntInput) RepositoryRepositoryTriggerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RepositoryRepositoryTrigger {
		return vs[0].([]RepositoryRepositoryTrigger)[vs[1].(int)]
	}).(RepositoryRepositoryTriggerOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html
type RepositoryS3 struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-bucket
	Bucket string `pulumi:"Bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-key
	Key string `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-objectversion
	ObjectVersion *string `pulumi:"ObjectVersion"`
}

// RepositoryS3Input is an input type that accepts RepositoryS3Args and RepositoryS3Output values.
// You can construct a concrete instance of `RepositoryS3Input` via:
//
//          RepositoryS3Args{...}
type RepositoryS3Input interface {
	pulumi.Input

	ToRepositoryS3Output() RepositoryS3Output
	ToRepositoryS3OutputWithContext(context.Context) RepositoryS3Output
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html
type RepositoryS3Args struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-bucket
	Bucket pulumi.StringInput `pulumi:"Bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-key
	Key pulumi.StringInput `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-objectversion
	ObjectVersion pulumi.StringPtrInput `pulumi:"ObjectVersion"`
}

func (RepositoryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryS3)(nil)).Elem()
}

func (i RepositoryS3Args) ToRepositoryS3Output() RepositoryS3Output {
	return i.ToRepositoryS3OutputWithContext(context.Background())
}

func (i RepositoryS3Args) ToRepositoryS3OutputWithContext(ctx context.Context) RepositoryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryS3Output)
}

func (i RepositoryS3Args) ToRepositoryS3PtrOutput() RepositoryS3PtrOutput {
	return i.ToRepositoryS3PtrOutputWithContext(context.Background())
}

func (i RepositoryS3Args) ToRepositoryS3PtrOutputWithContext(ctx context.Context) RepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryS3Output).ToRepositoryS3PtrOutputWithContext(ctx)
}

// RepositoryS3PtrInput is an input type that accepts RepositoryS3Args, RepositoryS3Ptr and RepositoryS3PtrOutput values.
// You can construct a concrete instance of `RepositoryS3PtrInput` via:
//
//          RepositoryS3Args{...}
//
//  or:
//
//          nil
type RepositoryS3PtrInput interface {
	pulumi.Input

	ToRepositoryS3PtrOutput() RepositoryS3PtrOutput
	ToRepositoryS3PtrOutputWithContext(context.Context) RepositoryS3PtrOutput
}

type repositoryS3PtrType RepositoryS3Args

func RepositoryS3Ptr(v *RepositoryS3Args) RepositoryS3PtrInput {
	return (*repositoryS3PtrType)(v)
}

func (*repositoryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryS3)(nil)).Elem()
}

func (i *repositoryS3PtrType) ToRepositoryS3PtrOutput() RepositoryS3PtrOutput {
	return i.ToRepositoryS3PtrOutputWithContext(context.Background())
}

func (i *repositoryS3PtrType) ToRepositoryS3PtrOutputWithContext(ctx context.Context) RepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html
type RepositoryS3Output struct{ *pulumi.OutputState }

func (RepositoryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*RepositoryS3)(nil)).Elem()
}

func (o RepositoryS3Output) ToRepositoryS3Output() RepositoryS3Output {
	return o
}

func (o RepositoryS3Output) ToRepositoryS3OutputWithContext(ctx context.Context) RepositoryS3Output {
	return o
}

func (o RepositoryS3Output) ToRepositoryS3PtrOutput() RepositoryS3PtrOutput {
	return o.ToRepositoryS3PtrOutputWithContext(context.Background())
}

func (o RepositoryS3Output) ToRepositoryS3PtrOutputWithContext(ctx context.Context) RepositoryS3PtrOutput {
	return o.ApplyT(func(v RepositoryS3) *RepositoryS3 {
		return &v
	}).(RepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-bucket
func (o RepositoryS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-key
func (o RepositoryS3Output) Key() pulumi.StringOutput {
	return o.ApplyT(func(v RepositoryS3) string { return v.Key }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-objectversion
func (o RepositoryS3Output) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RepositoryS3) *string { return v.ObjectVersion }).(pulumi.StringPtrOutput)
}

type RepositoryS3PtrOutput struct{ *pulumi.OutputState }

func (RepositoryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RepositoryS3)(nil)).Elem()
}

func (o RepositoryS3PtrOutput) ToRepositoryS3PtrOutput() RepositoryS3PtrOutput {
	return o
}

func (o RepositoryS3PtrOutput) ToRepositoryS3PtrOutputWithContext(ctx context.Context) RepositoryS3PtrOutput {
	return o
}

func (o RepositoryS3PtrOutput) Elem() RepositoryS3Output {
	return o.ApplyT(func(v *RepositoryS3) RepositoryS3 { return *v }).(RepositoryS3Output)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-bucket
func (o RepositoryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-key
func (o RepositoryS3PtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codecommit-repository-s3.html#cfn-codecommit-repository-s3-objectversion
func (o RepositoryS3PtrOutput) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.ObjectVersion
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(RepositoryAttributesOutput{})
	pulumi.RegisterOutputType(RepositoryAttributesPtrOutput{})
	pulumi.RegisterOutputType(RepositoryCodeOutput{})
	pulumi.RegisterOutputType(RepositoryCodePtrOutput{})
	pulumi.RegisterOutputType(RepositoryPropertiesOutput{})
	pulumi.RegisterOutputType(RepositoryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(RepositoryRepositoryTriggerOutput{})
	pulumi.RegisterOutputType(RepositoryRepositoryTriggerArrayOutput{})
	pulumi.RegisterOutputType(RepositoryS3Output{})
	pulumi.RegisterOutputType(RepositoryS3PtrOutput{})
}
