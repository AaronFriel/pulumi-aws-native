// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package route53resolver

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-cloudformation/sdk/go/cloudformation"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type ResolverEndpointAttributes struct {
	Arn                string `pulumi:"Arn"`
	Direction          string `pulumi:"Direction"`
	HostVPCId          string `pulumi:"HostVPCId"`
	IpAddressCount     string `pulumi:"IpAddressCount"`
	Name               string `pulumi:"Name"`
	ResolverEndpointId string `pulumi:"ResolverEndpointId"`
}

// ResolverEndpointAttributesInput is an input type that accepts ResolverEndpointAttributesArgs and ResolverEndpointAttributesOutput values.
// You can construct a concrete instance of `ResolverEndpointAttributesInput` via:
//
//          ResolverEndpointAttributesArgs{...}
type ResolverEndpointAttributesInput interface {
	pulumi.Input

	ToResolverEndpointAttributesOutput() ResolverEndpointAttributesOutput
	ToResolverEndpointAttributesOutputWithContext(context.Context) ResolverEndpointAttributesOutput
}

type ResolverEndpointAttributesArgs struct {
	Arn                pulumi.StringInput `pulumi:"Arn"`
	Direction          pulumi.StringInput `pulumi:"Direction"`
	HostVPCId          pulumi.StringInput `pulumi:"HostVPCId"`
	IpAddressCount     pulumi.StringInput `pulumi:"IpAddressCount"`
	Name               pulumi.StringInput `pulumi:"Name"`
	ResolverEndpointId pulumi.StringInput `pulumi:"ResolverEndpointId"`
}

func (ResolverEndpointAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointAttributes)(nil)).Elem()
}

func (i ResolverEndpointAttributesArgs) ToResolverEndpointAttributesOutput() ResolverEndpointAttributesOutput {
	return i.ToResolverEndpointAttributesOutputWithContext(context.Background())
}

func (i ResolverEndpointAttributesArgs) ToResolverEndpointAttributesOutputWithContext(ctx context.Context) ResolverEndpointAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointAttributesOutput)
}

func (i ResolverEndpointAttributesArgs) ToResolverEndpointAttributesPtrOutput() ResolverEndpointAttributesPtrOutput {
	return i.ToResolverEndpointAttributesPtrOutputWithContext(context.Background())
}

func (i ResolverEndpointAttributesArgs) ToResolverEndpointAttributesPtrOutputWithContext(ctx context.Context) ResolverEndpointAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointAttributesOutput).ToResolverEndpointAttributesPtrOutputWithContext(ctx)
}

// ResolverEndpointAttributesPtrInput is an input type that accepts ResolverEndpointAttributesArgs, ResolverEndpointAttributesPtr and ResolverEndpointAttributesPtrOutput values.
// You can construct a concrete instance of `ResolverEndpointAttributesPtrInput` via:
//
//          ResolverEndpointAttributesArgs{...}
//
//  or:
//
//          nil
type ResolverEndpointAttributesPtrInput interface {
	pulumi.Input

	ToResolverEndpointAttributesPtrOutput() ResolverEndpointAttributesPtrOutput
	ToResolverEndpointAttributesPtrOutputWithContext(context.Context) ResolverEndpointAttributesPtrOutput
}

type resolverEndpointAttributesPtrType ResolverEndpointAttributesArgs

func ResolverEndpointAttributesPtr(v *ResolverEndpointAttributesArgs) ResolverEndpointAttributesPtrInput {
	return (*resolverEndpointAttributesPtrType)(v)
}

func (*resolverEndpointAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverEndpointAttributes)(nil)).Elem()
}

func (i *resolverEndpointAttributesPtrType) ToResolverEndpointAttributesPtrOutput() ResolverEndpointAttributesPtrOutput {
	return i.ToResolverEndpointAttributesPtrOutputWithContext(context.Background())
}

func (i *resolverEndpointAttributesPtrType) ToResolverEndpointAttributesPtrOutputWithContext(ctx context.Context) ResolverEndpointAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointAttributesPtrOutput)
}

type ResolverEndpointAttributesOutput struct{ *pulumi.OutputState }

func (ResolverEndpointAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointAttributes)(nil)).Elem()
}

func (o ResolverEndpointAttributesOutput) ToResolverEndpointAttributesOutput() ResolverEndpointAttributesOutput {
	return o
}

func (o ResolverEndpointAttributesOutput) ToResolverEndpointAttributesOutputWithContext(ctx context.Context) ResolverEndpointAttributesOutput {
	return o
}

func (o ResolverEndpointAttributesOutput) ToResolverEndpointAttributesPtrOutput() ResolverEndpointAttributesPtrOutput {
	return o.ToResolverEndpointAttributesPtrOutputWithContext(context.Background())
}

func (o ResolverEndpointAttributesOutput) ToResolverEndpointAttributesPtrOutputWithContext(ctx context.Context) ResolverEndpointAttributesPtrOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) *ResolverEndpointAttributes {
		return &v
	}).(ResolverEndpointAttributesPtrOutput)
}
func (o ResolverEndpointAttributesOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.Arn }).(pulumi.StringOutput)
}

func (o ResolverEndpointAttributesOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.Direction }).(pulumi.StringOutput)
}

func (o ResolverEndpointAttributesOutput) HostVPCId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.HostVPCId }).(pulumi.StringOutput)
}

func (o ResolverEndpointAttributesOutput) IpAddressCount() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.IpAddressCount }).(pulumi.StringOutput)
}

func (o ResolverEndpointAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.Name }).(pulumi.StringOutput)
}

func (o ResolverEndpointAttributesOutput) ResolverEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointAttributes) string { return v.ResolverEndpointId }).(pulumi.StringOutput)
}

type ResolverEndpointAttributesPtrOutput struct{ *pulumi.OutputState }

func (ResolverEndpointAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverEndpointAttributes)(nil)).Elem()
}

func (o ResolverEndpointAttributesPtrOutput) ToResolverEndpointAttributesPtrOutput() ResolverEndpointAttributesPtrOutput {
	return o
}

func (o ResolverEndpointAttributesPtrOutput) ToResolverEndpointAttributesPtrOutputWithContext(ctx context.Context) ResolverEndpointAttributesPtrOutput {
	return o
}

func (o ResolverEndpointAttributesPtrOutput) Elem() ResolverEndpointAttributesOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) ResolverEndpointAttributes { return *v }).(ResolverEndpointAttributesOutput)
}

func (o ResolverEndpointAttributesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ResolverEndpointAttributesPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

func (o ResolverEndpointAttributesPtrOutput) HostVPCId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.HostVPCId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverEndpointAttributesPtrOutput) IpAddressCount() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.IpAddressCount
	}).(pulumi.StringPtrOutput)
}

func (o ResolverEndpointAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ResolverEndpointAttributesPtrOutput) ResolverEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverEndpointId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
type ResolverEndpointIpAddressRequest struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
	Ip *string `pulumi:"Ip"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
	SubnetId string `pulumi:"SubnetId"`
}

// ResolverEndpointIpAddressRequestInput is an input type that accepts ResolverEndpointIpAddressRequestArgs and ResolverEndpointIpAddressRequestOutput values.
// You can construct a concrete instance of `ResolverEndpointIpAddressRequestInput` via:
//
//          ResolverEndpointIpAddressRequestArgs{...}
type ResolverEndpointIpAddressRequestInput interface {
	pulumi.Input

	ToResolverEndpointIpAddressRequestOutput() ResolverEndpointIpAddressRequestOutput
	ToResolverEndpointIpAddressRequestOutputWithContext(context.Context) ResolverEndpointIpAddressRequestOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
type ResolverEndpointIpAddressRequestArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
	Ip pulumi.StringPtrInput `pulumi:"Ip"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
	SubnetId pulumi.StringInput `pulumi:"SubnetId"`
}

func (ResolverEndpointIpAddressRequestArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointIpAddressRequest)(nil)).Elem()
}

func (i ResolverEndpointIpAddressRequestArgs) ToResolverEndpointIpAddressRequestOutput() ResolverEndpointIpAddressRequestOutput {
	return i.ToResolverEndpointIpAddressRequestOutputWithContext(context.Background())
}

func (i ResolverEndpointIpAddressRequestArgs) ToResolverEndpointIpAddressRequestOutputWithContext(ctx context.Context) ResolverEndpointIpAddressRequestOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointIpAddressRequestOutput)
}

// ResolverEndpointIpAddressRequestArrayInput is an input type that accepts ResolverEndpointIpAddressRequestArray and ResolverEndpointIpAddressRequestArrayOutput values.
// You can construct a concrete instance of `ResolverEndpointIpAddressRequestArrayInput` via:
//
//          ResolverEndpointIpAddressRequestArray{ ResolverEndpointIpAddressRequestArgs{...} }
type ResolverEndpointIpAddressRequestArrayInput interface {
	pulumi.Input

	ToResolverEndpointIpAddressRequestArrayOutput() ResolverEndpointIpAddressRequestArrayOutput
	ToResolverEndpointIpAddressRequestArrayOutputWithContext(context.Context) ResolverEndpointIpAddressRequestArrayOutput
}

type ResolverEndpointIpAddressRequestArray []ResolverEndpointIpAddressRequestInput

func (ResolverEndpointIpAddressRequestArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverEndpointIpAddressRequest)(nil)).Elem()
}

func (i ResolverEndpointIpAddressRequestArray) ToResolverEndpointIpAddressRequestArrayOutput() ResolverEndpointIpAddressRequestArrayOutput {
	return i.ToResolverEndpointIpAddressRequestArrayOutputWithContext(context.Background())
}

func (i ResolverEndpointIpAddressRequestArray) ToResolverEndpointIpAddressRequestArrayOutputWithContext(ctx context.Context) ResolverEndpointIpAddressRequestArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointIpAddressRequestArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html
type ResolverEndpointIpAddressRequestOutput struct{ *pulumi.OutputState }

func (ResolverEndpointIpAddressRequestOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointIpAddressRequest)(nil)).Elem()
}

func (o ResolverEndpointIpAddressRequestOutput) ToResolverEndpointIpAddressRequestOutput() ResolverEndpointIpAddressRequestOutput {
	return o
}

func (o ResolverEndpointIpAddressRequestOutput) ToResolverEndpointIpAddressRequestOutputWithContext(ctx context.Context) ResolverEndpointIpAddressRequestOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-ip
func (o ResolverEndpointIpAddressRequestOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointIpAddressRequest) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverendpoint-ipaddressrequest.html#cfn-route53resolver-resolverendpoint-ipaddressrequest-subnetid
func (o ResolverEndpointIpAddressRequestOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointIpAddressRequest) string { return v.SubnetId }).(pulumi.StringOutput)
}

type ResolverEndpointIpAddressRequestArrayOutput struct{ *pulumi.OutputState }

func (ResolverEndpointIpAddressRequestArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverEndpointIpAddressRequest)(nil)).Elem()
}

func (o ResolverEndpointIpAddressRequestArrayOutput) ToResolverEndpointIpAddressRequestArrayOutput() ResolverEndpointIpAddressRequestArrayOutput {
	return o
}

func (o ResolverEndpointIpAddressRequestArrayOutput) ToResolverEndpointIpAddressRequestArrayOutputWithContext(ctx context.Context) ResolverEndpointIpAddressRequestArrayOutput {
	return o
}

func (o ResolverEndpointIpAddressRequestArrayOutput) Index(i pulumi.IntInput) ResolverEndpointIpAddressRequestOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResolverEndpointIpAddressRequest {
		return vs[0].([]ResolverEndpointIpAddressRequest)[vs[1].(int)]
	}).(ResolverEndpointIpAddressRequestOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
type ResolverEndpointProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
	Direction string `pulumi:"Direction"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
	IpAddresses []ResolverEndpointIpAddressRequest `pulumi:"IpAddresses"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
	Name *string `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
	SecurityGroupIds []string `pulumi:"SecurityGroupIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
	Tags []cloudformation.Tag `pulumi:"Tags"`
}

// ResolverEndpointPropertiesInput is an input type that accepts ResolverEndpointPropertiesArgs and ResolverEndpointPropertiesOutput values.
// You can construct a concrete instance of `ResolverEndpointPropertiesInput` via:
//
//          ResolverEndpointPropertiesArgs{...}
type ResolverEndpointPropertiesInput interface {
	pulumi.Input

	ToResolverEndpointPropertiesOutput() ResolverEndpointPropertiesOutput
	ToResolverEndpointPropertiesOutputWithContext(context.Context) ResolverEndpointPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
type ResolverEndpointPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
	Direction pulumi.StringInput `pulumi:"Direction"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
	IpAddresses ResolverEndpointIpAddressRequestArrayInput `pulumi:"IpAddresses"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
	Name pulumi.StringPtrInput `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
	SecurityGroupIds pulumi.StringArrayInput `pulumi:"SecurityGroupIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
	Tags cloudformation.TagArrayInput `pulumi:"Tags"`
}

func (ResolverEndpointPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointProperties)(nil)).Elem()
}

func (i ResolverEndpointPropertiesArgs) ToResolverEndpointPropertiesOutput() ResolverEndpointPropertiesOutput {
	return i.ToResolverEndpointPropertiesOutputWithContext(context.Background())
}

func (i ResolverEndpointPropertiesArgs) ToResolverEndpointPropertiesOutputWithContext(ctx context.Context) ResolverEndpointPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointPropertiesOutput)
}

func (i ResolverEndpointPropertiesArgs) ToResolverEndpointPropertiesPtrOutput() ResolverEndpointPropertiesPtrOutput {
	return i.ToResolverEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i ResolverEndpointPropertiesArgs) ToResolverEndpointPropertiesPtrOutputWithContext(ctx context.Context) ResolverEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointPropertiesOutput).ToResolverEndpointPropertiesPtrOutputWithContext(ctx)
}

// ResolverEndpointPropertiesPtrInput is an input type that accepts ResolverEndpointPropertiesArgs, ResolverEndpointPropertiesPtr and ResolverEndpointPropertiesPtrOutput values.
// You can construct a concrete instance of `ResolverEndpointPropertiesPtrInput` via:
//
//          ResolverEndpointPropertiesArgs{...}
//
//  or:
//
//          nil
type ResolverEndpointPropertiesPtrInput interface {
	pulumi.Input

	ToResolverEndpointPropertiesPtrOutput() ResolverEndpointPropertiesPtrOutput
	ToResolverEndpointPropertiesPtrOutputWithContext(context.Context) ResolverEndpointPropertiesPtrOutput
}

type resolverEndpointPropertiesPtrType ResolverEndpointPropertiesArgs

func ResolverEndpointPropertiesPtr(v *ResolverEndpointPropertiesArgs) ResolverEndpointPropertiesPtrInput {
	return (*resolverEndpointPropertiesPtrType)(v)
}

func (*resolverEndpointPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverEndpointProperties)(nil)).Elem()
}

func (i *resolverEndpointPropertiesPtrType) ToResolverEndpointPropertiesPtrOutput() ResolverEndpointPropertiesPtrOutput {
	return i.ToResolverEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (i *resolverEndpointPropertiesPtrType) ToResolverEndpointPropertiesPtrOutputWithContext(ctx context.Context) ResolverEndpointPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverEndpointPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html
type ResolverEndpointPropertiesOutput struct{ *pulumi.OutputState }

func (ResolverEndpointPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverEndpointProperties)(nil)).Elem()
}

func (o ResolverEndpointPropertiesOutput) ToResolverEndpointPropertiesOutput() ResolverEndpointPropertiesOutput {
	return o
}

func (o ResolverEndpointPropertiesOutput) ToResolverEndpointPropertiesOutputWithContext(ctx context.Context) ResolverEndpointPropertiesOutput {
	return o
}

func (o ResolverEndpointPropertiesOutput) ToResolverEndpointPropertiesPtrOutput() ResolverEndpointPropertiesPtrOutput {
	return o.ToResolverEndpointPropertiesPtrOutputWithContext(context.Background())
}

func (o ResolverEndpointPropertiesOutput) ToResolverEndpointPropertiesPtrOutputWithContext(ctx context.Context) ResolverEndpointPropertiesPtrOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) *ResolverEndpointProperties {
		return &v
	}).(ResolverEndpointPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
func (o ResolverEndpointPropertiesOutput) Direction() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) string { return v.Direction }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
func (o ResolverEndpointPropertiesOutput) IpAddresses() ResolverEndpointIpAddressRequestArrayOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) []ResolverEndpointIpAddressRequest { return v.IpAddresses }).(ResolverEndpointIpAddressRequestArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
func (o ResolverEndpointPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
func (o ResolverEndpointPropertiesOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) []string { return v.SecurityGroupIds }).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
func (o ResolverEndpointPropertiesOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v ResolverEndpointProperties) []cloudformation.Tag { return v.Tags }).(cloudformation.TagArrayOutput)
}

type ResolverEndpointPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResolverEndpointPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverEndpointProperties)(nil)).Elem()
}

func (o ResolverEndpointPropertiesPtrOutput) ToResolverEndpointPropertiesPtrOutput() ResolverEndpointPropertiesPtrOutput {
	return o
}

func (o ResolverEndpointPropertiesPtrOutput) ToResolverEndpointPropertiesPtrOutputWithContext(ctx context.Context) ResolverEndpointPropertiesPtrOutput {
	return o
}

func (o ResolverEndpointPropertiesPtrOutput) Elem() ResolverEndpointPropertiesOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) ResolverEndpointProperties { return *v }).(ResolverEndpointPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-direction
func (o ResolverEndpointPropertiesPtrOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) *string {
		if v == nil {
			return nil
		}
		return &v.Direction
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-ipaddresses
func (o ResolverEndpointPropertiesPtrOutput) IpAddresses() ResolverEndpointIpAddressRequestArrayOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) []ResolverEndpointIpAddressRequest {
		if v == nil {
			return nil
		}
		return v.IpAddresses
	}).(ResolverEndpointIpAddressRequestArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-name
func (o ResolverEndpointPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-securitygroupids
func (o ResolverEndpointPropertiesPtrOutput) SecurityGroupIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) []string {
		if v == nil {
			return nil
		}
		return v.SecurityGroupIds
	}).(pulumi.StringArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverendpoint.html#cfn-route53resolver-resolverendpoint-tags
func (o ResolverEndpointPropertiesPtrOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v *ResolverEndpointProperties) []cloudformation.Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(cloudformation.TagArrayOutput)
}

type ResolverQueryLoggingConfigAssociationAttributes struct {
	CreationTime string `pulumi:"CreationTime"`
	Error        string `pulumi:"Error"`
	ErrorMessage string `pulumi:"ErrorMessage"`
	Id           string `pulumi:"Id"`
	Status       string `pulumi:"Status"`
}

// ResolverQueryLoggingConfigAssociationAttributesInput is an input type that accepts ResolverQueryLoggingConfigAssociationAttributesArgs and ResolverQueryLoggingConfigAssociationAttributesOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationAttributesInput` via:
//
//          ResolverQueryLoggingConfigAssociationAttributesArgs{...}
type ResolverQueryLoggingConfigAssociationAttributesInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationAttributesOutput() ResolverQueryLoggingConfigAssociationAttributesOutput
	ToResolverQueryLoggingConfigAssociationAttributesOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationAttributesOutput
}

type ResolverQueryLoggingConfigAssociationAttributesArgs struct {
	CreationTime pulumi.StringInput `pulumi:"CreationTime"`
	Error        pulumi.StringInput `pulumi:"Error"`
	ErrorMessage pulumi.StringInput `pulumi:"ErrorMessage"`
	Id           pulumi.StringInput `pulumi:"Id"`
	Status       pulumi.StringInput `pulumi:"Status"`
}

func (ResolverQueryLoggingConfigAssociationAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationAttributes)(nil)).Elem()
}

func (i ResolverQueryLoggingConfigAssociationAttributesArgs) ToResolverQueryLoggingConfigAssociationAttributesOutput() ResolverQueryLoggingConfigAssociationAttributesOutput {
	return i.ToResolverQueryLoggingConfigAssociationAttributesOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAssociationAttributesArgs) ToResolverQueryLoggingConfigAssociationAttributesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationAttributesOutput)
}

func (i ResolverQueryLoggingConfigAssociationAttributesArgs) ToResolverQueryLoggingConfigAssociationAttributesPtrOutput() ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return i.ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAssociationAttributesArgs) ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationAttributesOutput).ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(ctx)
}

// ResolverQueryLoggingConfigAssociationAttributesPtrInput is an input type that accepts ResolverQueryLoggingConfigAssociationAttributesArgs, ResolverQueryLoggingConfigAssociationAttributesPtr and ResolverQueryLoggingConfigAssociationAttributesPtrOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationAttributesPtrInput` via:
//
//          ResolverQueryLoggingConfigAssociationAttributesArgs{...}
//
//  or:
//
//          nil
type ResolverQueryLoggingConfigAssociationAttributesPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationAttributesPtrOutput() ResolverQueryLoggingConfigAssociationAttributesPtrOutput
	ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationAttributesPtrOutput
}

type resolverQueryLoggingConfigAssociationAttributesPtrType ResolverQueryLoggingConfigAssociationAttributesArgs

func ResolverQueryLoggingConfigAssociationAttributesPtr(v *ResolverQueryLoggingConfigAssociationAttributesArgs) ResolverQueryLoggingConfigAssociationAttributesPtrInput {
	return (*resolverQueryLoggingConfigAssociationAttributesPtrType)(v)
}

func (*resolverQueryLoggingConfigAssociationAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationAttributes)(nil)).Elem()
}

func (i *resolverQueryLoggingConfigAssociationAttributesPtrType) ToResolverQueryLoggingConfigAssociationAttributesPtrOutput() ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return i.ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(context.Background())
}

func (i *resolverQueryLoggingConfigAssociationAttributesPtrType) ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationAttributesPtrOutput)
}

type ResolverQueryLoggingConfigAssociationAttributesOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationAttributes)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) ToResolverQueryLoggingConfigAssociationAttributesOutput() ResolverQueryLoggingConfigAssociationAttributesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) ToResolverQueryLoggingConfigAssociationAttributesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) ToResolverQueryLoggingConfigAssociationAttributesPtrOutput() ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return o.ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) *ResolverQueryLoggingConfigAssociationAttributes {
		return &v
	}).(ResolverQueryLoggingConfigAssociationAttributesPtrOutput)
}
func (o ResolverQueryLoggingConfigAssociationAttributesOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) Error() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) string { return v.Error }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) string { return v.Id }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationAttributes) string { return v.Status }).(pulumi.StringOutput)
}

type ResolverQueryLoggingConfigAssociationAttributesPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationAttributes)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) ToResolverQueryLoggingConfigAssociationAttributesPtrOutput() ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) ToResolverQueryLoggingConfigAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationAttributesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) Elem() ResolverQueryLoggingConfigAssociationAttributesOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) ResolverQueryLoggingConfigAssociationAttributes {
		return *v
	}).(ResolverQueryLoggingConfigAssociationAttributesOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) Error() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Error
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) ErrorMessage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ErrorMessage
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAssociationAttributesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
type ResolverQueryLoggingConfigAssociationProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
	ResolverQueryLogConfigId *string `pulumi:"ResolverQueryLogConfigId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
	ResourceId *string `pulumi:"ResourceId"`
}

// ResolverQueryLoggingConfigAssociationPropertiesInput is an input type that accepts ResolverQueryLoggingConfigAssociationPropertiesArgs and ResolverQueryLoggingConfigAssociationPropertiesOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationPropertiesInput` via:
//
//          ResolverQueryLoggingConfigAssociationPropertiesArgs{...}
type ResolverQueryLoggingConfigAssociationPropertiesInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationPropertiesOutput() ResolverQueryLoggingConfigAssociationPropertiesOutput
	ToResolverQueryLoggingConfigAssociationPropertiesOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
type ResolverQueryLoggingConfigAssociationPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
	ResolverQueryLogConfigId pulumi.StringPtrInput `pulumi:"ResolverQueryLogConfigId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
	ResourceId pulumi.StringPtrInput `pulumi:"ResourceId"`
}

func (ResolverQueryLoggingConfigAssociationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationProperties)(nil)).Elem()
}

func (i ResolverQueryLoggingConfigAssociationPropertiesArgs) ToResolverQueryLoggingConfigAssociationPropertiesOutput() ResolverQueryLoggingConfigAssociationPropertiesOutput {
	return i.ToResolverQueryLoggingConfigAssociationPropertiesOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAssociationPropertiesArgs) ToResolverQueryLoggingConfigAssociationPropertiesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationPropertiesOutput)
}

func (i ResolverQueryLoggingConfigAssociationPropertiesArgs) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutput() ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return i.ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAssociationPropertiesArgs) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationPropertiesOutput).ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(ctx)
}

// ResolverQueryLoggingConfigAssociationPropertiesPtrInput is an input type that accepts ResolverQueryLoggingConfigAssociationPropertiesArgs, ResolverQueryLoggingConfigAssociationPropertiesPtr and ResolverQueryLoggingConfigAssociationPropertiesPtrOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAssociationPropertiesPtrInput` via:
//
//          ResolverQueryLoggingConfigAssociationPropertiesArgs{...}
//
//  or:
//
//          nil
type ResolverQueryLoggingConfigAssociationPropertiesPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAssociationPropertiesPtrOutput() ResolverQueryLoggingConfigAssociationPropertiesPtrOutput
	ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigAssociationPropertiesPtrOutput
}

type resolverQueryLoggingConfigAssociationPropertiesPtrType ResolverQueryLoggingConfigAssociationPropertiesArgs

func ResolverQueryLoggingConfigAssociationPropertiesPtr(v *ResolverQueryLoggingConfigAssociationPropertiesArgs) ResolverQueryLoggingConfigAssociationPropertiesPtrInput {
	return (*resolverQueryLoggingConfigAssociationPropertiesPtrType)(v)
}

func (*resolverQueryLoggingConfigAssociationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationProperties)(nil)).Elem()
}

func (i *resolverQueryLoggingConfigAssociationPropertiesPtrType) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutput() ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return i.ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (i *resolverQueryLoggingConfigAssociationPropertiesPtrType) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAssociationPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html
type ResolverQueryLoggingConfigAssociationPropertiesOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAssociationProperties)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ToResolverQueryLoggingConfigAssociationPropertiesOutput() ResolverQueryLoggingConfigAssociationPropertiesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ToResolverQueryLoggingConfigAssociationPropertiesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutput() ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return o.ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationProperties) *ResolverQueryLoggingConfigAssociationProperties {
		return &v
	}).(ResolverQueryLoggingConfigAssociationPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ResolverQueryLogConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationProperties) *string { return v.ResolverQueryLogConfigId }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
func (o ResolverQueryLoggingConfigAssociationPropertiesOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAssociationProperties) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigAssociationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAssociationProperties)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutput() ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) ToResolverQueryLoggingConfigAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAssociationPropertiesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) Elem() ResolverQueryLoggingConfigAssociationPropertiesOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationProperties) ResolverQueryLoggingConfigAssociationProperties {
		return *v
	}).(ResolverQueryLoggingConfigAssociationPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resolverquerylogconfigid
func (o ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) ResolverQueryLogConfigId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResolverQueryLogConfigId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfigassociation.html#cfn-route53resolver-resolverqueryloggingconfigassociation-resourceid
func (o ResolverQueryLoggingConfigAssociationPropertiesPtrOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAssociationProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResourceId
	}).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigAttributes struct {
	Arn              string `pulumi:"Arn"`
	AssociationCount int    `pulumi:"AssociationCount"`
	CreationTime     string `pulumi:"CreationTime"`
	CreatorRequestId string `pulumi:"CreatorRequestId"`
	Id               string `pulumi:"Id"`
	OwnerId          string `pulumi:"OwnerId"`
	ShareStatus      string `pulumi:"ShareStatus"`
	Status           string `pulumi:"Status"`
}

// ResolverQueryLoggingConfigAttributesInput is an input type that accepts ResolverQueryLoggingConfigAttributesArgs and ResolverQueryLoggingConfigAttributesOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAttributesInput` via:
//
//          ResolverQueryLoggingConfigAttributesArgs{...}
type ResolverQueryLoggingConfigAttributesInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAttributesOutput() ResolverQueryLoggingConfigAttributesOutput
	ToResolverQueryLoggingConfigAttributesOutputWithContext(context.Context) ResolverQueryLoggingConfigAttributesOutput
}

type ResolverQueryLoggingConfigAttributesArgs struct {
	Arn              pulumi.StringInput `pulumi:"Arn"`
	AssociationCount pulumi.IntInput    `pulumi:"AssociationCount"`
	CreationTime     pulumi.StringInput `pulumi:"CreationTime"`
	CreatorRequestId pulumi.StringInput `pulumi:"CreatorRequestId"`
	Id               pulumi.StringInput `pulumi:"Id"`
	OwnerId          pulumi.StringInput `pulumi:"OwnerId"`
	ShareStatus      pulumi.StringInput `pulumi:"ShareStatus"`
	Status           pulumi.StringInput `pulumi:"Status"`
}

func (ResolverQueryLoggingConfigAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAttributes)(nil)).Elem()
}

func (i ResolverQueryLoggingConfigAttributesArgs) ToResolverQueryLoggingConfigAttributesOutput() ResolverQueryLoggingConfigAttributesOutput {
	return i.ToResolverQueryLoggingConfigAttributesOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAttributesArgs) ToResolverQueryLoggingConfigAttributesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAttributesOutput)
}

func (i ResolverQueryLoggingConfigAttributesArgs) ToResolverQueryLoggingConfigAttributesPtrOutput() ResolverQueryLoggingConfigAttributesPtrOutput {
	return i.ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigAttributesArgs) ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAttributesOutput).ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(ctx)
}

// ResolverQueryLoggingConfigAttributesPtrInput is an input type that accepts ResolverQueryLoggingConfigAttributesArgs, ResolverQueryLoggingConfigAttributesPtr and ResolverQueryLoggingConfigAttributesPtrOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigAttributesPtrInput` via:
//
//          ResolverQueryLoggingConfigAttributesArgs{...}
//
//  or:
//
//          nil
type ResolverQueryLoggingConfigAttributesPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigAttributesPtrOutput() ResolverQueryLoggingConfigAttributesPtrOutput
	ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigAttributesPtrOutput
}

type resolverQueryLoggingConfigAttributesPtrType ResolverQueryLoggingConfigAttributesArgs

func ResolverQueryLoggingConfigAttributesPtr(v *ResolverQueryLoggingConfigAttributesArgs) ResolverQueryLoggingConfigAttributesPtrInput {
	return (*resolverQueryLoggingConfigAttributesPtrType)(v)
}

func (*resolverQueryLoggingConfigAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAttributes)(nil)).Elem()
}

func (i *resolverQueryLoggingConfigAttributesPtrType) ToResolverQueryLoggingConfigAttributesPtrOutput() ResolverQueryLoggingConfigAttributesPtrOutput {
	return i.ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(context.Background())
}

func (i *resolverQueryLoggingConfigAttributesPtrType) ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigAttributesPtrOutput)
}

type ResolverQueryLoggingConfigAttributesOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigAttributes)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAttributesOutput) ToResolverQueryLoggingConfigAttributesOutput() ResolverQueryLoggingConfigAttributesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAttributesOutput) ToResolverQueryLoggingConfigAttributesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesOutput {
	return o
}

func (o ResolverQueryLoggingConfigAttributesOutput) ToResolverQueryLoggingConfigAttributesPtrOutput() ResolverQueryLoggingConfigAttributesPtrOutput {
	return o.ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigAttributesOutput) ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) *ResolverQueryLoggingConfigAttributes {
		return &v
	}).(ResolverQueryLoggingConfigAttributesPtrOutput)
}
func (o ResolverQueryLoggingConfigAttributesOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.Arn }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) AssociationCount() pulumi.IntOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) int { return v.AssociationCount }).(pulumi.IntOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) CreationTime() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.CreationTime }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) CreatorRequestId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.CreatorRequestId }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.Id }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) OwnerId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.OwnerId }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) ShareStatus() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.ShareStatus }).(pulumi.StringOutput)
}

func (o ResolverQueryLoggingConfigAttributesOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigAttributes) string { return v.Status }).(pulumi.StringOutput)
}

type ResolverQueryLoggingConfigAttributesPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigAttributes)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) ToResolverQueryLoggingConfigAttributesPtrOutput() ResolverQueryLoggingConfigAttributesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) ToResolverQueryLoggingConfigAttributesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigAttributesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) Elem() ResolverQueryLoggingConfigAttributesOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) ResolverQueryLoggingConfigAttributes { return *v }).(ResolverQueryLoggingConfigAttributesOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) AssociationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *int {
		if v == nil {
			return nil
		}
		return &v.AssociationCount
	}).(pulumi.IntPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) CreationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.CreationTime
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) CreatorRequestId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.CreatorRequestId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Id
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) OwnerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.OwnerId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) ShareStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ShareStatus
	}).(pulumi.StringPtrOutput)
}

func (o ResolverQueryLoggingConfigAttributesPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Status
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
type ResolverQueryLoggingConfigProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
	DestinationArn *string `pulumi:"DestinationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
	Name *string `pulumi:"Name"`
}

// ResolverQueryLoggingConfigPropertiesInput is an input type that accepts ResolverQueryLoggingConfigPropertiesArgs and ResolverQueryLoggingConfigPropertiesOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigPropertiesInput` via:
//
//          ResolverQueryLoggingConfigPropertiesArgs{...}
type ResolverQueryLoggingConfigPropertiesInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigPropertiesOutput() ResolverQueryLoggingConfigPropertiesOutput
	ToResolverQueryLoggingConfigPropertiesOutputWithContext(context.Context) ResolverQueryLoggingConfigPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
type ResolverQueryLoggingConfigPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
	DestinationArn pulumi.StringPtrInput `pulumi:"DestinationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
	Name pulumi.StringPtrInput `pulumi:"Name"`
}

func (ResolverQueryLoggingConfigPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigProperties)(nil)).Elem()
}

func (i ResolverQueryLoggingConfigPropertiesArgs) ToResolverQueryLoggingConfigPropertiesOutput() ResolverQueryLoggingConfigPropertiesOutput {
	return i.ToResolverQueryLoggingConfigPropertiesOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigPropertiesArgs) ToResolverQueryLoggingConfigPropertiesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigPropertiesOutput)
}

func (i ResolverQueryLoggingConfigPropertiesArgs) ToResolverQueryLoggingConfigPropertiesPtrOutput() ResolverQueryLoggingConfigPropertiesPtrOutput {
	return i.ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i ResolverQueryLoggingConfigPropertiesArgs) ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigPropertiesOutput).ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(ctx)
}

// ResolverQueryLoggingConfigPropertiesPtrInput is an input type that accepts ResolverQueryLoggingConfigPropertiesArgs, ResolverQueryLoggingConfigPropertiesPtr and ResolverQueryLoggingConfigPropertiesPtrOutput values.
// You can construct a concrete instance of `ResolverQueryLoggingConfigPropertiesPtrInput` via:
//
//          ResolverQueryLoggingConfigPropertiesArgs{...}
//
//  or:
//
//          nil
type ResolverQueryLoggingConfigPropertiesPtrInput interface {
	pulumi.Input

	ToResolverQueryLoggingConfigPropertiesPtrOutput() ResolverQueryLoggingConfigPropertiesPtrOutput
	ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(context.Context) ResolverQueryLoggingConfigPropertiesPtrOutput
}

type resolverQueryLoggingConfigPropertiesPtrType ResolverQueryLoggingConfigPropertiesArgs

func ResolverQueryLoggingConfigPropertiesPtr(v *ResolverQueryLoggingConfigPropertiesArgs) ResolverQueryLoggingConfigPropertiesPtrInput {
	return (*resolverQueryLoggingConfigPropertiesPtrType)(v)
}

func (*resolverQueryLoggingConfigPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigProperties)(nil)).Elem()
}

func (i *resolverQueryLoggingConfigPropertiesPtrType) ToResolverQueryLoggingConfigPropertiesPtrOutput() ResolverQueryLoggingConfigPropertiesPtrOutput {
	return i.ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(context.Background())
}

func (i *resolverQueryLoggingConfigPropertiesPtrType) ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverQueryLoggingConfigPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html
type ResolverQueryLoggingConfigPropertiesOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverQueryLoggingConfigProperties)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigPropertiesOutput) ToResolverQueryLoggingConfigPropertiesOutput() ResolverQueryLoggingConfigPropertiesOutput {
	return o
}

func (o ResolverQueryLoggingConfigPropertiesOutput) ToResolverQueryLoggingConfigPropertiesOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesOutput {
	return o
}

func (o ResolverQueryLoggingConfigPropertiesOutput) ToResolverQueryLoggingConfigPropertiesPtrOutput() ResolverQueryLoggingConfigPropertiesPtrOutput {
	return o.ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(context.Background())
}

func (o ResolverQueryLoggingConfigPropertiesOutput) ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigProperties) *ResolverQueryLoggingConfigProperties {
		return &v
	}).(ResolverQueryLoggingConfigPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
func (o ResolverQueryLoggingConfigPropertiesOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigProperties) *string { return v.DestinationArn }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
func (o ResolverQueryLoggingConfigPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverQueryLoggingConfigProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ResolverQueryLoggingConfigPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResolverQueryLoggingConfigPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverQueryLoggingConfigProperties)(nil)).Elem()
}

func (o ResolverQueryLoggingConfigPropertiesPtrOutput) ToResolverQueryLoggingConfigPropertiesPtrOutput() ResolverQueryLoggingConfigPropertiesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigPropertiesPtrOutput) ToResolverQueryLoggingConfigPropertiesPtrOutputWithContext(ctx context.Context) ResolverQueryLoggingConfigPropertiesPtrOutput {
	return o
}

func (o ResolverQueryLoggingConfigPropertiesPtrOutput) Elem() ResolverQueryLoggingConfigPropertiesOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigProperties) ResolverQueryLoggingConfigProperties { return *v }).(ResolverQueryLoggingConfigPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-destinationarn
func (o ResolverQueryLoggingConfigPropertiesPtrOutput) DestinationArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.DestinationArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverqueryloggingconfig.html#cfn-route53resolver-resolverqueryloggingconfig-name
func (o ResolverQueryLoggingConfigPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverQueryLoggingConfigProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

type ResolverRuleAssociationAttributes struct {
	Name                      string `pulumi:"Name"`
	ResolverRuleAssociationId string `pulumi:"ResolverRuleAssociationId"`
	ResolverRuleId            string `pulumi:"ResolverRuleId"`
	VPCId                     string `pulumi:"VPCId"`
}

// ResolverRuleAssociationAttributesInput is an input type that accepts ResolverRuleAssociationAttributesArgs and ResolverRuleAssociationAttributesOutput values.
// You can construct a concrete instance of `ResolverRuleAssociationAttributesInput` via:
//
//          ResolverRuleAssociationAttributesArgs{...}
type ResolverRuleAssociationAttributesInput interface {
	pulumi.Input

	ToResolverRuleAssociationAttributesOutput() ResolverRuleAssociationAttributesOutput
	ToResolverRuleAssociationAttributesOutputWithContext(context.Context) ResolverRuleAssociationAttributesOutput
}

type ResolverRuleAssociationAttributesArgs struct {
	Name                      pulumi.StringInput `pulumi:"Name"`
	ResolverRuleAssociationId pulumi.StringInput `pulumi:"ResolverRuleAssociationId"`
	ResolverRuleId            pulumi.StringInput `pulumi:"ResolverRuleId"`
	VPCId                     pulumi.StringInput `pulumi:"VPCId"`
}

func (ResolverRuleAssociationAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAssociationAttributes)(nil)).Elem()
}

func (i ResolverRuleAssociationAttributesArgs) ToResolverRuleAssociationAttributesOutput() ResolverRuleAssociationAttributesOutput {
	return i.ToResolverRuleAssociationAttributesOutputWithContext(context.Background())
}

func (i ResolverRuleAssociationAttributesArgs) ToResolverRuleAssociationAttributesOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationAttributesOutput)
}

func (i ResolverRuleAssociationAttributesArgs) ToResolverRuleAssociationAttributesPtrOutput() ResolverRuleAssociationAttributesPtrOutput {
	return i.ToResolverRuleAssociationAttributesPtrOutputWithContext(context.Background())
}

func (i ResolverRuleAssociationAttributesArgs) ToResolverRuleAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationAttributesOutput).ToResolverRuleAssociationAttributesPtrOutputWithContext(ctx)
}

// ResolverRuleAssociationAttributesPtrInput is an input type that accepts ResolverRuleAssociationAttributesArgs, ResolverRuleAssociationAttributesPtr and ResolverRuleAssociationAttributesPtrOutput values.
// You can construct a concrete instance of `ResolverRuleAssociationAttributesPtrInput` via:
//
//          ResolverRuleAssociationAttributesArgs{...}
//
//  or:
//
//          nil
type ResolverRuleAssociationAttributesPtrInput interface {
	pulumi.Input

	ToResolverRuleAssociationAttributesPtrOutput() ResolverRuleAssociationAttributesPtrOutput
	ToResolverRuleAssociationAttributesPtrOutputWithContext(context.Context) ResolverRuleAssociationAttributesPtrOutput
}

type resolverRuleAssociationAttributesPtrType ResolverRuleAssociationAttributesArgs

func ResolverRuleAssociationAttributesPtr(v *ResolverRuleAssociationAttributesArgs) ResolverRuleAssociationAttributesPtrInput {
	return (*resolverRuleAssociationAttributesPtrType)(v)
}

func (*resolverRuleAssociationAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAssociationAttributes)(nil)).Elem()
}

func (i *resolverRuleAssociationAttributesPtrType) ToResolverRuleAssociationAttributesPtrOutput() ResolverRuleAssociationAttributesPtrOutput {
	return i.ToResolverRuleAssociationAttributesPtrOutputWithContext(context.Background())
}

func (i *resolverRuleAssociationAttributesPtrType) ToResolverRuleAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationAttributesPtrOutput)
}

type ResolverRuleAssociationAttributesOutput struct{ *pulumi.OutputState }

func (ResolverRuleAssociationAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAssociationAttributes)(nil)).Elem()
}

func (o ResolverRuleAssociationAttributesOutput) ToResolverRuleAssociationAttributesOutput() ResolverRuleAssociationAttributesOutput {
	return o
}

func (o ResolverRuleAssociationAttributesOutput) ToResolverRuleAssociationAttributesOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesOutput {
	return o
}

func (o ResolverRuleAssociationAttributesOutput) ToResolverRuleAssociationAttributesPtrOutput() ResolverRuleAssociationAttributesPtrOutput {
	return o.ToResolverRuleAssociationAttributesPtrOutputWithContext(context.Background())
}

func (o ResolverRuleAssociationAttributesOutput) ToResolverRuleAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesPtrOutput {
	return o.ApplyT(func(v ResolverRuleAssociationAttributes) *ResolverRuleAssociationAttributes {
		return &v
	}).(ResolverRuleAssociationAttributesPtrOutput)
}
func (o ResolverRuleAssociationAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationAttributes) string { return v.Name }).(pulumi.StringOutput)
}

func (o ResolverRuleAssociationAttributesOutput) ResolverRuleAssociationId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationAttributes) string { return v.ResolverRuleAssociationId }).(pulumi.StringOutput)
}

func (o ResolverRuleAssociationAttributesOutput) ResolverRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationAttributes) string { return v.ResolverRuleId }).(pulumi.StringOutput)
}

func (o ResolverRuleAssociationAttributesOutput) VPCId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationAttributes) string { return v.VPCId }).(pulumi.StringOutput)
}

type ResolverRuleAssociationAttributesPtrOutput struct{ *pulumi.OutputState }

func (ResolverRuleAssociationAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAssociationAttributes)(nil)).Elem()
}

func (o ResolverRuleAssociationAttributesPtrOutput) ToResolverRuleAssociationAttributesPtrOutput() ResolverRuleAssociationAttributesPtrOutput {
	return o
}

func (o ResolverRuleAssociationAttributesPtrOutput) ToResolverRuleAssociationAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationAttributesPtrOutput {
	return o
}

func (o ResolverRuleAssociationAttributesPtrOutput) Elem() ResolverRuleAssociationAttributesOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationAttributes) ResolverRuleAssociationAttributes { return *v }).(ResolverRuleAssociationAttributesOutput)
}

func (o ResolverRuleAssociationAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAssociationAttributesPtrOutput) ResolverRuleAssociationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverRuleAssociationId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAssociationAttributesPtrOutput) ResolverRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverRuleId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAssociationAttributesPtrOutput) VPCId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.VPCId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
type ResolverRuleAssociationProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
	Name *string `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
	ResolverRuleId string `pulumi:"ResolverRuleId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
	VPCId string `pulumi:"VPCId"`
}

// ResolverRuleAssociationPropertiesInput is an input type that accepts ResolverRuleAssociationPropertiesArgs and ResolverRuleAssociationPropertiesOutput values.
// You can construct a concrete instance of `ResolverRuleAssociationPropertiesInput` via:
//
//          ResolverRuleAssociationPropertiesArgs{...}
type ResolverRuleAssociationPropertiesInput interface {
	pulumi.Input

	ToResolverRuleAssociationPropertiesOutput() ResolverRuleAssociationPropertiesOutput
	ToResolverRuleAssociationPropertiesOutputWithContext(context.Context) ResolverRuleAssociationPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
type ResolverRuleAssociationPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
	Name pulumi.StringPtrInput `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
	ResolverRuleId pulumi.StringInput `pulumi:"ResolverRuleId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
	VPCId pulumi.StringInput `pulumi:"VPCId"`
}

func (ResolverRuleAssociationPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAssociationProperties)(nil)).Elem()
}

func (i ResolverRuleAssociationPropertiesArgs) ToResolverRuleAssociationPropertiesOutput() ResolverRuleAssociationPropertiesOutput {
	return i.ToResolverRuleAssociationPropertiesOutputWithContext(context.Background())
}

func (i ResolverRuleAssociationPropertiesArgs) ToResolverRuleAssociationPropertiesOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationPropertiesOutput)
}

func (i ResolverRuleAssociationPropertiesArgs) ToResolverRuleAssociationPropertiesPtrOutput() ResolverRuleAssociationPropertiesPtrOutput {
	return i.ToResolverRuleAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (i ResolverRuleAssociationPropertiesArgs) ToResolverRuleAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationPropertiesOutput).ToResolverRuleAssociationPropertiesPtrOutputWithContext(ctx)
}

// ResolverRuleAssociationPropertiesPtrInput is an input type that accepts ResolverRuleAssociationPropertiesArgs, ResolverRuleAssociationPropertiesPtr and ResolverRuleAssociationPropertiesPtrOutput values.
// You can construct a concrete instance of `ResolverRuleAssociationPropertiesPtrInput` via:
//
//          ResolverRuleAssociationPropertiesArgs{...}
//
//  or:
//
//          nil
type ResolverRuleAssociationPropertiesPtrInput interface {
	pulumi.Input

	ToResolverRuleAssociationPropertiesPtrOutput() ResolverRuleAssociationPropertiesPtrOutput
	ToResolverRuleAssociationPropertiesPtrOutputWithContext(context.Context) ResolverRuleAssociationPropertiesPtrOutput
}

type resolverRuleAssociationPropertiesPtrType ResolverRuleAssociationPropertiesArgs

func ResolverRuleAssociationPropertiesPtr(v *ResolverRuleAssociationPropertiesArgs) ResolverRuleAssociationPropertiesPtrInput {
	return (*resolverRuleAssociationPropertiesPtrType)(v)
}

func (*resolverRuleAssociationPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAssociationProperties)(nil)).Elem()
}

func (i *resolverRuleAssociationPropertiesPtrType) ToResolverRuleAssociationPropertiesPtrOutput() ResolverRuleAssociationPropertiesPtrOutput {
	return i.ToResolverRuleAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (i *resolverRuleAssociationPropertiesPtrType) ToResolverRuleAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAssociationPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html
type ResolverRuleAssociationPropertiesOutput struct{ *pulumi.OutputState }

func (ResolverRuleAssociationPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAssociationProperties)(nil)).Elem()
}

func (o ResolverRuleAssociationPropertiesOutput) ToResolverRuleAssociationPropertiesOutput() ResolverRuleAssociationPropertiesOutput {
	return o
}

func (o ResolverRuleAssociationPropertiesOutput) ToResolverRuleAssociationPropertiesOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesOutput {
	return o
}

func (o ResolverRuleAssociationPropertiesOutput) ToResolverRuleAssociationPropertiesPtrOutput() ResolverRuleAssociationPropertiesPtrOutput {
	return o.ToResolverRuleAssociationPropertiesPtrOutputWithContext(context.Background())
}

func (o ResolverRuleAssociationPropertiesOutput) ToResolverRuleAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesPtrOutput {
	return o.ApplyT(func(v ResolverRuleAssociationProperties) *ResolverRuleAssociationProperties {
		return &v
	}).(ResolverRuleAssociationPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
func (o ResolverRuleAssociationPropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverRuleAssociationProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
func (o ResolverRuleAssociationPropertiesOutput) ResolverRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationProperties) string { return v.ResolverRuleId }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
func (o ResolverRuleAssociationPropertiesOutput) VPCId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAssociationProperties) string { return v.VPCId }).(pulumi.StringOutput)
}

type ResolverRuleAssociationPropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResolverRuleAssociationPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAssociationProperties)(nil)).Elem()
}

func (o ResolverRuleAssociationPropertiesPtrOutput) ToResolverRuleAssociationPropertiesPtrOutput() ResolverRuleAssociationPropertiesPtrOutput {
	return o
}

func (o ResolverRuleAssociationPropertiesPtrOutput) ToResolverRuleAssociationPropertiesPtrOutputWithContext(ctx context.Context) ResolverRuleAssociationPropertiesPtrOutput {
	return o
}

func (o ResolverRuleAssociationPropertiesPtrOutput) Elem() ResolverRuleAssociationPropertiesOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationProperties) ResolverRuleAssociationProperties { return *v }).(ResolverRuleAssociationPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-name
func (o ResolverRuleAssociationPropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-resolverruleid
func (o ResolverRuleAssociationPropertiesPtrOutput) ResolverRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverRuleId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverruleassociation.html#cfn-route53resolver-resolverruleassociation-vpcid
func (o ResolverRuleAssociationPropertiesPtrOutput) VPCId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAssociationProperties) *string {
		if v == nil {
			return nil
		}
		return &v.VPCId
	}).(pulumi.StringPtrOutput)
}

type ResolverRuleAttributes struct {
	Arn                string `pulumi:"Arn"`
	DomainName         string `pulumi:"DomainName"`
	Name               string `pulumi:"Name"`
	ResolverEndpointId string `pulumi:"ResolverEndpointId"`
	ResolverRuleId     string `pulumi:"ResolverRuleId"`
	TargetIps          string `pulumi:"TargetIps"`
}

// ResolverRuleAttributesInput is an input type that accepts ResolverRuleAttributesArgs and ResolverRuleAttributesOutput values.
// You can construct a concrete instance of `ResolverRuleAttributesInput` via:
//
//          ResolverRuleAttributesArgs{...}
type ResolverRuleAttributesInput interface {
	pulumi.Input

	ToResolverRuleAttributesOutput() ResolverRuleAttributesOutput
	ToResolverRuleAttributesOutputWithContext(context.Context) ResolverRuleAttributesOutput
}

type ResolverRuleAttributesArgs struct {
	Arn                pulumi.StringInput `pulumi:"Arn"`
	DomainName         pulumi.StringInput `pulumi:"DomainName"`
	Name               pulumi.StringInput `pulumi:"Name"`
	ResolverEndpointId pulumi.StringInput `pulumi:"ResolverEndpointId"`
	ResolverRuleId     pulumi.StringInput `pulumi:"ResolverRuleId"`
	TargetIps          pulumi.StringInput `pulumi:"TargetIps"`
}

func (ResolverRuleAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAttributes)(nil)).Elem()
}

func (i ResolverRuleAttributesArgs) ToResolverRuleAttributesOutput() ResolverRuleAttributesOutput {
	return i.ToResolverRuleAttributesOutputWithContext(context.Background())
}

func (i ResolverRuleAttributesArgs) ToResolverRuleAttributesOutputWithContext(ctx context.Context) ResolverRuleAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAttributesOutput)
}

func (i ResolverRuleAttributesArgs) ToResolverRuleAttributesPtrOutput() ResolverRuleAttributesPtrOutput {
	return i.ToResolverRuleAttributesPtrOutputWithContext(context.Background())
}

func (i ResolverRuleAttributesArgs) ToResolverRuleAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAttributesOutput).ToResolverRuleAttributesPtrOutputWithContext(ctx)
}

// ResolverRuleAttributesPtrInput is an input type that accepts ResolverRuleAttributesArgs, ResolverRuleAttributesPtr and ResolverRuleAttributesPtrOutput values.
// You can construct a concrete instance of `ResolverRuleAttributesPtrInput` via:
//
//          ResolverRuleAttributesArgs{...}
//
//  or:
//
//          nil
type ResolverRuleAttributesPtrInput interface {
	pulumi.Input

	ToResolverRuleAttributesPtrOutput() ResolverRuleAttributesPtrOutput
	ToResolverRuleAttributesPtrOutputWithContext(context.Context) ResolverRuleAttributesPtrOutput
}

type resolverRuleAttributesPtrType ResolverRuleAttributesArgs

func ResolverRuleAttributesPtr(v *ResolverRuleAttributesArgs) ResolverRuleAttributesPtrInput {
	return (*resolverRuleAttributesPtrType)(v)
}

func (*resolverRuleAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAttributes)(nil)).Elem()
}

func (i *resolverRuleAttributesPtrType) ToResolverRuleAttributesPtrOutput() ResolverRuleAttributesPtrOutput {
	return i.ToResolverRuleAttributesPtrOutputWithContext(context.Background())
}

func (i *resolverRuleAttributesPtrType) ToResolverRuleAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleAttributesPtrOutput)
}

type ResolverRuleAttributesOutput struct{ *pulumi.OutputState }

func (ResolverRuleAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleAttributes)(nil)).Elem()
}

func (o ResolverRuleAttributesOutput) ToResolverRuleAttributesOutput() ResolverRuleAttributesOutput {
	return o
}

func (o ResolverRuleAttributesOutput) ToResolverRuleAttributesOutputWithContext(ctx context.Context) ResolverRuleAttributesOutput {
	return o
}

func (o ResolverRuleAttributesOutput) ToResolverRuleAttributesPtrOutput() ResolverRuleAttributesPtrOutput {
	return o.ToResolverRuleAttributesPtrOutputWithContext(context.Background())
}

func (o ResolverRuleAttributesOutput) ToResolverRuleAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAttributesPtrOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) *ResolverRuleAttributes {
		return &v
	}).(ResolverRuleAttributesPtrOutput)
}
func (o ResolverRuleAttributesOutput) Arn() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.Arn }).(pulumi.StringOutput)
}

func (o ResolverRuleAttributesOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.DomainName }).(pulumi.StringOutput)
}

func (o ResolverRuleAttributesOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.Name }).(pulumi.StringOutput)
}

func (o ResolverRuleAttributesOutput) ResolverEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.ResolverEndpointId }).(pulumi.StringOutput)
}

func (o ResolverRuleAttributesOutput) ResolverRuleId() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.ResolverRuleId }).(pulumi.StringOutput)
}

func (o ResolverRuleAttributesOutput) TargetIps() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleAttributes) string { return v.TargetIps }).(pulumi.StringOutput)
}

type ResolverRuleAttributesPtrOutput struct{ *pulumi.OutputState }

func (ResolverRuleAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleAttributes)(nil)).Elem()
}

func (o ResolverRuleAttributesPtrOutput) ToResolverRuleAttributesPtrOutput() ResolverRuleAttributesPtrOutput {
	return o
}

func (o ResolverRuleAttributesPtrOutput) ToResolverRuleAttributesPtrOutputWithContext(ctx context.Context) ResolverRuleAttributesPtrOutput {
	return o
}

func (o ResolverRuleAttributesPtrOutput) Elem() ResolverRuleAttributesOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) ResolverRuleAttributes { return *v }).(ResolverRuleAttributesOutput)
}

func (o ResolverRuleAttributesPtrOutput) Arn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Arn
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAttributesPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAttributesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAttributesPtrOutput) ResolverEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverEndpointId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAttributesPtrOutput) ResolverRuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.ResolverRuleId
	}).(pulumi.StringPtrOutput)
}

func (o ResolverRuleAttributesPtrOutput) TargetIps() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleAttributes) *string {
		if v == nil {
			return nil
		}
		return &v.TargetIps
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
type ResolverRuleProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
	DomainName string `pulumi:"DomainName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
	Name *string `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
	ResolverEndpointId *string `pulumi:"ResolverEndpointId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
	RuleType string `pulumi:"RuleType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
	Tags []cloudformation.Tag `pulumi:"Tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
	TargetIps []ResolverRuleTargetAddress `pulumi:"TargetIps"`
}

// ResolverRulePropertiesInput is an input type that accepts ResolverRulePropertiesArgs and ResolverRulePropertiesOutput values.
// You can construct a concrete instance of `ResolverRulePropertiesInput` via:
//
//          ResolverRulePropertiesArgs{...}
type ResolverRulePropertiesInput interface {
	pulumi.Input

	ToResolverRulePropertiesOutput() ResolverRulePropertiesOutput
	ToResolverRulePropertiesOutputWithContext(context.Context) ResolverRulePropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
type ResolverRulePropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
	DomainName pulumi.StringInput `pulumi:"DomainName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
	Name pulumi.StringPtrInput `pulumi:"Name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
	ResolverEndpointId pulumi.StringPtrInput `pulumi:"ResolverEndpointId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
	RuleType pulumi.StringInput `pulumi:"RuleType"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
	Tags cloudformation.TagArrayInput `pulumi:"Tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
	TargetIps ResolverRuleTargetAddressArrayInput `pulumi:"TargetIps"`
}

func (ResolverRulePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleProperties)(nil)).Elem()
}

func (i ResolverRulePropertiesArgs) ToResolverRulePropertiesOutput() ResolverRulePropertiesOutput {
	return i.ToResolverRulePropertiesOutputWithContext(context.Background())
}

func (i ResolverRulePropertiesArgs) ToResolverRulePropertiesOutputWithContext(ctx context.Context) ResolverRulePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRulePropertiesOutput)
}

func (i ResolverRulePropertiesArgs) ToResolverRulePropertiesPtrOutput() ResolverRulePropertiesPtrOutput {
	return i.ToResolverRulePropertiesPtrOutputWithContext(context.Background())
}

func (i ResolverRulePropertiesArgs) ToResolverRulePropertiesPtrOutputWithContext(ctx context.Context) ResolverRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRulePropertiesOutput).ToResolverRulePropertiesPtrOutputWithContext(ctx)
}

// ResolverRulePropertiesPtrInput is an input type that accepts ResolverRulePropertiesArgs, ResolverRulePropertiesPtr and ResolverRulePropertiesPtrOutput values.
// You can construct a concrete instance of `ResolverRulePropertiesPtrInput` via:
//
//          ResolverRulePropertiesArgs{...}
//
//  or:
//
//          nil
type ResolverRulePropertiesPtrInput interface {
	pulumi.Input

	ToResolverRulePropertiesPtrOutput() ResolverRulePropertiesPtrOutput
	ToResolverRulePropertiesPtrOutputWithContext(context.Context) ResolverRulePropertiesPtrOutput
}

type resolverRulePropertiesPtrType ResolverRulePropertiesArgs

func ResolverRulePropertiesPtr(v *ResolverRulePropertiesArgs) ResolverRulePropertiesPtrInput {
	return (*resolverRulePropertiesPtrType)(v)
}

func (*resolverRulePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleProperties)(nil)).Elem()
}

func (i *resolverRulePropertiesPtrType) ToResolverRulePropertiesPtrOutput() ResolverRulePropertiesPtrOutput {
	return i.ToResolverRulePropertiesPtrOutputWithContext(context.Background())
}

func (i *resolverRulePropertiesPtrType) ToResolverRulePropertiesPtrOutputWithContext(ctx context.Context) ResolverRulePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRulePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html
type ResolverRulePropertiesOutput struct{ *pulumi.OutputState }

func (ResolverRulePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleProperties)(nil)).Elem()
}

func (o ResolverRulePropertiesOutput) ToResolverRulePropertiesOutput() ResolverRulePropertiesOutput {
	return o
}

func (o ResolverRulePropertiesOutput) ToResolverRulePropertiesOutputWithContext(ctx context.Context) ResolverRulePropertiesOutput {
	return o
}

func (o ResolverRulePropertiesOutput) ToResolverRulePropertiesPtrOutput() ResolverRulePropertiesPtrOutput {
	return o.ToResolverRulePropertiesPtrOutputWithContext(context.Background())
}

func (o ResolverRulePropertiesOutput) ToResolverRulePropertiesPtrOutputWithContext(ctx context.Context) ResolverRulePropertiesPtrOutput {
	return o.ApplyT(func(v ResolverRuleProperties) *ResolverRuleProperties {
		return &v
	}).(ResolverRulePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
func (o ResolverRulePropertiesOutput) DomainName() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleProperties) string { return v.DomainName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
func (o ResolverRulePropertiesOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverRuleProperties) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
func (o ResolverRulePropertiesOutput) ResolverEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverRuleProperties) *string { return v.ResolverEndpointId }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
func (o ResolverRulePropertiesOutput) RuleType() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleProperties) string { return v.RuleType }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
func (o ResolverRulePropertiesOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v ResolverRuleProperties) []cloudformation.Tag { return v.Tags }).(cloudformation.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
func (o ResolverRulePropertiesOutput) TargetIps() ResolverRuleTargetAddressArrayOutput {
	return o.ApplyT(func(v ResolverRuleProperties) []ResolverRuleTargetAddress { return v.TargetIps }).(ResolverRuleTargetAddressArrayOutput)
}

type ResolverRulePropertiesPtrOutput struct{ *pulumi.OutputState }

func (ResolverRulePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResolverRuleProperties)(nil)).Elem()
}

func (o ResolverRulePropertiesPtrOutput) ToResolverRulePropertiesPtrOutput() ResolverRulePropertiesPtrOutput {
	return o
}

func (o ResolverRulePropertiesPtrOutput) ToResolverRulePropertiesPtrOutputWithContext(ctx context.Context) ResolverRulePropertiesPtrOutput {
	return o
}

func (o ResolverRulePropertiesPtrOutput) Elem() ResolverRulePropertiesOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) ResolverRuleProperties { return *v }).(ResolverRulePropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-domainname
func (o ResolverRulePropertiesPtrOutput) DomainName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.DomainName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-name
func (o ResolverRulePropertiesPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-resolverendpointid
func (o ResolverRulePropertiesPtrOutput) ResolverEndpointId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) *string {
		if v == nil {
			return nil
		}
		return v.ResolverEndpointId
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-ruletype
func (o ResolverRulePropertiesPtrOutput) RuleType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RuleType
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-tags
func (o ResolverRulePropertiesPtrOutput) Tags() cloudformation.TagArrayOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) []cloudformation.Tag {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(cloudformation.TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-route53resolver-resolverrule.html#cfn-route53resolver-resolverrule-targetips
func (o ResolverRulePropertiesPtrOutput) TargetIps() ResolverRuleTargetAddressArrayOutput {
	return o.ApplyT(func(v *ResolverRuleProperties) []ResolverRuleTargetAddress {
		if v == nil {
			return nil
		}
		return v.TargetIps
	}).(ResolverRuleTargetAddressArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
type ResolverRuleTargetAddress struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
	Ip string `pulumi:"Ip"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
	Port *string `pulumi:"Port"`
}

// ResolverRuleTargetAddressInput is an input type that accepts ResolverRuleTargetAddressArgs and ResolverRuleTargetAddressOutput values.
// You can construct a concrete instance of `ResolverRuleTargetAddressInput` via:
//
//          ResolverRuleTargetAddressArgs{...}
type ResolverRuleTargetAddressInput interface {
	pulumi.Input

	ToResolverRuleTargetAddressOutput() ResolverRuleTargetAddressOutput
	ToResolverRuleTargetAddressOutputWithContext(context.Context) ResolverRuleTargetAddressOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
type ResolverRuleTargetAddressArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
	Ip pulumi.StringInput `pulumi:"Ip"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
	Port pulumi.StringPtrInput `pulumi:"Port"`
}

func (ResolverRuleTargetAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleTargetAddress)(nil)).Elem()
}

func (i ResolverRuleTargetAddressArgs) ToResolverRuleTargetAddressOutput() ResolverRuleTargetAddressOutput {
	return i.ToResolverRuleTargetAddressOutputWithContext(context.Background())
}

func (i ResolverRuleTargetAddressArgs) ToResolverRuleTargetAddressOutputWithContext(ctx context.Context) ResolverRuleTargetAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleTargetAddressOutput)
}

// ResolverRuleTargetAddressArrayInput is an input type that accepts ResolverRuleTargetAddressArray and ResolverRuleTargetAddressArrayOutput values.
// You can construct a concrete instance of `ResolverRuleTargetAddressArrayInput` via:
//
//          ResolverRuleTargetAddressArray{ ResolverRuleTargetAddressArgs{...} }
type ResolverRuleTargetAddressArrayInput interface {
	pulumi.Input

	ToResolverRuleTargetAddressArrayOutput() ResolverRuleTargetAddressArrayOutput
	ToResolverRuleTargetAddressArrayOutputWithContext(context.Context) ResolverRuleTargetAddressArrayOutput
}

type ResolverRuleTargetAddressArray []ResolverRuleTargetAddressInput

func (ResolverRuleTargetAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverRuleTargetAddress)(nil)).Elem()
}

func (i ResolverRuleTargetAddressArray) ToResolverRuleTargetAddressArrayOutput() ResolverRuleTargetAddressArrayOutput {
	return i.ToResolverRuleTargetAddressArrayOutputWithContext(context.Background())
}

func (i ResolverRuleTargetAddressArray) ToResolverRuleTargetAddressArrayOutputWithContext(ctx context.Context) ResolverRuleTargetAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResolverRuleTargetAddressArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html
type ResolverRuleTargetAddressOutput struct{ *pulumi.OutputState }

func (ResolverRuleTargetAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResolverRuleTargetAddress)(nil)).Elem()
}

func (o ResolverRuleTargetAddressOutput) ToResolverRuleTargetAddressOutput() ResolverRuleTargetAddressOutput {
	return o
}

func (o ResolverRuleTargetAddressOutput) ToResolverRuleTargetAddressOutputWithContext(ctx context.Context) ResolverRuleTargetAddressOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-ip
func (o ResolverRuleTargetAddressOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v ResolverRuleTargetAddress) string { return v.Ip }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53resolver-resolverrule-targetaddress.html#cfn-route53resolver-resolverrule-targetaddress-port
func (o ResolverRuleTargetAddressOutput) Port() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResolverRuleTargetAddress) *string { return v.Port }).(pulumi.StringPtrOutput)
}

type ResolverRuleTargetAddressArrayOutput struct{ *pulumi.OutputState }

func (ResolverRuleTargetAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ResolverRuleTargetAddress)(nil)).Elem()
}

func (o ResolverRuleTargetAddressArrayOutput) ToResolverRuleTargetAddressArrayOutput() ResolverRuleTargetAddressArrayOutput {
	return o
}

func (o ResolverRuleTargetAddressArrayOutput) ToResolverRuleTargetAddressArrayOutputWithContext(ctx context.Context) ResolverRuleTargetAddressArrayOutput {
	return o
}

func (o ResolverRuleTargetAddressArrayOutput) Index(i pulumi.IntInput) ResolverRuleTargetAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ResolverRuleTargetAddress {
		return vs[0].([]ResolverRuleTargetAddress)[vs[1].(int)]
	}).(ResolverRuleTargetAddressOutput)
}

func init() {
	pulumi.RegisterOutputType(ResolverEndpointAttributesOutput{})
	pulumi.RegisterOutputType(ResolverEndpointAttributesPtrOutput{})
	pulumi.RegisterOutputType(ResolverEndpointIpAddressRequestOutput{})
	pulumi.RegisterOutputType(ResolverEndpointIpAddressRequestArrayOutput{})
	pulumi.RegisterOutputType(ResolverEndpointPropertiesOutput{})
	pulumi.RegisterOutputType(ResolverEndpointPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationAttributesOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationAttributesPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationPropertiesOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAssociationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAttributesOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigAttributesPtrOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigPropertiesOutput{})
	pulumi.RegisterOutputType(ResolverQueryLoggingConfigPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuleAssociationAttributesOutput{})
	pulumi.RegisterOutputType(ResolverRuleAssociationAttributesPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuleAssociationPropertiesOutput{})
	pulumi.RegisterOutputType(ResolverRuleAssociationPropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuleAttributesOutput{})
	pulumi.RegisterOutputType(ResolverRuleAttributesPtrOutput{})
	pulumi.RegisterOutputType(ResolverRulePropertiesOutput{})
	pulumi.RegisterOutputType(ResolverRulePropertiesPtrOutput{})
	pulumi.RegisterOutputType(ResolverRuleTargetAddressOutput{})
	pulumi.RegisterOutputType(ResolverRuleTargetAddressArrayOutput{})
}
