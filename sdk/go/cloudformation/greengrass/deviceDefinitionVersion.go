// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package greengrass

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-devicedefinitionversion.html
type DeviceDefinitionVersion struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes DeviceDefinitionVersionAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DeviceDefinitionVersionPropertiesOutput `pulumi:"properties"`
}

// NewDeviceDefinitionVersion registers a new resource with the given unique name, arguments, and options.
func NewDeviceDefinitionVersion(ctx *pulumi.Context,
	name string, args *DeviceDefinitionVersionArgs, opts ...pulumi.ResourceOption) (*DeviceDefinitionVersion, error) {
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &DeviceDefinitionVersionArgs{}
	}
	var resource DeviceDefinitionVersion
	err := ctx.RegisterResource("cloudformation:Greengrass:DeviceDefinitionVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceDefinitionVersion gets an existing DeviceDefinitionVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceDefinitionVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceDefinitionVersionState, opts ...pulumi.ResourceOption) (*DeviceDefinitionVersion, error) {
	var resource DeviceDefinitionVersion
	err := ctx.ReadResource("cloudformation:Greengrass:DeviceDefinitionVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceDefinitionVersion resources.
type deviceDefinitionVersionState struct {
	// The attributes associated with the resource
	Attributes *DeviceDefinitionVersionAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *DeviceDefinitionVersionProperties `pulumi:"properties"`
}

type DeviceDefinitionVersionState struct {
	// The attributes associated with the resource
	Attributes DeviceDefinitionVersionAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DeviceDefinitionVersionPropertiesPtrInput
}

func (DeviceDefinitionVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceDefinitionVersionState)(nil)).Elem()
}

type deviceDefinitionVersionArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DeviceDefinitionVersionProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a DeviceDefinitionVersion resource.
type DeviceDefinitionVersionArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DeviceDefinitionVersionPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (DeviceDefinitionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceDefinitionVersionArgs)(nil)).Elem()
}
