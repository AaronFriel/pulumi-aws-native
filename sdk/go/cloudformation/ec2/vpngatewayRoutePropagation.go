// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpn-gatewayrouteprop.html
type VPNGatewayRoutePropagation struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes VPNGatewayRoutePropagationAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties VPNGatewayRoutePropagationPropertiesOutput `pulumi:"properties"`
}

// NewVPNGatewayRoutePropagation registers a new resource with the given unique name, arguments, and options.
func NewVPNGatewayRoutePropagation(ctx *pulumi.Context,
	name string, args *VPNGatewayRoutePropagationArgs, opts ...pulumi.ResourceOption) (*VPNGatewayRoutePropagation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	var resource VPNGatewayRoutePropagation
	err := ctx.RegisterResource("cloudformation:EC2:VPNGatewayRoutePropagation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPNGatewayRoutePropagation gets an existing VPNGatewayRoutePropagation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPNGatewayRoutePropagation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPNGatewayRoutePropagationState, opts ...pulumi.ResourceOption) (*VPNGatewayRoutePropagation, error) {
	var resource VPNGatewayRoutePropagation
	err := ctx.ReadResource("cloudformation:EC2:VPNGatewayRoutePropagation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPNGatewayRoutePropagation resources.
type vpngatewayRoutePropagationState struct {
	// The attributes associated with the resource
	Attributes *VPNGatewayRoutePropagationAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *VPNGatewayRoutePropagationProperties `pulumi:"properties"`
}

type VPNGatewayRoutePropagationState struct {
	// The attributes associated with the resource
	Attributes VPNGatewayRoutePropagationAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties VPNGatewayRoutePropagationPropertiesPtrInput
}

func (VPNGatewayRoutePropagationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpngatewayRoutePropagationState)(nil)).Elem()
}

type vpngatewayRoutePropagationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties VPNGatewayRoutePropagationProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a VPNGatewayRoutePropagation resource.
type VPNGatewayRoutePropagationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties VPNGatewayRoutePropagationPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (VPNGatewayRoutePropagationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpngatewayRoutePropagationArgs)(nil)).Elem()
}

type VPNGatewayRoutePropagationInput interface {
	pulumi.Input

	ToVPNGatewayRoutePropagationOutput() VPNGatewayRoutePropagationOutput
	ToVPNGatewayRoutePropagationOutputWithContext(ctx context.Context) VPNGatewayRoutePropagationOutput
}

func (*VPNGatewayRoutePropagation) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNGatewayRoutePropagation)(nil))
}

func (i *VPNGatewayRoutePropagation) ToVPNGatewayRoutePropagationOutput() VPNGatewayRoutePropagationOutput {
	return i.ToVPNGatewayRoutePropagationOutputWithContext(context.Background())
}

func (i *VPNGatewayRoutePropagation) ToVPNGatewayRoutePropagationOutputWithContext(ctx context.Context) VPNGatewayRoutePropagationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPNGatewayRoutePropagationOutput)
}

type VPNGatewayRoutePropagationOutput struct {
	*pulumi.OutputState
}

func (VPNGatewayRoutePropagationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPNGatewayRoutePropagation)(nil))
}

func (o VPNGatewayRoutePropagationOutput) ToVPNGatewayRoutePropagationOutput() VPNGatewayRoutePropagationOutput {
	return o
}

func (o VPNGatewayRoutePropagationOutput) ToVPNGatewayRoutePropagationOutputWithContext(ctx context.Context) VPNGatewayRoutePropagationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VPNGatewayRoutePropagationOutput{})
}
