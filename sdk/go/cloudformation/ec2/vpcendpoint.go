// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpoint.html
type VPCEndpoint struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes VPCEndpointAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties VPCEndpointPropertiesOutput `pulumi:"properties"`
}

// NewVPCEndpoint registers a new resource with the given unique name, arguments, and options.
func NewVPCEndpoint(ctx *pulumi.Context,
	name string, args *VPCEndpointArgs, opts ...pulumi.ResourceOption) (*VPCEndpoint, error) {
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &VPCEndpointArgs{}
	}
	var resource VPCEndpoint
	err := ctx.RegisterResource("cloudformation:EC2:VPCEndpoint", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPCEndpoint gets an existing VPCEndpoint resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPCEndpoint(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPCEndpointState, opts ...pulumi.ResourceOption) (*VPCEndpoint, error) {
	var resource VPCEndpoint
	err := ctx.ReadResource("cloudformation:EC2:VPCEndpoint", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPCEndpoint resources.
type vpcendpointState struct {
	// The attributes associated with the resource
	Attributes *VPCEndpointAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *VPCEndpointProperties `pulumi:"properties"`
}

type VPCEndpointState struct {
	// The attributes associated with the resource
	Attributes VPCEndpointAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties VPCEndpointPropertiesPtrInput
}

func (VPCEndpointState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcendpointState)(nil)).Elem()
}

type vpcendpointArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties VPCEndpointProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a VPCEndpoint resource.
type VPCEndpointArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties VPCEndpointPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (VPCEndpointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcendpointArgs)(nil)).Elem()
}
