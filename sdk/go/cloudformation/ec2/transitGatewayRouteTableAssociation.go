// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-transitgatewayroutetableassociation.html
type TransitGatewayRouteTableAssociation struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes TransitGatewayRouteTableAssociationAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties TransitGatewayRouteTableAssociationPropertiesOutput `pulumi:"properties"`
}

// NewTransitGatewayRouteTableAssociation registers a new resource with the given unique name, arguments, and options.
func NewTransitGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, args *TransitGatewayRouteTableAssociationArgs, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAssociation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	var resource TransitGatewayRouteTableAssociation
	err := ctx.RegisterResource("cloudformation:EC2:TransitGatewayRouteTableAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTransitGatewayRouteTableAssociation gets an existing TransitGatewayRouteTableAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTransitGatewayRouteTableAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TransitGatewayRouteTableAssociationState, opts ...pulumi.ResourceOption) (*TransitGatewayRouteTableAssociation, error) {
	var resource TransitGatewayRouteTableAssociation
	err := ctx.ReadResource("cloudformation:EC2:TransitGatewayRouteTableAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TransitGatewayRouteTableAssociation resources.
type transitGatewayRouteTableAssociationState struct {
	// The attributes associated with the resource
	Attributes *TransitGatewayRouteTableAssociationAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *TransitGatewayRouteTableAssociationProperties `pulumi:"properties"`
}

type TransitGatewayRouteTableAssociationState struct {
	// The attributes associated with the resource
	Attributes TransitGatewayRouteTableAssociationAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties TransitGatewayRouteTableAssociationPropertiesPtrInput
}

func (TransitGatewayRouteTableAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAssociationState)(nil)).Elem()
}

type transitGatewayRouteTableAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties TransitGatewayRouteTableAssociationProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a TransitGatewayRouteTableAssociation resource.
type TransitGatewayRouteTableAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties TransitGatewayRouteTableAssociationPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (TransitGatewayRouteTableAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*transitGatewayRouteTableAssociationArgs)(nil)).Elem()
}

type TransitGatewayRouteTableAssociationInput interface {
	pulumi.Input

	ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput
	ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput
}

func (*TransitGatewayRouteTableAssociation) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAssociation)(nil))
}

func (i *TransitGatewayRouteTableAssociation) ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput {
	return i.ToTransitGatewayRouteTableAssociationOutputWithContext(context.Background())
}

func (i *TransitGatewayRouteTableAssociation) ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TransitGatewayRouteTableAssociationOutput)
}

type TransitGatewayRouteTableAssociationOutput struct {
	*pulumi.OutputState
}

func (TransitGatewayRouteTableAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TransitGatewayRouteTableAssociation)(nil))
}

func (o TransitGatewayRouteTableAssociationOutput) ToTransitGatewayRouteTableAssociationOutput() TransitGatewayRouteTableAssociationOutput {
	return o
}

func (o TransitGatewayRouteTableAssociationOutput) ToTransitGatewayRouteTableAssociationOutputWithContext(ctx context.Context) TransitGatewayRouteTableAssociationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(TransitGatewayRouteTableAssociationOutput{})
}
