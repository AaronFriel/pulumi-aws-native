// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sagemaker

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-dataqualityjobdefinition.html
type DataQualityJobDefinition struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes DataQualityJobDefinitionAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DataQualityJobDefinitionPropertiesOutput `pulumi:"properties"`
}

// NewDataQualityJobDefinition registers a new resource with the given unique name, arguments, and options.
func NewDataQualityJobDefinition(ctx *pulumi.Context,
	name string, args *DataQualityJobDefinitionArgs, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	var resource DataQualityJobDefinition
	err := ctx.RegisterResource("cloudformation:SageMaker:DataQualityJobDefinition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDataQualityJobDefinition gets an existing DataQualityJobDefinition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDataQualityJobDefinition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DataQualityJobDefinitionState, opts ...pulumi.ResourceOption) (*DataQualityJobDefinition, error) {
	var resource DataQualityJobDefinition
	err := ctx.ReadResource("cloudformation:SageMaker:DataQualityJobDefinition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DataQualityJobDefinition resources.
type dataQualityJobDefinitionState struct {
	// The attributes associated with the resource
	Attributes *DataQualityJobDefinitionAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *DataQualityJobDefinitionProperties `pulumi:"properties"`
}

type DataQualityJobDefinitionState struct {
	// The attributes associated with the resource
	Attributes DataQualityJobDefinitionAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DataQualityJobDefinitionPropertiesPtrInput
}

func (DataQualityJobDefinitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionState)(nil)).Elem()
}

type dataQualityJobDefinitionArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DataQualityJobDefinitionProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a DataQualityJobDefinition resource.
type DataQualityJobDefinitionArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DataQualityJobDefinitionPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (DataQualityJobDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dataQualityJobDefinitionArgs)(nil)).Elem()
}

type DataQualityJobDefinitionInput interface {
	pulumi.Input

	ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput
	ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput
}

func (*DataQualityJobDefinition) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinition)(nil))
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return i.ToDataQualityJobDefinitionOutputWithContext(context.Background())
}

func (i *DataQualityJobDefinition) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataQualityJobDefinitionOutput)
}

type DataQualityJobDefinitionOutput struct {
	*pulumi.OutputState
}

func (DataQualityJobDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataQualityJobDefinition)(nil))
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutput() DataQualityJobDefinitionOutput {
	return o
}

func (o DataQualityJobDefinitionOutput) ToDataQualityJobDefinitionOutputWithContext(ctx context.Context) DataQualityJobDefinitionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DataQualityJobDefinitionOutput{})
}
