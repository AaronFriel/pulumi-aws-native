// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cassandra

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type KeyspaceAttributes struct {
}

// KeyspaceAttributesInput is an input type that accepts KeyspaceAttributesArgs and KeyspaceAttributesOutput values.
// You can construct a concrete instance of `KeyspaceAttributesInput` via:
//
//          KeyspaceAttributesArgs{...}
type KeyspaceAttributesInput interface {
	pulumi.Input

	ToKeyspaceAttributesOutput() KeyspaceAttributesOutput
	ToKeyspaceAttributesOutputWithContext(context.Context) KeyspaceAttributesOutput
}

type KeyspaceAttributesArgs struct {
}

func (KeyspaceAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyspaceAttributes)(nil)).Elem()
}

func (i KeyspaceAttributesArgs) ToKeyspaceAttributesOutput() KeyspaceAttributesOutput {
	return i.ToKeyspaceAttributesOutputWithContext(context.Background())
}

func (i KeyspaceAttributesArgs) ToKeyspaceAttributesOutputWithContext(ctx context.Context) KeyspaceAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspaceAttributesOutput)
}

func (i KeyspaceAttributesArgs) ToKeyspaceAttributesPtrOutput() KeyspaceAttributesPtrOutput {
	return i.ToKeyspaceAttributesPtrOutputWithContext(context.Background())
}

func (i KeyspaceAttributesArgs) ToKeyspaceAttributesPtrOutputWithContext(ctx context.Context) KeyspaceAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspaceAttributesOutput).ToKeyspaceAttributesPtrOutputWithContext(ctx)
}

// KeyspaceAttributesPtrInput is an input type that accepts KeyspaceAttributesArgs, KeyspaceAttributesPtr and KeyspaceAttributesPtrOutput values.
// You can construct a concrete instance of `KeyspaceAttributesPtrInput` via:
//
//          KeyspaceAttributesArgs{...}
//
//  or:
//
//          nil
type KeyspaceAttributesPtrInput interface {
	pulumi.Input

	ToKeyspaceAttributesPtrOutput() KeyspaceAttributesPtrOutput
	ToKeyspaceAttributesPtrOutputWithContext(context.Context) KeyspaceAttributesPtrOutput
}

type keyspaceAttributesPtrType KeyspaceAttributesArgs

func KeyspaceAttributesPtr(v *KeyspaceAttributesArgs) KeyspaceAttributesPtrInput {
	return (*keyspaceAttributesPtrType)(v)
}

func (*keyspaceAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyspaceAttributes)(nil)).Elem()
}

func (i *keyspaceAttributesPtrType) ToKeyspaceAttributesPtrOutput() KeyspaceAttributesPtrOutput {
	return i.ToKeyspaceAttributesPtrOutputWithContext(context.Background())
}

func (i *keyspaceAttributesPtrType) ToKeyspaceAttributesPtrOutputWithContext(ctx context.Context) KeyspaceAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspaceAttributesPtrOutput)
}

type KeyspaceAttributesOutput struct{ *pulumi.OutputState }

func (KeyspaceAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyspaceAttributes)(nil)).Elem()
}

func (o KeyspaceAttributesOutput) ToKeyspaceAttributesOutput() KeyspaceAttributesOutput {
	return o
}

func (o KeyspaceAttributesOutput) ToKeyspaceAttributesOutputWithContext(ctx context.Context) KeyspaceAttributesOutput {
	return o
}

func (o KeyspaceAttributesOutput) ToKeyspaceAttributesPtrOutput() KeyspaceAttributesPtrOutput {
	return o.ToKeyspaceAttributesPtrOutputWithContext(context.Background())
}

func (o KeyspaceAttributesOutput) ToKeyspaceAttributesPtrOutputWithContext(ctx context.Context) KeyspaceAttributesPtrOutput {
	return o.ApplyT(func(v KeyspaceAttributes) *KeyspaceAttributes {
		return &v
	}).(KeyspaceAttributesPtrOutput)
}

type KeyspaceAttributesPtrOutput struct{ *pulumi.OutputState }

func (KeyspaceAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyspaceAttributes)(nil)).Elem()
}

func (o KeyspaceAttributesPtrOutput) ToKeyspaceAttributesPtrOutput() KeyspaceAttributesPtrOutput {
	return o
}

func (o KeyspaceAttributesPtrOutput) ToKeyspaceAttributesPtrOutputWithContext(ctx context.Context) KeyspaceAttributesPtrOutput {
	return o
}

func (o KeyspaceAttributesPtrOutput) Elem() KeyspaceAttributesOutput {
	return o.ApplyT(func(v *KeyspaceAttributes) KeyspaceAttributes { return *v }).(KeyspaceAttributesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html
type KeyspaceProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename
	KeyspaceName *string `pulumi:"KeyspaceName"`
}

// KeyspacePropertiesInput is an input type that accepts KeyspacePropertiesArgs and KeyspacePropertiesOutput values.
// You can construct a concrete instance of `KeyspacePropertiesInput` via:
//
//          KeyspacePropertiesArgs{...}
type KeyspacePropertiesInput interface {
	pulumi.Input

	ToKeyspacePropertiesOutput() KeyspacePropertiesOutput
	ToKeyspacePropertiesOutputWithContext(context.Context) KeyspacePropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html
type KeyspacePropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename
	KeyspaceName pulumi.StringPtrInput `pulumi:"KeyspaceName"`
}

func (KeyspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyspaceProperties)(nil)).Elem()
}

func (i KeyspacePropertiesArgs) ToKeyspacePropertiesOutput() KeyspacePropertiesOutput {
	return i.ToKeyspacePropertiesOutputWithContext(context.Background())
}

func (i KeyspacePropertiesArgs) ToKeyspacePropertiesOutputWithContext(ctx context.Context) KeyspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspacePropertiesOutput)
}

func (i KeyspacePropertiesArgs) ToKeyspacePropertiesPtrOutput() KeyspacePropertiesPtrOutput {
	return i.ToKeyspacePropertiesPtrOutputWithContext(context.Background())
}

func (i KeyspacePropertiesArgs) ToKeyspacePropertiesPtrOutputWithContext(ctx context.Context) KeyspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspacePropertiesOutput).ToKeyspacePropertiesPtrOutputWithContext(ctx)
}

// KeyspacePropertiesPtrInput is an input type that accepts KeyspacePropertiesArgs, KeyspacePropertiesPtr and KeyspacePropertiesPtrOutput values.
// You can construct a concrete instance of `KeyspacePropertiesPtrInput` via:
//
//          KeyspacePropertiesArgs{...}
//
//  or:
//
//          nil
type KeyspacePropertiesPtrInput interface {
	pulumi.Input

	ToKeyspacePropertiesPtrOutput() KeyspacePropertiesPtrOutput
	ToKeyspacePropertiesPtrOutputWithContext(context.Context) KeyspacePropertiesPtrOutput
}

type keyspacePropertiesPtrType KeyspacePropertiesArgs

func KeyspacePropertiesPtr(v *KeyspacePropertiesArgs) KeyspacePropertiesPtrInput {
	return (*keyspacePropertiesPtrType)(v)
}

func (*keyspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyspaceProperties)(nil)).Elem()
}

func (i *keyspacePropertiesPtrType) ToKeyspacePropertiesPtrOutput() KeyspacePropertiesPtrOutput {
	return i.ToKeyspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *keyspacePropertiesPtrType) ToKeyspacePropertiesPtrOutputWithContext(ctx context.Context) KeyspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KeyspacePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html
type KeyspacePropertiesOutput struct{ *pulumi.OutputState }

func (KeyspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KeyspaceProperties)(nil)).Elem()
}

func (o KeyspacePropertiesOutput) ToKeyspacePropertiesOutput() KeyspacePropertiesOutput {
	return o
}

func (o KeyspacePropertiesOutput) ToKeyspacePropertiesOutputWithContext(ctx context.Context) KeyspacePropertiesOutput {
	return o
}

func (o KeyspacePropertiesOutput) ToKeyspacePropertiesPtrOutput() KeyspacePropertiesPtrOutput {
	return o.ToKeyspacePropertiesPtrOutputWithContext(context.Background())
}

func (o KeyspacePropertiesOutput) ToKeyspacePropertiesPtrOutputWithContext(ctx context.Context) KeyspacePropertiesPtrOutput {
	return o.ApplyT(func(v KeyspaceProperties) *KeyspaceProperties {
		return &v
	}).(KeyspacePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename
func (o KeyspacePropertiesOutput) KeyspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KeyspaceProperties) *string { return v.KeyspaceName }).(pulumi.StringPtrOutput)
}

type KeyspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (KeyspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KeyspaceProperties)(nil)).Elem()
}

func (o KeyspacePropertiesPtrOutput) ToKeyspacePropertiesPtrOutput() KeyspacePropertiesPtrOutput {
	return o
}

func (o KeyspacePropertiesPtrOutput) ToKeyspacePropertiesPtrOutputWithContext(ctx context.Context) KeyspacePropertiesPtrOutput {
	return o
}

func (o KeyspacePropertiesPtrOutput) Elem() KeyspacePropertiesOutput {
	return o.ApplyT(func(v *KeyspaceProperties) KeyspaceProperties { return *v }).(KeyspacePropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-keyspace.html#cfn-cassandra-keyspace-keyspacename
func (o KeyspacePropertiesPtrOutput) KeyspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KeyspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.KeyspaceName
	}).(pulumi.StringPtrOutput)
}

type TableAttributes struct {
}

// TableAttributesInput is an input type that accepts TableAttributesArgs and TableAttributesOutput values.
// You can construct a concrete instance of `TableAttributesInput` via:
//
//          TableAttributesArgs{...}
type TableAttributesInput interface {
	pulumi.Input

	ToTableAttributesOutput() TableAttributesOutput
	ToTableAttributesOutputWithContext(context.Context) TableAttributesOutput
}

type TableAttributesArgs struct {
}

func (TableAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAttributes)(nil)).Elem()
}

func (i TableAttributesArgs) ToTableAttributesOutput() TableAttributesOutput {
	return i.ToTableAttributesOutputWithContext(context.Background())
}

func (i TableAttributesArgs) ToTableAttributesOutputWithContext(ctx context.Context) TableAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAttributesOutput)
}

func (i TableAttributesArgs) ToTableAttributesPtrOutput() TableAttributesPtrOutput {
	return i.ToTableAttributesPtrOutputWithContext(context.Background())
}

func (i TableAttributesArgs) ToTableAttributesPtrOutputWithContext(ctx context.Context) TableAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAttributesOutput).ToTableAttributesPtrOutputWithContext(ctx)
}

// TableAttributesPtrInput is an input type that accepts TableAttributesArgs, TableAttributesPtr and TableAttributesPtrOutput values.
// You can construct a concrete instance of `TableAttributesPtrInput` via:
//
//          TableAttributesArgs{...}
//
//  or:
//
//          nil
type TableAttributesPtrInput interface {
	pulumi.Input

	ToTableAttributesPtrOutput() TableAttributesPtrOutput
	ToTableAttributesPtrOutputWithContext(context.Context) TableAttributesPtrOutput
}

type tableAttributesPtrType TableAttributesArgs

func TableAttributesPtr(v *TableAttributesArgs) TableAttributesPtrInput {
	return (*tableAttributesPtrType)(v)
}

func (*tableAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAttributes)(nil)).Elem()
}

func (i *tableAttributesPtrType) ToTableAttributesPtrOutput() TableAttributesPtrOutput {
	return i.ToTableAttributesPtrOutputWithContext(context.Background())
}

func (i *tableAttributesPtrType) ToTableAttributesPtrOutputWithContext(ctx context.Context) TableAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableAttributesPtrOutput)
}

type TableAttributesOutput struct{ *pulumi.OutputState }

func (TableAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableAttributes)(nil)).Elem()
}

func (o TableAttributesOutput) ToTableAttributesOutput() TableAttributesOutput {
	return o
}

func (o TableAttributesOutput) ToTableAttributesOutputWithContext(ctx context.Context) TableAttributesOutput {
	return o
}

func (o TableAttributesOutput) ToTableAttributesPtrOutput() TableAttributesPtrOutput {
	return o.ToTableAttributesPtrOutputWithContext(context.Background())
}

func (o TableAttributesOutput) ToTableAttributesPtrOutputWithContext(ctx context.Context) TableAttributesPtrOutput {
	return o.ApplyT(func(v TableAttributes) *TableAttributes {
		return &v
	}).(TableAttributesPtrOutput)
}

type TableAttributesPtrOutput struct{ *pulumi.OutputState }

func (TableAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableAttributes)(nil)).Elem()
}

func (o TableAttributesPtrOutput) ToTableAttributesPtrOutput() TableAttributesPtrOutput {
	return o
}

func (o TableAttributesPtrOutput) ToTableAttributesPtrOutputWithContext(ctx context.Context) TableAttributesPtrOutput {
	return o
}

func (o TableAttributesPtrOutput) Elem() TableAttributesOutput {
	return o.ApplyT(func(v *TableAttributes) TableAttributes { return *v }).(TableAttributesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html
type TableBillingMode struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-mode
	Mode string `pulumi:"Mode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-provisionedthroughput
	ProvisionedThroughput *TableProvisionedThroughput `pulumi:"ProvisionedThroughput"`
}

// TableBillingModeInput is an input type that accepts TableBillingModeArgs and TableBillingModeOutput values.
// You can construct a concrete instance of `TableBillingModeInput` via:
//
//          TableBillingModeArgs{...}
type TableBillingModeInput interface {
	pulumi.Input

	ToTableBillingModeOutput() TableBillingModeOutput
	ToTableBillingModeOutputWithContext(context.Context) TableBillingModeOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html
type TableBillingModeArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-mode
	Mode pulumi.StringInput `pulumi:"Mode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-provisionedthroughput
	ProvisionedThroughput TableProvisionedThroughputPtrInput `pulumi:"ProvisionedThroughput"`
}

func (TableBillingModeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBillingMode)(nil)).Elem()
}

func (i TableBillingModeArgs) ToTableBillingModeOutput() TableBillingModeOutput {
	return i.ToTableBillingModeOutputWithContext(context.Background())
}

func (i TableBillingModeArgs) ToTableBillingModeOutputWithContext(ctx context.Context) TableBillingModeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBillingModeOutput)
}

func (i TableBillingModeArgs) ToTableBillingModePtrOutput() TableBillingModePtrOutput {
	return i.ToTableBillingModePtrOutputWithContext(context.Background())
}

func (i TableBillingModeArgs) ToTableBillingModePtrOutputWithContext(ctx context.Context) TableBillingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBillingModeOutput).ToTableBillingModePtrOutputWithContext(ctx)
}

// TableBillingModePtrInput is an input type that accepts TableBillingModeArgs, TableBillingModePtr and TableBillingModePtrOutput values.
// You can construct a concrete instance of `TableBillingModePtrInput` via:
//
//          TableBillingModeArgs{...}
//
//  or:
//
//          nil
type TableBillingModePtrInput interface {
	pulumi.Input

	ToTableBillingModePtrOutput() TableBillingModePtrOutput
	ToTableBillingModePtrOutputWithContext(context.Context) TableBillingModePtrOutput
}

type tableBillingModePtrType TableBillingModeArgs

func TableBillingModePtr(v *TableBillingModeArgs) TableBillingModePtrInput {
	return (*tableBillingModePtrType)(v)
}

func (*tableBillingModePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBillingMode)(nil)).Elem()
}

func (i *tableBillingModePtrType) ToTableBillingModePtrOutput() TableBillingModePtrOutput {
	return i.ToTableBillingModePtrOutputWithContext(context.Background())
}

func (i *tableBillingModePtrType) ToTableBillingModePtrOutputWithContext(ctx context.Context) TableBillingModePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableBillingModePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html
type TableBillingModeOutput struct{ *pulumi.OutputState }

func (TableBillingModeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableBillingMode)(nil)).Elem()
}

func (o TableBillingModeOutput) ToTableBillingModeOutput() TableBillingModeOutput {
	return o
}

func (o TableBillingModeOutput) ToTableBillingModeOutputWithContext(ctx context.Context) TableBillingModeOutput {
	return o
}

func (o TableBillingModeOutput) ToTableBillingModePtrOutput() TableBillingModePtrOutput {
	return o.ToTableBillingModePtrOutputWithContext(context.Background())
}

func (o TableBillingModeOutput) ToTableBillingModePtrOutputWithContext(ctx context.Context) TableBillingModePtrOutput {
	return o.ApplyT(func(v TableBillingMode) *TableBillingMode {
		return &v
	}).(TableBillingModePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-mode
func (o TableBillingModeOutput) Mode() pulumi.StringOutput {
	return o.ApplyT(func(v TableBillingMode) string { return v.Mode }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-provisionedthroughput
func (o TableBillingModeOutput) ProvisionedThroughput() TableProvisionedThroughputPtrOutput {
	return o.ApplyT(func(v TableBillingMode) *TableProvisionedThroughput { return v.ProvisionedThroughput }).(TableProvisionedThroughputPtrOutput)
}

type TableBillingModePtrOutput struct{ *pulumi.OutputState }

func (TableBillingModePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableBillingMode)(nil)).Elem()
}

func (o TableBillingModePtrOutput) ToTableBillingModePtrOutput() TableBillingModePtrOutput {
	return o
}

func (o TableBillingModePtrOutput) ToTableBillingModePtrOutputWithContext(ctx context.Context) TableBillingModePtrOutput {
	return o
}

func (o TableBillingModePtrOutput) Elem() TableBillingModeOutput {
	return o.ApplyT(func(v *TableBillingMode) TableBillingMode { return *v }).(TableBillingModeOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-mode
func (o TableBillingModePtrOutput) Mode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableBillingMode) *string {
		if v == nil {
			return nil
		}
		return &v.Mode
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-billingmode.html#cfn-cassandra-table-billingmode-provisionedthroughput
func (o TableBillingModePtrOutput) ProvisionedThroughput() TableProvisionedThroughputPtrOutput {
	return o.ApplyT(func(v *TableBillingMode) *TableProvisionedThroughput {
		if v == nil {
			return nil
		}
		return v.ProvisionedThroughput
	}).(TableProvisionedThroughputPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html
type TableClusteringKeyColumn struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-column
	Column TableColumn `pulumi:"Column"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-orderby
	OrderBy *string `pulumi:"OrderBy"`
}

// TableClusteringKeyColumnInput is an input type that accepts TableClusteringKeyColumnArgs and TableClusteringKeyColumnOutput values.
// You can construct a concrete instance of `TableClusteringKeyColumnInput` via:
//
//          TableClusteringKeyColumnArgs{...}
type TableClusteringKeyColumnInput interface {
	pulumi.Input

	ToTableClusteringKeyColumnOutput() TableClusteringKeyColumnOutput
	ToTableClusteringKeyColumnOutputWithContext(context.Context) TableClusteringKeyColumnOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html
type TableClusteringKeyColumnArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-column
	Column TableColumnInput `pulumi:"Column"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-orderby
	OrderBy pulumi.StringPtrInput `pulumi:"OrderBy"`
}

func (TableClusteringKeyColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableClusteringKeyColumn)(nil)).Elem()
}

func (i TableClusteringKeyColumnArgs) ToTableClusteringKeyColumnOutput() TableClusteringKeyColumnOutput {
	return i.ToTableClusteringKeyColumnOutputWithContext(context.Background())
}

func (i TableClusteringKeyColumnArgs) ToTableClusteringKeyColumnOutputWithContext(ctx context.Context) TableClusteringKeyColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableClusteringKeyColumnOutput)
}

// TableClusteringKeyColumnArrayInput is an input type that accepts TableClusteringKeyColumnArray and TableClusteringKeyColumnArrayOutput values.
// You can construct a concrete instance of `TableClusteringKeyColumnArrayInput` via:
//
//          TableClusteringKeyColumnArray{ TableClusteringKeyColumnArgs{...} }
type TableClusteringKeyColumnArrayInput interface {
	pulumi.Input

	ToTableClusteringKeyColumnArrayOutput() TableClusteringKeyColumnArrayOutput
	ToTableClusteringKeyColumnArrayOutputWithContext(context.Context) TableClusteringKeyColumnArrayOutput
}

type TableClusteringKeyColumnArray []TableClusteringKeyColumnInput

func (TableClusteringKeyColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableClusteringKeyColumn)(nil)).Elem()
}

func (i TableClusteringKeyColumnArray) ToTableClusteringKeyColumnArrayOutput() TableClusteringKeyColumnArrayOutput {
	return i.ToTableClusteringKeyColumnArrayOutputWithContext(context.Background())
}

func (i TableClusteringKeyColumnArray) ToTableClusteringKeyColumnArrayOutputWithContext(ctx context.Context) TableClusteringKeyColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableClusteringKeyColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html
type TableClusteringKeyColumnOutput struct{ *pulumi.OutputState }

func (TableClusteringKeyColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableClusteringKeyColumn)(nil)).Elem()
}

func (o TableClusteringKeyColumnOutput) ToTableClusteringKeyColumnOutput() TableClusteringKeyColumnOutput {
	return o
}

func (o TableClusteringKeyColumnOutput) ToTableClusteringKeyColumnOutputWithContext(ctx context.Context) TableClusteringKeyColumnOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-column
func (o TableClusteringKeyColumnOutput) Column() TableColumnOutput {
	return o.ApplyT(func(v TableClusteringKeyColumn) TableColumn { return v.Column }).(TableColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-clusteringkeycolumn.html#cfn-cassandra-table-clusteringkeycolumn-orderby
func (o TableClusteringKeyColumnOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableClusteringKeyColumn) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

type TableClusteringKeyColumnArrayOutput struct{ *pulumi.OutputState }

func (TableClusteringKeyColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableClusteringKeyColumn)(nil)).Elem()
}

func (o TableClusteringKeyColumnArrayOutput) ToTableClusteringKeyColumnArrayOutput() TableClusteringKeyColumnArrayOutput {
	return o
}

func (o TableClusteringKeyColumnArrayOutput) ToTableClusteringKeyColumnArrayOutputWithContext(ctx context.Context) TableClusteringKeyColumnArrayOutput {
	return o
}

func (o TableClusteringKeyColumnArrayOutput) Index(i pulumi.IntInput) TableClusteringKeyColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableClusteringKeyColumn {
		return vs[0].([]TableClusteringKeyColumn)[vs[1].(int)]
	}).(TableClusteringKeyColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html
type TableColumn struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columnname
	ColumnName string `pulumi:"ColumnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columntype
	ColumnType string `pulumi:"ColumnType"`
}

// TableColumnInput is an input type that accepts TableColumnArgs and TableColumnOutput values.
// You can construct a concrete instance of `TableColumnInput` via:
//
//          TableColumnArgs{...}
type TableColumnInput interface {
	pulumi.Input

	ToTableColumnOutput() TableColumnOutput
	ToTableColumnOutputWithContext(context.Context) TableColumnOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html
type TableColumnArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columnname
	ColumnName pulumi.StringInput `pulumi:"ColumnName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columntype
	ColumnType pulumi.StringInput `pulumi:"ColumnType"`
}

func (TableColumnArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumn)(nil)).Elem()
}

func (i TableColumnArgs) ToTableColumnOutput() TableColumnOutput {
	return i.ToTableColumnOutputWithContext(context.Background())
}

func (i TableColumnArgs) ToTableColumnOutputWithContext(ctx context.Context) TableColumnOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnOutput)
}

// TableColumnArrayInput is an input type that accepts TableColumnArray and TableColumnArrayOutput values.
// You can construct a concrete instance of `TableColumnArrayInput` via:
//
//          TableColumnArray{ TableColumnArgs{...} }
type TableColumnArrayInput interface {
	pulumi.Input

	ToTableColumnArrayOutput() TableColumnArrayOutput
	ToTableColumnArrayOutputWithContext(context.Context) TableColumnArrayOutput
}

type TableColumnArray []TableColumnInput

func (TableColumnArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumn)(nil)).Elem()
}

func (i TableColumnArray) ToTableColumnArrayOutput() TableColumnArrayOutput {
	return i.ToTableColumnArrayOutputWithContext(context.Background())
}

func (i TableColumnArray) ToTableColumnArrayOutputWithContext(ctx context.Context) TableColumnArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html
type TableColumnOutput struct{ *pulumi.OutputState }

func (TableColumnOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableColumn)(nil)).Elem()
}

func (o TableColumnOutput) ToTableColumnOutput() TableColumnOutput {
	return o
}

func (o TableColumnOutput) ToTableColumnOutputWithContext(ctx context.Context) TableColumnOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columnname
func (o TableColumnOutput) ColumnName() pulumi.StringOutput {
	return o.ApplyT(func(v TableColumn) string { return v.ColumnName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-column.html#cfn-cassandra-table-column-columntype
func (o TableColumnOutput) ColumnType() pulumi.StringOutput {
	return o.ApplyT(func(v TableColumn) string { return v.ColumnType }).(pulumi.StringOutput)
}

type TableColumnArrayOutput struct{ *pulumi.OutputState }

func (TableColumnArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]TableColumn)(nil)).Elem()
}

func (o TableColumnArrayOutput) ToTableColumnArrayOutput() TableColumnArrayOutput {
	return o
}

func (o TableColumnArrayOutput) ToTableColumnArrayOutputWithContext(ctx context.Context) TableColumnArrayOutput {
	return o
}

func (o TableColumnArrayOutput) Index(i pulumi.IntInput) TableColumnOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) TableColumn {
		return vs[0].([]TableColumn)[vs[1].(int)]
	}).(TableColumnOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html
type TableProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
	BillingMode *TableBillingMode `pulumi:"BillingMode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
	ClusteringKeyColumns []TableClusteringKeyColumn `pulumi:"ClusteringKeyColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
	KeyspaceName string `pulumi:"KeyspaceName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
	PartitionKeyColumns []TableColumn `pulumi:"PartitionKeyColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
	RegularColumns []TableColumn `pulumi:"RegularColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
	TableName *string `pulumi:"TableName"`
}

// TablePropertiesInput is an input type that accepts TablePropertiesArgs and TablePropertiesOutput values.
// You can construct a concrete instance of `TablePropertiesInput` via:
//
//          TablePropertiesArgs{...}
type TablePropertiesInput interface {
	pulumi.Input

	ToTablePropertiesOutput() TablePropertiesOutput
	ToTablePropertiesOutputWithContext(context.Context) TablePropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html
type TablePropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
	BillingMode TableBillingModePtrInput `pulumi:"BillingMode"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
	ClusteringKeyColumns TableClusteringKeyColumnArrayInput `pulumi:"ClusteringKeyColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
	KeyspaceName pulumi.StringInput `pulumi:"KeyspaceName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
	PartitionKeyColumns TableColumnArrayInput `pulumi:"PartitionKeyColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
	RegularColumns TableColumnArrayInput `pulumi:"RegularColumns"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
	TableName pulumi.StringPtrInput `pulumi:"TableName"`
}

func (TablePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableProperties)(nil)).Elem()
}

func (i TablePropertiesArgs) ToTablePropertiesOutput() TablePropertiesOutput {
	return i.ToTablePropertiesOutputWithContext(context.Background())
}

func (i TablePropertiesArgs) ToTablePropertiesOutputWithContext(ctx context.Context) TablePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePropertiesOutput)
}

func (i TablePropertiesArgs) ToTablePropertiesPtrOutput() TablePropertiesPtrOutput {
	return i.ToTablePropertiesPtrOutputWithContext(context.Background())
}

func (i TablePropertiesArgs) ToTablePropertiesPtrOutputWithContext(ctx context.Context) TablePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePropertiesOutput).ToTablePropertiesPtrOutputWithContext(ctx)
}

// TablePropertiesPtrInput is an input type that accepts TablePropertiesArgs, TablePropertiesPtr and TablePropertiesPtrOutput values.
// You can construct a concrete instance of `TablePropertiesPtrInput` via:
//
//          TablePropertiesArgs{...}
//
//  or:
//
//          nil
type TablePropertiesPtrInput interface {
	pulumi.Input

	ToTablePropertiesPtrOutput() TablePropertiesPtrOutput
	ToTablePropertiesPtrOutputWithContext(context.Context) TablePropertiesPtrOutput
}

type tablePropertiesPtrType TablePropertiesArgs

func TablePropertiesPtr(v *TablePropertiesArgs) TablePropertiesPtrInput {
	return (*tablePropertiesPtrType)(v)
}

func (*tablePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableProperties)(nil)).Elem()
}

func (i *tablePropertiesPtrType) ToTablePropertiesPtrOutput() TablePropertiesPtrOutput {
	return i.ToTablePropertiesPtrOutputWithContext(context.Background())
}

func (i *tablePropertiesPtrType) ToTablePropertiesPtrOutputWithContext(ctx context.Context) TablePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TablePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html
type TablePropertiesOutput struct{ *pulumi.OutputState }

func (TablePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableProperties)(nil)).Elem()
}

func (o TablePropertiesOutput) ToTablePropertiesOutput() TablePropertiesOutput {
	return o
}

func (o TablePropertiesOutput) ToTablePropertiesOutputWithContext(ctx context.Context) TablePropertiesOutput {
	return o
}

func (o TablePropertiesOutput) ToTablePropertiesPtrOutput() TablePropertiesPtrOutput {
	return o.ToTablePropertiesPtrOutputWithContext(context.Background())
}

func (o TablePropertiesOutput) ToTablePropertiesPtrOutputWithContext(ctx context.Context) TablePropertiesPtrOutput {
	return o.ApplyT(func(v TableProperties) *TableProperties {
		return &v
	}).(TablePropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
func (o TablePropertiesOutput) BillingMode() TableBillingModePtrOutput {
	return o.ApplyT(func(v TableProperties) *TableBillingMode { return v.BillingMode }).(TableBillingModePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
func (o TablePropertiesOutput) ClusteringKeyColumns() TableClusteringKeyColumnArrayOutput {
	return o.ApplyT(func(v TableProperties) []TableClusteringKeyColumn { return v.ClusteringKeyColumns }).(TableClusteringKeyColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
func (o TablePropertiesOutput) KeyspaceName() pulumi.StringOutput {
	return o.ApplyT(func(v TableProperties) string { return v.KeyspaceName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
func (o TablePropertiesOutput) PartitionKeyColumns() TableColumnArrayOutput {
	return o.ApplyT(func(v TableProperties) []TableColumn { return v.PartitionKeyColumns }).(TableColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
func (o TablePropertiesOutput) RegularColumns() TableColumnArrayOutput {
	return o.ApplyT(func(v TableProperties) []TableColumn { return v.RegularColumns }).(TableColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
func (o TablePropertiesOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v TableProperties) *string { return v.TableName }).(pulumi.StringPtrOutput)
}

type TablePropertiesPtrOutput struct{ *pulumi.OutputState }

func (TablePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableProperties)(nil)).Elem()
}

func (o TablePropertiesPtrOutput) ToTablePropertiesPtrOutput() TablePropertiesPtrOutput {
	return o
}

func (o TablePropertiesPtrOutput) ToTablePropertiesPtrOutputWithContext(ctx context.Context) TablePropertiesPtrOutput {
	return o
}

func (o TablePropertiesPtrOutput) Elem() TablePropertiesOutput {
	return o.ApplyT(func(v *TableProperties) TableProperties { return *v }).(TablePropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode
func (o TablePropertiesPtrOutput) BillingMode() TableBillingModePtrOutput {
	return o.ApplyT(func(v *TableProperties) *TableBillingMode {
		if v == nil {
			return nil
		}
		return v.BillingMode
	}).(TableBillingModePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns
func (o TablePropertiesPtrOutput) ClusteringKeyColumns() TableClusteringKeyColumnArrayOutput {
	return o.ApplyT(func(v *TableProperties) []TableClusteringKeyColumn {
		if v == nil {
			return nil
		}
		return v.ClusteringKeyColumns
	}).(TableClusteringKeyColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename
func (o TablePropertiesPtrOutput) KeyspaceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableProperties) *string {
		if v == nil {
			return nil
		}
		return &v.KeyspaceName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns
func (o TablePropertiesPtrOutput) PartitionKeyColumns() TableColumnArrayOutput {
	return o.ApplyT(func(v *TableProperties) []TableColumn {
		if v == nil {
			return nil
		}
		return v.PartitionKeyColumns
	}).(TableColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns
func (o TablePropertiesPtrOutput) RegularColumns() TableColumnArrayOutput {
	return o.ApplyT(func(v *TableProperties) []TableColumn {
		if v == nil {
			return nil
		}
		return v.RegularColumns
	}).(TableColumnArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename
func (o TablePropertiesPtrOutput) TableName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *TableProperties) *string {
		if v == nil {
			return nil
		}
		return v.TableName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html
type TableProvisionedThroughput struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-readcapacityunits
	ReadCapacityUnits int `pulumi:"ReadCapacityUnits"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-writecapacityunits
	WriteCapacityUnits int `pulumi:"WriteCapacityUnits"`
}

// TableProvisionedThroughputInput is an input type that accepts TableProvisionedThroughputArgs and TableProvisionedThroughputOutput values.
// You can construct a concrete instance of `TableProvisionedThroughputInput` via:
//
//          TableProvisionedThroughputArgs{...}
type TableProvisionedThroughputInput interface {
	pulumi.Input

	ToTableProvisionedThroughputOutput() TableProvisionedThroughputOutput
	ToTableProvisionedThroughputOutputWithContext(context.Context) TableProvisionedThroughputOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html
type TableProvisionedThroughputArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-readcapacityunits
	ReadCapacityUnits pulumi.IntInput `pulumi:"ReadCapacityUnits"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-writecapacityunits
	WriteCapacityUnits pulumi.IntInput `pulumi:"WriteCapacityUnits"`
}

func (TableProvisionedThroughputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*TableProvisionedThroughput)(nil)).Elem()
}

func (i TableProvisionedThroughputArgs) ToTableProvisionedThroughputOutput() TableProvisionedThroughputOutput {
	return i.ToTableProvisionedThroughputOutputWithContext(context.Background())
}

func (i TableProvisionedThroughputArgs) ToTableProvisionedThroughputOutputWithContext(ctx context.Context) TableProvisionedThroughputOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableProvisionedThroughputOutput)
}

func (i TableProvisionedThroughputArgs) ToTableProvisionedThroughputPtrOutput() TableProvisionedThroughputPtrOutput {
	return i.ToTableProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i TableProvisionedThroughputArgs) ToTableProvisionedThroughputPtrOutputWithContext(ctx context.Context) TableProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableProvisionedThroughputOutput).ToTableProvisionedThroughputPtrOutputWithContext(ctx)
}

// TableProvisionedThroughputPtrInput is an input type that accepts TableProvisionedThroughputArgs, TableProvisionedThroughputPtr and TableProvisionedThroughputPtrOutput values.
// You can construct a concrete instance of `TableProvisionedThroughputPtrInput` via:
//
//          TableProvisionedThroughputArgs{...}
//
//  or:
//
//          nil
type TableProvisionedThroughputPtrInput interface {
	pulumi.Input

	ToTableProvisionedThroughputPtrOutput() TableProvisionedThroughputPtrOutput
	ToTableProvisionedThroughputPtrOutputWithContext(context.Context) TableProvisionedThroughputPtrOutput
}

type tableProvisionedThroughputPtrType TableProvisionedThroughputArgs

func TableProvisionedThroughputPtr(v *TableProvisionedThroughputArgs) TableProvisionedThroughputPtrInput {
	return (*tableProvisionedThroughputPtrType)(v)
}

func (*tableProvisionedThroughputPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**TableProvisionedThroughput)(nil)).Elem()
}

func (i *tableProvisionedThroughputPtrType) ToTableProvisionedThroughputPtrOutput() TableProvisionedThroughputPtrOutput {
	return i.ToTableProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (i *tableProvisionedThroughputPtrType) ToTableProvisionedThroughputPtrOutputWithContext(ctx context.Context) TableProvisionedThroughputPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TableProvisionedThroughputPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html
type TableProvisionedThroughputOutput struct{ *pulumi.OutputState }

func (TableProvisionedThroughputOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*TableProvisionedThroughput)(nil)).Elem()
}

func (o TableProvisionedThroughputOutput) ToTableProvisionedThroughputOutput() TableProvisionedThroughputOutput {
	return o
}

func (o TableProvisionedThroughputOutput) ToTableProvisionedThroughputOutputWithContext(ctx context.Context) TableProvisionedThroughputOutput {
	return o
}

func (o TableProvisionedThroughputOutput) ToTableProvisionedThroughputPtrOutput() TableProvisionedThroughputPtrOutput {
	return o.ToTableProvisionedThroughputPtrOutputWithContext(context.Background())
}

func (o TableProvisionedThroughputOutput) ToTableProvisionedThroughputPtrOutputWithContext(ctx context.Context) TableProvisionedThroughputPtrOutput {
	return o.ApplyT(func(v TableProvisionedThroughput) *TableProvisionedThroughput {
		return &v
	}).(TableProvisionedThroughputPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-readcapacityunits
func (o TableProvisionedThroughputOutput) ReadCapacityUnits() pulumi.IntOutput {
	return o.ApplyT(func(v TableProvisionedThroughput) int { return v.ReadCapacityUnits }).(pulumi.IntOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-writecapacityunits
func (o TableProvisionedThroughputOutput) WriteCapacityUnits() pulumi.IntOutput {
	return o.ApplyT(func(v TableProvisionedThroughput) int { return v.WriteCapacityUnits }).(pulumi.IntOutput)
}

type TableProvisionedThroughputPtrOutput struct{ *pulumi.OutputState }

func (TableProvisionedThroughputPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TableProvisionedThroughput)(nil)).Elem()
}

func (o TableProvisionedThroughputPtrOutput) ToTableProvisionedThroughputPtrOutput() TableProvisionedThroughputPtrOutput {
	return o
}

func (o TableProvisionedThroughputPtrOutput) ToTableProvisionedThroughputPtrOutputWithContext(ctx context.Context) TableProvisionedThroughputPtrOutput {
	return o
}

func (o TableProvisionedThroughputPtrOutput) Elem() TableProvisionedThroughputOutput {
	return o.ApplyT(func(v *TableProvisionedThroughput) TableProvisionedThroughput { return *v }).(TableProvisionedThroughputOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-readcapacityunits
func (o TableProvisionedThroughputPtrOutput) ReadCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableProvisionedThroughput) *int {
		if v == nil {
			return nil
		}
		return &v.ReadCapacityUnits
	}).(pulumi.IntPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-cassandra-table-provisionedthroughput.html#cfn-cassandra-table-provisionedthroughput-writecapacityunits
func (o TableProvisionedThroughputPtrOutput) WriteCapacityUnits() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *TableProvisionedThroughput) *int {
		if v == nil {
			return nil
		}
		return &v.WriteCapacityUnits
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(KeyspaceAttributesOutput{})
	pulumi.RegisterOutputType(KeyspaceAttributesPtrOutput{})
	pulumi.RegisterOutputType(KeyspacePropertiesOutput{})
	pulumi.RegisterOutputType(KeyspacePropertiesPtrOutput{})
	pulumi.RegisterOutputType(TableAttributesOutput{})
	pulumi.RegisterOutputType(TableAttributesPtrOutput{})
	pulumi.RegisterOutputType(TableBillingModeOutput{})
	pulumi.RegisterOutputType(TableBillingModePtrOutput{})
	pulumi.RegisterOutputType(TableClusteringKeyColumnOutput{})
	pulumi.RegisterOutputType(TableClusteringKeyColumnArrayOutput{})
	pulumi.RegisterOutputType(TableColumnOutput{})
	pulumi.RegisterOutputType(TableColumnArrayOutput{})
	pulumi.RegisterOutputType(TablePropertiesOutput{})
	pulumi.RegisterOutputType(TablePropertiesPtrOutput{})
	pulumi.RegisterOutputType(TableProvisionedThroughputOutput{})
	pulumi.RegisterOutputType(TableProvisionedThroughputPtrOutput{})
}
