// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudformation

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type AutoscalingCreationPolicy struct {
	// Specifies the percentage of instances in an Auto Scaling replacement update that must
	// signal success for the update to succeed. You can specify a value from 0 to 100. AWS
	// CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
	// instances with a minimum successful percentage of 50, three instances must signal success. If
	// an instance doesn't send a signal within the time specified by the Timeout property, AWS
	// CloudFormation assumes that the instance wasn't created.
	MinSuccessfulInstancesPercent *int `pulumi:"MinSuccessfulInstancesPercent"`
}

// AutoscalingCreationPolicyInput is an input type that accepts AutoscalingCreationPolicyArgs and AutoscalingCreationPolicyOutput values.
// You can construct a concrete instance of `AutoscalingCreationPolicyInput` via:
//
//          AutoscalingCreationPolicyArgs{...}
type AutoscalingCreationPolicyInput interface {
	pulumi.Input

	ToAutoscalingCreationPolicyOutput() AutoscalingCreationPolicyOutput
	ToAutoscalingCreationPolicyOutputWithContext(context.Context) AutoscalingCreationPolicyOutput
}

type AutoscalingCreationPolicyArgs struct {
	// Specifies the percentage of instances in an Auto Scaling replacement update that must
	// signal success for the update to succeed. You can specify a value from 0 to 100. AWS
	// CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
	// instances with a minimum successful percentage of 50, three instances must signal success. If
	// an instance doesn't send a signal within the time specified by the Timeout property, AWS
	// CloudFormation assumes that the instance wasn't created.
	MinSuccessfulInstancesPercent pulumi.IntPtrInput `pulumi:"MinSuccessfulInstancesPercent"`
}

func (AutoscalingCreationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCreationPolicy)(nil)).Elem()
}

func (i AutoscalingCreationPolicyArgs) ToAutoscalingCreationPolicyOutput() AutoscalingCreationPolicyOutput {
	return i.ToAutoscalingCreationPolicyOutputWithContext(context.Background())
}

func (i AutoscalingCreationPolicyArgs) ToAutoscalingCreationPolicyOutputWithContext(ctx context.Context) AutoscalingCreationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingCreationPolicyOutput)
}

func (i AutoscalingCreationPolicyArgs) ToAutoscalingCreationPolicyPtrOutput() AutoscalingCreationPolicyPtrOutput {
	return i.ToAutoscalingCreationPolicyPtrOutputWithContext(context.Background())
}

func (i AutoscalingCreationPolicyArgs) ToAutoscalingCreationPolicyPtrOutputWithContext(ctx context.Context) AutoscalingCreationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingCreationPolicyOutput).ToAutoscalingCreationPolicyPtrOutputWithContext(ctx)
}

// AutoscalingCreationPolicyPtrInput is an input type that accepts AutoscalingCreationPolicyArgs, AutoscalingCreationPolicyPtr and AutoscalingCreationPolicyPtrOutput values.
// You can construct a concrete instance of `AutoscalingCreationPolicyPtrInput` via:
//
//          AutoscalingCreationPolicyArgs{...}
//
//  or:
//
//          nil
type AutoscalingCreationPolicyPtrInput interface {
	pulumi.Input

	ToAutoscalingCreationPolicyPtrOutput() AutoscalingCreationPolicyPtrOutput
	ToAutoscalingCreationPolicyPtrOutputWithContext(context.Context) AutoscalingCreationPolicyPtrOutput
}

type autoscalingCreationPolicyPtrType AutoscalingCreationPolicyArgs

func AutoscalingCreationPolicyPtr(v *AutoscalingCreationPolicyArgs) AutoscalingCreationPolicyPtrInput {
	return (*autoscalingCreationPolicyPtrType)(v)
}

func (*autoscalingCreationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingCreationPolicy)(nil)).Elem()
}

func (i *autoscalingCreationPolicyPtrType) ToAutoscalingCreationPolicyPtrOutput() AutoscalingCreationPolicyPtrOutput {
	return i.ToAutoscalingCreationPolicyPtrOutputWithContext(context.Background())
}

func (i *autoscalingCreationPolicyPtrType) ToAutoscalingCreationPolicyPtrOutputWithContext(ctx context.Context) AutoscalingCreationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AutoscalingCreationPolicyPtrOutput)
}

type AutoscalingCreationPolicyOutput struct{ *pulumi.OutputState }

func (AutoscalingCreationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AutoscalingCreationPolicy)(nil)).Elem()
}

func (o AutoscalingCreationPolicyOutput) ToAutoscalingCreationPolicyOutput() AutoscalingCreationPolicyOutput {
	return o
}

func (o AutoscalingCreationPolicyOutput) ToAutoscalingCreationPolicyOutputWithContext(ctx context.Context) AutoscalingCreationPolicyOutput {
	return o
}

func (o AutoscalingCreationPolicyOutput) ToAutoscalingCreationPolicyPtrOutput() AutoscalingCreationPolicyPtrOutput {
	return o.ToAutoscalingCreationPolicyPtrOutputWithContext(context.Background())
}

func (o AutoscalingCreationPolicyOutput) ToAutoscalingCreationPolicyPtrOutputWithContext(ctx context.Context) AutoscalingCreationPolicyPtrOutput {
	return o.ApplyT(func(v AutoscalingCreationPolicy) *AutoscalingCreationPolicy {
		return &v
	}).(AutoscalingCreationPolicyPtrOutput)
}

// Specifies the percentage of instances in an Auto Scaling replacement update that must
// signal success for the update to succeed. You can specify a value from 0 to 100. AWS
// CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
// instances with a minimum successful percentage of 50, three instances must signal success. If
// an instance doesn't send a signal within the time specified by the Timeout property, AWS
// CloudFormation assumes that the instance wasn't created.
func (o AutoscalingCreationPolicyOutput) MinSuccessfulInstancesPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AutoscalingCreationPolicy) *int { return v.MinSuccessfulInstancesPercent }).(pulumi.IntPtrOutput)
}

type AutoscalingCreationPolicyPtrOutput struct{ *pulumi.OutputState }

func (AutoscalingCreationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AutoscalingCreationPolicy)(nil)).Elem()
}

func (o AutoscalingCreationPolicyPtrOutput) ToAutoscalingCreationPolicyPtrOutput() AutoscalingCreationPolicyPtrOutput {
	return o
}

func (o AutoscalingCreationPolicyPtrOutput) ToAutoscalingCreationPolicyPtrOutputWithContext(ctx context.Context) AutoscalingCreationPolicyPtrOutput {
	return o
}

func (o AutoscalingCreationPolicyPtrOutput) Elem() AutoscalingCreationPolicyOutput {
	return o.ApplyT(func(v *AutoscalingCreationPolicy) AutoscalingCreationPolicy { return *v }).(AutoscalingCreationPolicyOutput)
}

// Specifies the percentage of instances in an Auto Scaling replacement update that must
// signal success for the update to succeed. You can specify a value from 0 to 100. AWS
// CloudFormation rounds to the nearest tenth of a percent. For example, if you update five
// instances with a minimum successful percentage of 50, three instances must signal success. If
// an instance doesn't send a signal within the time specified by the Timeout property, AWS
// CloudFormation assumes that the instance wasn't created.
func (o AutoscalingCreationPolicyPtrOutput) MinSuccessfulInstancesPercent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AutoscalingCreationPolicy) *int {
		if v == nil {
			return nil
		}
		return v.MinSuccessfulInstancesPercent
	}).(pulumi.IntPtrOutput)
}

// The CreationPolicy for a resource.
type CreationPolicy struct {
	// For an Auto Scaling group replacement update, specifies how many instances must
	// signal success for the update to succeed.
	AutoScalingCreationPolicy *AutoscalingCreationPolicy `pulumi:"AutoScalingCreationPolicy"`
	// When AWS CloudFormation creates the associated resource, configures the number of
	// required success signals and the length of time that AWS CloudFormation waits for those signals.
	ResourceSignal *ResourceSignal `pulumi:"ResourceSignal"`
}

// CreationPolicyInput is an input type that accepts CreationPolicyArgs and CreationPolicyOutput values.
// You can construct a concrete instance of `CreationPolicyInput` via:
//
//          CreationPolicyArgs{...}
type CreationPolicyInput interface {
	pulumi.Input

	ToCreationPolicyOutput() CreationPolicyOutput
	ToCreationPolicyOutputWithContext(context.Context) CreationPolicyOutput
}

// The CreationPolicy for a resource.
type CreationPolicyArgs struct {
	// For an Auto Scaling group replacement update, specifies how many instances must
	// signal success for the update to succeed.
	AutoScalingCreationPolicy AutoscalingCreationPolicyPtrInput `pulumi:"AutoScalingCreationPolicy"`
	// When AWS CloudFormation creates the associated resource, configures the number of
	// required success signals and the length of time that AWS CloudFormation waits for those signals.
	ResourceSignal ResourceSignalPtrInput `pulumi:"ResourceSignal"`
}

func (CreationPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CreationPolicy)(nil)).Elem()
}

func (i CreationPolicyArgs) ToCreationPolicyOutput() CreationPolicyOutput {
	return i.ToCreationPolicyOutputWithContext(context.Background())
}

func (i CreationPolicyArgs) ToCreationPolicyOutputWithContext(ctx context.Context) CreationPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationPolicyOutput)
}

func (i CreationPolicyArgs) ToCreationPolicyPtrOutput() CreationPolicyPtrOutput {
	return i.ToCreationPolicyPtrOutputWithContext(context.Background())
}

func (i CreationPolicyArgs) ToCreationPolicyPtrOutputWithContext(ctx context.Context) CreationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationPolicyOutput).ToCreationPolicyPtrOutputWithContext(ctx)
}

// CreationPolicyPtrInput is an input type that accepts CreationPolicyArgs, CreationPolicyPtr and CreationPolicyPtrOutput values.
// You can construct a concrete instance of `CreationPolicyPtrInput` via:
//
//          CreationPolicyArgs{...}
//
//  or:
//
//          nil
type CreationPolicyPtrInput interface {
	pulumi.Input

	ToCreationPolicyPtrOutput() CreationPolicyPtrOutput
	ToCreationPolicyPtrOutputWithContext(context.Context) CreationPolicyPtrOutput
}

type creationPolicyPtrType CreationPolicyArgs

func CreationPolicyPtr(v *CreationPolicyArgs) CreationPolicyPtrInput {
	return (*creationPolicyPtrType)(v)
}

func (*creationPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CreationPolicy)(nil)).Elem()
}

func (i *creationPolicyPtrType) ToCreationPolicyPtrOutput() CreationPolicyPtrOutput {
	return i.ToCreationPolicyPtrOutputWithContext(context.Background())
}

func (i *creationPolicyPtrType) ToCreationPolicyPtrOutputWithContext(ctx context.Context) CreationPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CreationPolicyPtrOutput)
}

// The CreationPolicy for a resource.
type CreationPolicyOutput struct{ *pulumi.OutputState }

func (CreationPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CreationPolicy)(nil)).Elem()
}

func (o CreationPolicyOutput) ToCreationPolicyOutput() CreationPolicyOutput {
	return o
}

func (o CreationPolicyOutput) ToCreationPolicyOutputWithContext(ctx context.Context) CreationPolicyOutput {
	return o
}

func (o CreationPolicyOutput) ToCreationPolicyPtrOutput() CreationPolicyPtrOutput {
	return o.ToCreationPolicyPtrOutputWithContext(context.Background())
}

func (o CreationPolicyOutput) ToCreationPolicyPtrOutputWithContext(ctx context.Context) CreationPolicyPtrOutput {
	return o.ApplyT(func(v CreationPolicy) *CreationPolicy {
		return &v
	}).(CreationPolicyPtrOutput)
}

// For an Auto Scaling group replacement update, specifies how many instances must
// signal success for the update to succeed.
func (o CreationPolicyOutput) AutoScalingCreationPolicy() AutoscalingCreationPolicyPtrOutput {
	return o.ApplyT(func(v CreationPolicy) *AutoscalingCreationPolicy { return v.AutoScalingCreationPolicy }).(AutoscalingCreationPolicyPtrOutput)
}

// When AWS CloudFormation creates the associated resource, configures the number of
// required success signals and the length of time that AWS CloudFormation waits for those signals.
func (o CreationPolicyOutput) ResourceSignal() ResourceSignalPtrOutput {
	return o.ApplyT(func(v CreationPolicy) *ResourceSignal { return v.ResourceSignal }).(ResourceSignalPtrOutput)
}

type CreationPolicyPtrOutput struct{ *pulumi.OutputState }

func (CreationPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CreationPolicy)(nil)).Elem()
}

func (o CreationPolicyPtrOutput) ToCreationPolicyPtrOutput() CreationPolicyPtrOutput {
	return o
}

func (o CreationPolicyPtrOutput) ToCreationPolicyPtrOutputWithContext(ctx context.Context) CreationPolicyPtrOutput {
	return o
}

func (o CreationPolicyPtrOutput) Elem() CreationPolicyOutput {
	return o.ApplyT(func(v *CreationPolicy) CreationPolicy { return *v }).(CreationPolicyOutput)
}

// For an Auto Scaling group replacement update, specifies how many instances must
// signal success for the update to succeed.
func (o CreationPolicyPtrOutput) AutoScalingCreationPolicy() AutoscalingCreationPolicyPtrOutput {
	return o.ApplyT(func(v *CreationPolicy) *AutoscalingCreationPolicy {
		if v == nil {
			return nil
		}
		return v.AutoScalingCreationPolicy
	}).(AutoscalingCreationPolicyPtrOutput)
}

// When AWS CloudFormation creates the associated resource, configures the number of
// required success signals and the length of time that AWS CloudFormation waits for those signals.
func (o CreationPolicyPtrOutput) ResourceSignal() ResourceSignalPtrOutput {
	return o.ApplyT(func(v *CreationPolicy) *ResourceSignal {
		if v == nil {
			return nil
		}
		return v.ResourceSignal
	}).(ResourceSignalPtrOutput)
}

type ResourceSignal struct {
	// The number of success signals AWS CloudFormation must receive before it sets the
	// resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't
	// receive the specified number of signals before the timeout period expires, the resource
	// creation fails and AWS CloudFormation rolls the stack back.
	Count *int `pulumi:"Count"`
	// The length of time that AWS CloudFormation waits for the number of signals that was
	// specified in the Count property. The timeout period starts after AWS CloudFormation starts
	// creating the resource, and the timeout expires no sooner than the time you specify but can
	// occur shortly thereafter. The maximum time that you can specify is 12 hours.
	//
	// The value must be in ISO8601 duration format, in the form: "PT#H#M#S", where each # is the
	// number of hours, minutes, and seconds, respectively. For best results, specify a period of
	// time that gives your instances plenty of time to get up and running. A shorter timeout can
	// cause a rollback.
	Timeout *string `pulumi:"Timeout"`
}

// ResourceSignalInput is an input type that accepts ResourceSignalArgs and ResourceSignalOutput values.
// You can construct a concrete instance of `ResourceSignalInput` via:
//
//          ResourceSignalArgs{...}
type ResourceSignalInput interface {
	pulumi.Input

	ToResourceSignalOutput() ResourceSignalOutput
	ToResourceSignalOutputWithContext(context.Context) ResourceSignalOutput
}

type ResourceSignalArgs struct {
	// The number of success signals AWS CloudFormation must receive before it sets the
	// resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't
	// receive the specified number of signals before the timeout period expires, the resource
	// creation fails and AWS CloudFormation rolls the stack back.
	Count pulumi.IntPtrInput `pulumi:"Count"`
	// The length of time that AWS CloudFormation waits for the number of signals that was
	// specified in the Count property. The timeout period starts after AWS CloudFormation starts
	// creating the resource, and the timeout expires no sooner than the time you specify but can
	// occur shortly thereafter. The maximum time that you can specify is 12 hours.
	//
	// The value must be in ISO8601 duration format, in the form: "PT#H#M#S", where each # is the
	// number of hours, minutes, and seconds, respectively. For best results, specify a period of
	// time that gives your instances plenty of time to get up and running. A shorter timeout can
	// cause a rollback.
	Timeout pulumi.StringPtrInput `pulumi:"Timeout"`
}

func (ResourceSignalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSignal)(nil)).Elem()
}

func (i ResourceSignalArgs) ToResourceSignalOutput() ResourceSignalOutput {
	return i.ToResourceSignalOutputWithContext(context.Background())
}

func (i ResourceSignalArgs) ToResourceSignalOutputWithContext(ctx context.Context) ResourceSignalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSignalOutput)
}

func (i ResourceSignalArgs) ToResourceSignalPtrOutput() ResourceSignalPtrOutput {
	return i.ToResourceSignalPtrOutputWithContext(context.Background())
}

func (i ResourceSignalArgs) ToResourceSignalPtrOutputWithContext(ctx context.Context) ResourceSignalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSignalOutput).ToResourceSignalPtrOutputWithContext(ctx)
}

// ResourceSignalPtrInput is an input type that accepts ResourceSignalArgs, ResourceSignalPtr and ResourceSignalPtrOutput values.
// You can construct a concrete instance of `ResourceSignalPtrInput` via:
//
//          ResourceSignalArgs{...}
//
//  or:
//
//          nil
type ResourceSignalPtrInput interface {
	pulumi.Input

	ToResourceSignalPtrOutput() ResourceSignalPtrOutput
	ToResourceSignalPtrOutputWithContext(context.Context) ResourceSignalPtrOutput
}

type resourceSignalPtrType ResourceSignalArgs

func ResourceSignalPtr(v *ResourceSignalArgs) ResourceSignalPtrInput {
	return (*resourceSignalPtrType)(v)
}

func (*resourceSignalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSignal)(nil)).Elem()
}

func (i *resourceSignalPtrType) ToResourceSignalPtrOutput() ResourceSignalPtrOutput {
	return i.ToResourceSignalPtrOutputWithContext(context.Background())
}

func (i *resourceSignalPtrType) ToResourceSignalPtrOutputWithContext(ctx context.Context) ResourceSignalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceSignalPtrOutput)
}

type ResourceSignalOutput struct{ *pulumi.OutputState }

func (ResourceSignalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ResourceSignal)(nil)).Elem()
}

func (o ResourceSignalOutput) ToResourceSignalOutput() ResourceSignalOutput {
	return o
}

func (o ResourceSignalOutput) ToResourceSignalOutputWithContext(ctx context.Context) ResourceSignalOutput {
	return o
}

func (o ResourceSignalOutput) ToResourceSignalPtrOutput() ResourceSignalPtrOutput {
	return o.ToResourceSignalPtrOutputWithContext(context.Background())
}

func (o ResourceSignalOutput) ToResourceSignalPtrOutputWithContext(ctx context.Context) ResourceSignalPtrOutput {
	return o.ApplyT(func(v ResourceSignal) *ResourceSignal {
		return &v
	}).(ResourceSignalPtrOutput)
}

// The number of success signals AWS CloudFormation must receive before it sets the
// resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't
// receive the specified number of signals before the timeout period expires, the resource
// creation fails and AWS CloudFormation rolls the stack back.
func (o ResourceSignalOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ResourceSignal) *int { return v.Count }).(pulumi.IntPtrOutput)
}

// The length of time that AWS CloudFormation waits for the number of signals that was
// specified in the Count property. The timeout period starts after AWS CloudFormation starts
// creating the resource, and the timeout expires no sooner than the time you specify but can
// occur shortly thereafter. The maximum time that you can specify is 12 hours.
//
// The value must be in ISO8601 duration format, in the form: "PT#H#M#S", where each # is the
// number of hours, minutes, and seconds, respectively. For best results, specify a period of
// time that gives your instances plenty of time to get up and running. A shorter timeout can
// cause a rollback.
func (o ResourceSignalOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ResourceSignal) *string { return v.Timeout }).(pulumi.StringPtrOutput)
}

type ResourceSignalPtrOutput struct{ *pulumi.OutputState }

func (ResourceSignalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceSignal)(nil)).Elem()
}

func (o ResourceSignalPtrOutput) ToResourceSignalPtrOutput() ResourceSignalPtrOutput {
	return o
}

func (o ResourceSignalPtrOutput) ToResourceSignalPtrOutputWithContext(ctx context.Context) ResourceSignalPtrOutput {
	return o
}

func (o ResourceSignalPtrOutput) Elem() ResourceSignalOutput {
	return o.ApplyT(func(v *ResourceSignal) ResourceSignal { return *v }).(ResourceSignalOutput)
}

// The number of success signals AWS CloudFormation must receive before it sets the
// resource status as CREATE_COMPLETE. If the resource receives a failure signal or doesn't
// receive the specified number of signals before the timeout period expires, the resource
// creation fails and AWS CloudFormation rolls the stack back.
func (o ResourceSignalPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ResourceSignal) *int {
		if v == nil {
			return nil
		}
		return v.Count
	}).(pulumi.IntPtrOutput)
}

// The length of time that AWS CloudFormation waits for the number of signals that was
// specified in the Count property. The timeout period starts after AWS CloudFormation starts
// creating the resource, and the timeout expires no sooner than the time you specify but can
// occur shortly thereafter. The maximum time that you can specify is 12 hours.
//
// The value must be in ISO8601 duration format, in the form: "PT#H#M#S", where each # is the
// number of hours, minutes, and seconds, respectively. For best results, specify a period of
// time that gives your instances plenty of time to get up and running. A shorter timeout can
// cause a rollback.
func (o ResourceSignalPtrOutput) Timeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ResourceSignal) *string {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html
type Tag struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key
	Key string `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value
	Value string `pulumi:"Value"`
}

// TagInput is an input type that accepts TagArgs and TagOutput values.
// You can construct a concrete instance of `TagInput` via:
//
//          TagArgs{...}
type TagInput interface {
	pulumi.Input

	ToTagOutput() TagOutput
	ToTagOutputWithContext(context.Context) TagOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html
type TagArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key
	Key pulumi.StringInput `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value
	Value pulumi.StringInput `pulumi:"Value"`
}

func (TagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (i TagArgs) ToTagOutput() TagOutput {
	return i.ToTagOutputWithContext(context.Background())
}

func (i TagArgs) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagOutput)
}

// TagArrayInput is an input type that accepts TagArray and TagArrayOutput values.
// You can construct a concrete instance of `TagArrayInput` via:
//
//          TagArray{ TagArgs{...} }
type TagArrayInput interface {
	pulumi.Input

	ToTagArrayOutput() TagArrayOutput
	ToTagArrayOutputWithContext(context.Context) TagArrayOutput
}

type TagArray []TagInput

func (TagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (i TagArray) ToTagArrayOutput() TagArrayOutput {
	return i.ToTagArrayOutputWithContext(context.Background())
}

func (i TagArray) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TagArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html
type TagOutput struct{ *pulumi.OutputState }

func (TagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Tag)(nil)).Elem()
}

func (o TagOutput) ToTagOutput() TagOutput {
	return o
}

func (o TagOutput) ToTagOutputWithContext(ctx context.Context) TagOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-key
func (o TagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v Tag) string { return v.Key }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html#cfn-resource-tags-value
func (o TagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v Tag) string { return v.Value }).(pulumi.StringOutput)
}

type TagArrayOutput struct{ *pulumi.OutputState }

func (TagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]Tag)(nil)).Elem()
}

func (o TagArrayOutput) ToTagArrayOutput() TagArrayOutput {
	return o
}

func (o TagArrayOutput) ToTagArrayOutputWithContext(ctx context.Context) TagArrayOutput {
	return o
}

func (o TagArrayOutput) Index(i pulumi.IntInput) TagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) Tag {
		return vs[0].([]Tag)[vs[1].(int)]
	}).(TagOutput)
}

func init() {
	pulumi.RegisterOutputType(AutoscalingCreationPolicyOutput{})
	pulumi.RegisterOutputType(AutoscalingCreationPolicyPtrOutput{})
	pulumi.RegisterOutputType(CreationPolicyOutput{})
	pulumi.RegisterOutputType(CreationPolicyPtrOutput{})
	pulumi.RegisterOutputType(ResourceSignalOutput{})
	pulumi.RegisterOutputType(ResourceSignalPtrOutput{})
	pulumi.RegisterOutputType(TagOutput{})
	pulumi.RegisterOutputType(TagArrayOutput{})
}
