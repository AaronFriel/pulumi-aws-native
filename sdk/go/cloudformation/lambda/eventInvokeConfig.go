// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package lambda

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-eventinvokeconfig.html
type EventInvokeConfig struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes EventInvokeConfigAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties EventInvokeConfigPropertiesOutput `pulumi:"properties"`
}

// NewEventInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewEventInvokeConfig(ctx *pulumi.Context,
	name string, args *EventInvokeConfigArgs, opts ...pulumi.ResourceOption) (*EventInvokeConfig, error) {
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &EventInvokeConfigArgs{}
	}
	var resource EventInvokeConfig
	err := ctx.RegisterResource("cloudformation:Lambda:EventInvokeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEventInvokeConfig gets an existing EventInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEventInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EventInvokeConfigState, opts ...pulumi.ResourceOption) (*EventInvokeConfig, error) {
	var resource EventInvokeConfig
	err := ctx.ReadResource("cloudformation:Lambda:EventInvokeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EventInvokeConfig resources.
type eventInvokeConfigState struct {
	// The attributes associated with the resource
	Attributes *EventInvokeConfigAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *EventInvokeConfigProperties `pulumi:"properties"`
}

type EventInvokeConfigState struct {
	// The attributes associated with the resource
	Attributes EventInvokeConfigAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties EventInvokeConfigPropertiesPtrInput
}

func (EventInvokeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*eventInvokeConfigState)(nil)).Elem()
}

type eventInvokeConfigArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties EventInvokeConfigProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a EventInvokeConfig resource.
type EventInvokeConfigArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties EventInvokeConfigPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (EventInvokeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*eventInvokeConfigArgs)(nil)).Elem()
}
