// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package wafv2

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-wafv2-webaclassociation.html
type WebACLAssociation struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes WebACLAssociationAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties WebACLAssociationPropertiesOutput `pulumi:"properties"`
}

// NewWebACLAssociation registers a new resource with the given unique name, arguments, and options.
func NewWebACLAssociation(ctx *pulumi.Context,
	name string, args *WebACLAssociationArgs, opts ...pulumi.ResourceOption) (*WebACLAssociation, error) {
	if args == nil || args.Properties == nil {
		return nil, errors.New("missing required argument 'Properties'")
	}
	if args == nil {
		args = &WebACLAssociationArgs{}
	}
	var resource WebACLAssociation
	err := ctx.RegisterResource("cloudformation:WAFv2:WebACLAssociation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWebACLAssociation gets an existing WebACLAssociation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWebACLAssociation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WebACLAssociationState, opts ...pulumi.ResourceOption) (*WebACLAssociation, error) {
	var resource WebACLAssociation
	err := ctx.ReadResource("cloudformation:WAFv2:WebACLAssociation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WebACLAssociation resources.
type webACLAssociationState struct {
	// The attributes associated with the resource
	Attributes *WebACLAssociationAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *WebACLAssociationProperties `pulumi:"properties"`
}

type WebACLAssociationState struct {
	// The attributes associated with the resource
	Attributes WebACLAssociationAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties WebACLAssociationPropertiesPtrInput
}

func (WebACLAssociationState) ElementType() reflect.Type {
	return reflect.TypeOf((*webACLAssociationState)(nil)).Elem()
}

type webACLAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties WebACLAssociationProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a WebACLAssociation resource.
type WebACLAssociationArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties WebACLAssociationPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (WebACLAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*webACLAssociationArgs)(nil)).Elem()
}
