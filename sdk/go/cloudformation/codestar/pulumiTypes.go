// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codestar

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type GitHubRepositoryAttributes struct {
}

// GitHubRepositoryAttributesInput is an input type that accepts GitHubRepositoryAttributesArgs and GitHubRepositoryAttributesOutput values.
// You can construct a concrete instance of `GitHubRepositoryAttributesInput` via:
//
//          GitHubRepositoryAttributesArgs{...}
type GitHubRepositoryAttributesInput interface {
	pulumi.Input

	ToGitHubRepositoryAttributesOutput() GitHubRepositoryAttributesOutput
	ToGitHubRepositoryAttributesOutputWithContext(context.Context) GitHubRepositoryAttributesOutput
}

type GitHubRepositoryAttributesArgs struct {
}

func (GitHubRepositoryAttributesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryAttributes)(nil)).Elem()
}

func (i GitHubRepositoryAttributesArgs) ToGitHubRepositoryAttributesOutput() GitHubRepositoryAttributesOutput {
	return i.ToGitHubRepositoryAttributesOutputWithContext(context.Background())
}

func (i GitHubRepositoryAttributesArgs) ToGitHubRepositoryAttributesOutputWithContext(ctx context.Context) GitHubRepositoryAttributesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryAttributesOutput)
}

func (i GitHubRepositoryAttributesArgs) ToGitHubRepositoryAttributesPtrOutput() GitHubRepositoryAttributesPtrOutput {
	return i.ToGitHubRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i GitHubRepositoryAttributesArgs) ToGitHubRepositoryAttributesPtrOutputWithContext(ctx context.Context) GitHubRepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryAttributesOutput).ToGitHubRepositoryAttributesPtrOutputWithContext(ctx)
}

// GitHubRepositoryAttributesPtrInput is an input type that accepts GitHubRepositoryAttributesArgs, GitHubRepositoryAttributesPtr and GitHubRepositoryAttributesPtrOutput values.
// You can construct a concrete instance of `GitHubRepositoryAttributesPtrInput` via:
//
//          GitHubRepositoryAttributesArgs{...}
//
//  or:
//
//          nil
type GitHubRepositoryAttributesPtrInput interface {
	pulumi.Input

	ToGitHubRepositoryAttributesPtrOutput() GitHubRepositoryAttributesPtrOutput
	ToGitHubRepositoryAttributesPtrOutputWithContext(context.Context) GitHubRepositoryAttributesPtrOutput
}

type gitHubRepositoryAttributesPtrType GitHubRepositoryAttributesArgs

func GitHubRepositoryAttributesPtr(v *GitHubRepositoryAttributesArgs) GitHubRepositoryAttributesPtrInput {
	return (*gitHubRepositoryAttributesPtrType)(v)
}

func (*gitHubRepositoryAttributesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryAttributes)(nil)).Elem()
}

func (i *gitHubRepositoryAttributesPtrType) ToGitHubRepositoryAttributesPtrOutput() GitHubRepositoryAttributesPtrOutput {
	return i.ToGitHubRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (i *gitHubRepositoryAttributesPtrType) ToGitHubRepositoryAttributesPtrOutputWithContext(ctx context.Context) GitHubRepositoryAttributesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryAttributesPtrOutput)
}

type GitHubRepositoryAttributesOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryAttributesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryAttributes)(nil)).Elem()
}

func (o GitHubRepositoryAttributesOutput) ToGitHubRepositoryAttributesOutput() GitHubRepositoryAttributesOutput {
	return o
}

func (o GitHubRepositoryAttributesOutput) ToGitHubRepositoryAttributesOutputWithContext(ctx context.Context) GitHubRepositoryAttributesOutput {
	return o
}

func (o GitHubRepositoryAttributesOutput) ToGitHubRepositoryAttributesPtrOutput() GitHubRepositoryAttributesPtrOutput {
	return o.ToGitHubRepositoryAttributesPtrOutputWithContext(context.Background())
}

func (o GitHubRepositoryAttributesOutput) ToGitHubRepositoryAttributesPtrOutputWithContext(ctx context.Context) GitHubRepositoryAttributesPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryAttributes) *GitHubRepositoryAttributes {
		return &v
	}).(GitHubRepositoryAttributesPtrOutput)
}

type GitHubRepositoryAttributesPtrOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryAttributesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryAttributes)(nil)).Elem()
}

func (o GitHubRepositoryAttributesPtrOutput) ToGitHubRepositoryAttributesPtrOutput() GitHubRepositoryAttributesPtrOutput {
	return o
}

func (o GitHubRepositoryAttributesPtrOutput) ToGitHubRepositoryAttributesPtrOutputWithContext(ctx context.Context) GitHubRepositoryAttributesPtrOutput {
	return o
}

func (o GitHubRepositoryAttributesPtrOutput) Elem() GitHubRepositoryAttributesOutput {
	return o.ApplyT(func(v *GitHubRepositoryAttributes) GitHubRepositoryAttributes { return *v }).(GitHubRepositoryAttributesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html
type GitHubRepositoryCode struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html#cfn-codestar-githubrepository-code-s3
	S3 GitHubRepositoryS3 `pulumi:"S3"`
}

// GitHubRepositoryCodeInput is an input type that accepts GitHubRepositoryCodeArgs and GitHubRepositoryCodeOutput values.
// You can construct a concrete instance of `GitHubRepositoryCodeInput` via:
//
//          GitHubRepositoryCodeArgs{...}
type GitHubRepositoryCodeInput interface {
	pulumi.Input

	ToGitHubRepositoryCodeOutput() GitHubRepositoryCodeOutput
	ToGitHubRepositoryCodeOutputWithContext(context.Context) GitHubRepositoryCodeOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html
type GitHubRepositoryCodeArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html#cfn-codestar-githubrepository-code-s3
	S3 GitHubRepositoryS3Input `pulumi:"S3"`
}

func (GitHubRepositoryCodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryCode)(nil)).Elem()
}

func (i GitHubRepositoryCodeArgs) ToGitHubRepositoryCodeOutput() GitHubRepositoryCodeOutput {
	return i.ToGitHubRepositoryCodeOutputWithContext(context.Background())
}

func (i GitHubRepositoryCodeArgs) ToGitHubRepositoryCodeOutputWithContext(ctx context.Context) GitHubRepositoryCodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryCodeOutput)
}

func (i GitHubRepositoryCodeArgs) ToGitHubRepositoryCodePtrOutput() GitHubRepositoryCodePtrOutput {
	return i.ToGitHubRepositoryCodePtrOutputWithContext(context.Background())
}

func (i GitHubRepositoryCodeArgs) ToGitHubRepositoryCodePtrOutputWithContext(ctx context.Context) GitHubRepositoryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryCodeOutput).ToGitHubRepositoryCodePtrOutputWithContext(ctx)
}

// GitHubRepositoryCodePtrInput is an input type that accepts GitHubRepositoryCodeArgs, GitHubRepositoryCodePtr and GitHubRepositoryCodePtrOutput values.
// You can construct a concrete instance of `GitHubRepositoryCodePtrInput` via:
//
//          GitHubRepositoryCodeArgs{...}
//
//  or:
//
//          nil
type GitHubRepositoryCodePtrInput interface {
	pulumi.Input

	ToGitHubRepositoryCodePtrOutput() GitHubRepositoryCodePtrOutput
	ToGitHubRepositoryCodePtrOutputWithContext(context.Context) GitHubRepositoryCodePtrOutput
}

type gitHubRepositoryCodePtrType GitHubRepositoryCodeArgs

func GitHubRepositoryCodePtr(v *GitHubRepositoryCodeArgs) GitHubRepositoryCodePtrInput {
	return (*gitHubRepositoryCodePtrType)(v)
}

func (*gitHubRepositoryCodePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryCode)(nil)).Elem()
}

func (i *gitHubRepositoryCodePtrType) ToGitHubRepositoryCodePtrOutput() GitHubRepositoryCodePtrOutput {
	return i.ToGitHubRepositoryCodePtrOutputWithContext(context.Background())
}

func (i *gitHubRepositoryCodePtrType) ToGitHubRepositoryCodePtrOutputWithContext(ctx context.Context) GitHubRepositoryCodePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html
type GitHubRepositoryCodeOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryCodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryCode)(nil)).Elem()
}

func (o GitHubRepositoryCodeOutput) ToGitHubRepositoryCodeOutput() GitHubRepositoryCodeOutput {
	return o
}

func (o GitHubRepositoryCodeOutput) ToGitHubRepositoryCodeOutputWithContext(ctx context.Context) GitHubRepositoryCodeOutput {
	return o
}

func (o GitHubRepositoryCodeOutput) ToGitHubRepositoryCodePtrOutput() GitHubRepositoryCodePtrOutput {
	return o.ToGitHubRepositoryCodePtrOutputWithContext(context.Background())
}

func (o GitHubRepositoryCodeOutput) ToGitHubRepositoryCodePtrOutputWithContext(ctx context.Context) GitHubRepositoryCodePtrOutput {
	return o.ApplyT(func(v GitHubRepositoryCode) *GitHubRepositoryCode {
		return &v
	}).(GitHubRepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html#cfn-codestar-githubrepository-code-s3
func (o GitHubRepositoryCodeOutput) S3() GitHubRepositoryS3Output {
	return o.ApplyT(func(v GitHubRepositoryCode) GitHubRepositoryS3 { return v.S3 }).(GitHubRepositoryS3Output)
}

type GitHubRepositoryCodePtrOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryCodePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryCode)(nil)).Elem()
}

func (o GitHubRepositoryCodePtrOutput) ToGitHubRepositoryCodePtrOutput() GitHubRepositoryCodePtrOutput {
	return o
}

func (o GitHubRepositoryCodePtrOutput) ToGitHubRepositoryCodePtrOutputWithContext(ctx context.Context) GitHubRepositoryCodePtrOutput {
	return o
}

func (o GitHubRepositoryCodePtrOutput) Elem() GitHubRepositoryCodeOutput {
	return o.ApplyT(func(v *GitHubRepositoryCode) GitHubRepositoryCode { return *v }).(GitHubRepositoryCodeOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-code.html#cfn-codestar-githubrepository-code-s3
func (o GitHubRepositoryCodePtrOutput) S3() GitHubRepositoryS3PtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryCode) *GitHubRepositoryS3 {
		if v == nil {
			return nil
		}
		return &v.S3
	}).(GitHubRepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
type GitHubRepositoryProperties struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code *GitHubRepositoryCode `pulumi:"Code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn *string `pulumi:"ConnectionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues *bool `pulumi:"EnableIssues"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate *bool `pulumi:"IsPrivate"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken *string `pulumi:"RepositoryAccessToken"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription *string `pulumi:"RepositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName string `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner string `pulumi:"RepositoryOwner"`
}

// GitHubRepositoryPropertiesInput is an input type that accepts GitHubRepositoryPropertiesArgs and GitHubRepositoryPropertiesOutput values.
// You can construct a concrete instance of `GitHubRepositoryPropertiesInput` via:
//
//          GitHubRepositoryPropertiesArgs{...}
type GitHubRepositoryPropertiesInput interface {
	pulumi.Input

	ToGitHubRepositoryPropertiesOutput() GitHubRepositoryPropertiesOutput
	ToGitHubRepositoryPropertiesOutputWithContext(context.Context) GitHubRepositoryPropertiesOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
type GitHubRepositoryPropertiesArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code GitHubRepositoryCodePtrInput `pulumi:"Code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn pulumi.StringPtrInput `pulumi:"ConnectionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues pulumi.BoolPtrInput `pulumi:"EnableIssues"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate pulumi.BoolPtrInput `pulumi:"IsPrivate"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken pulumi.StringPtrInput `pulumi:"RepositoryAccessToken"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription pulumi.StringPtrInput `pulumi:"RepositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName pulumi.StringInput `pulumi:"RepositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner pulumi.StringInput `pulumi:"RepositoryOwner"`
}

func (GitHubRepositoryPropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryProperties)(nil)).Elem()
}

func (i GitHubRepositoryPropertiesArgs) ToGitHubRepositoryPropertiesOutput() GitHubRepositoryPropertiesOutput {
	return i.ToGitHubRepositoryPropertiesOutputWithContext(context.Background())
}

func (i GitHubRepositoryPropertiesArgs) ToGitHubRepositoryPropertiesOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryPropertiesOutput)
}

func (i GitHubRepositoryPropertiesArgs) ToGitHubRepositoryPropertiesPtrOutput() GitHubRepositoryPropertiesPtrOutput {
	return i.ToGitHubRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i GitHubRepositoryPropertiesArgs) ToGitHubRepositoryPropertiesPtrOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryPropertiesOutput).ToGitHubRepositoryPropertiesPtrOutputWithContext(ctx)
}

// GitHubRepositoryPropertiesPtrInput is an input type that accepts GitHubRepositoryPropertiesArgs, GitHubRepositoryPropertiesPtr and GitHubRepositoryPropertiesPtrOutput values.
// You can construct a concrete instance of `GitHubRepositoryPropertiesPtrInput` via:
//
//          GitHubRepositoryPropertiesArgs{...}
//
//  or:
//
//          nil
type GitHubRepositoryPropertiesPtrInput interface {
	pulumi.Input

	ToGitHubRepositoryPropertiesPtrOutput() GitHubRepositoryPropertiesPtrOutput
	ToGitHubRepositoryPropertiesPtrOutputWithContext(context.Context) GitHubRepositoryPropertiesPtrOutput
}

type gitHubRepositoryPropertiesPtrType GitHubRepositoryPropertiesArgs

func GitHubRepositoryPropertiesPtr(v *GitHubRepositoryPropertiesArgs) GitHubRepositoryPropertiesPtrInput {
	return (*gitHubRepositoryPropertiesPtrType)(v)
}

func (*gitHubRepositoryPropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryProperties)(nil)).Elem()
}

func (i *gitHubRepositoryPropertiesPtrType) ToGitHubRepositoryPropertiesPtrOutput() GitHubRepositoryPropertiesPtrOutput {
	return i.ToGitHubRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (i *gitHubRepositoryPropertiesPtrType) ToGitHubRepositoryPropertiesPtrOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
type GitHubRepositoryPropertiesOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryPropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryProperties)(nil)).Elem()
}

func (o GitHubRepositoryPropertiesOutput) ToGitHubRepositoryPropertiesOutput() GitHubRepositoryPropertiesOutput {
	return o
}

func (o GitHubRepositoryPropertiesOutput) ToGitHubRepositoryPropertiesOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesOutput {
	return o
}

func (o GitHubRepositoryPropertiesOutput) ToGitHubRepositoryPropertiesPtrOutput() GitHubRepositoryPropertiesPtrOutput {
	return o.ToGitHubRepositoryPropertiesPtrOutputWithContext(context.Background())
}

func (o GitHubRepositoryPropertiesOutput) ToGitHubRepositoryPropertiesPtrOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *GitHubRepositoryProperties {
		return &v
	}).(GitHubRepositoryPropertiesPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
func (o GitHubRepositoryPropertiesOutput) Code() GitHubRepositoryCodePtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *GitHubRepositoryCode { return v.Code }).(GitHubRepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
func (o GitHubRepositoryPropertiesOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *string { return v.ConnectionArn }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
func (o GitHubRepositoryPropertiesOutput) EnableIssues() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *bool { return v.EnableIssues }).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
func (o GitHubRepositoryPropertiesOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *bool { return v.IsPrivate }).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
func (o GitHubRepositoryPropertiesOutput) RepositoryAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *string { return v.RepositoryAccessToken }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
func (o GitHubRepositoryPropertiesOutput) RepositoryDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) *string { return v.RepositoryDescription }).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
func (o GitHubRepositoryPropertiesOutput) RepositoryName() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) string { return v.RepositoryName }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
func (o GitHubRepositoryPropertiesOutput) RepositoryOwner() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubRepositoryProperties) string { return v.RepositoryOwner }).(pulumi.StringOutput)
}

type GitHubRepositoryPropertiesPtrOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryPropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryProperties)(nil)).Elem()
}

func (o GitHubRepositoryPropertiesPtrOutput) ToGitHubRepositoryPropertiesPtrOutput() GitHubRepositoryPropertiesPtrOutput {
	return o
}

func (o GitHubRepositoryPropertiesPtrOutput) ToGitHubRepositoryPropertiesPtrOutputWithContext(ctx context.Context) GitHubRepositoryPropertiesPtrOutput {
	return o
}

func (o GitHubRepositoryPropertiesPtrOutput) Elem() GitHubRepositoryPropertiesOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) GitHubRepositoryProperties { return *v }).(GitHubRepositoryPropertiesOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
func (o GitHubRepositoryPropertiesPtrOutput) Code() GitHubRepositoryCodePtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *GitHubRepositoryCode {
		if v == nil {
			return nil
		}
		return v.Code
	}).(GitHubRepositoryCodePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
func (o GitHubRepositoryPropertiesPtrOutput) ConnectionArn() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return v.ConnectionArn
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
func (o GitHubRepositoryPropertiesPtrOutput) EnableIssues() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *bool {
		if v == nil {
			return nil
		}
		return v.EnableIssues
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
func (o GitHubRepositoryPropertiesPtrOutput) IsPrivate() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *bool {
		if v == nil {
			return nil
		}
		return v.IsPrivate
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
func (o GitHubRepositoryPropertiesPtrOutput) RepositoryAccessToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryAccessToken
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
func (o GitHubRepositoryPropertiesPtrOutput) RepositoryDescription() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return v.RepositoryDescription
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
func (o GitHubRepositoryPropertiesPtrOutput) RepositoryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryName
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
func (o GitHubRepositoryPropertiesPtrOutput) RepositoryOwner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryProperties) *string {
		if v == nil {
			return nil
		}
		return &v.RepositoryOwner
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html
type GitHubRepositoryS3 struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-bucket
	Bucket string `pulumi:"Bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-key
	Key string `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-objectversion
	ObjectVersion *string `pulumi:"ObjectVersion"`
}

// GitHubRepositoryS3Input is an input type that accepts GitHubRepositoryS3Args and GitHubRepositoryS3Output values.
// You can construct a concrete instance of `GitHubRepositoryS3Input` via:
//
//          GitHubRepositoryS3Args{...}
type GitHubRepositoryS3Input interface {
	pulumi.Input

	ToGitHubRepositoryS3Output() GitHubRepositoryS3Output
	ToGitHubRepositoryS3OutputWithContext(context.Context) GitHubRepositoryS3Output
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html
type GitHubRepositoryS3Args struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-bucket
	Bucket pulumi.StringInput `pulumi:"Bucket"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-key
	Key pulumi.StringInput `pulumi:"Key"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-objectversion
	ObjectVersion pulumi.StringPtrInput `pulumi:"ObjectVersion"`
}

func (GitHubRepositoryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryS3)(nil)).Elem()
}

func (i GitHubRepositoryS3Args) ToGitHubRepositoryS3Output() GitHubRepositoryS3Output {
	return i.ToGitHubRepositoryS3OutputWithContext(context.Background())
}

func (i GitHubRepositoryS3Args) ToGitHubRepositoryS3OutputWithContext(ctx context.Context) GitHubRepositoryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryS3Output)
}

func (i GitHubRepositoryS3Args) ToGitHubRepositoryS3PtrOutput() GitHubRepositoryS3PtrOutput {
	return i.ToGitHubRepositoryS3PtrOutputWithContext(context.Background())
}

func (i GitHubRepositoryS3Args) ToGitHubRepositoryS3PtrOutputWithContext(ctx context.Context) GitHubRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryS3Output).ToGitHubRepositoryS3PtrOutputWithContext(ctx)
}

// GitHubRepositoryS3PtrInput is an input type that accepts GitHubRepositoryS3Args, GitHubRepositoryS3Ptr and GitHubRepositoryS3PtrOutput values.
// You can construct a concrete instance of `GitHubRepositoryS3PtrInput` via:
//
//          GitHubRepositoryS3Args{...}
//
//  or:
//
//          nil
type GitHubRepositoryS3PtrInput interface {
	pulumi.Input

	ToGitHubRepositoryS3PtrOutput() GitHubRepositoryS3PtrOutput
	ToGitHubRepositoryS3PtrOutputWithContext(context.Context) GitHubRepositoryS3PtrOutput
}

type gitHubRepositoryS3PtrType GitHubRepositoryS3Args

func GitHubRepositoryS3Ptr(v *GitHubRepositoryS3Args) GitHubRepositoryS3PtrInput {
	return (*gitHubRepositoryS3PtrType)(v)
}

func (*gitHubRepositoryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryS3)(nil)).Elem()
}

func (i *gitHubRepositoryS3PtrType) ToGitHubRepositoryS3PtrOutput() GitHubRepositoryS3PtrOutput {
	return i.ToGitHubRepositoryS3PtrOutputWithContext(context.Background())
}

func (i *gitHubRepositoryS3PtrType) ToGitHubRepositoryS3PtrOutputWithContext(ctx context.Context) GitHubRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html
type GitHubRepositoryS3Output struct{ *pulumi.OutputState }

func (GitHubRepositoryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepositoryS3)(nil)).Elem()
}

func (o GitHubRepositoryS3Output) ToGitHubRepositoryS3Output() GitHubRepositoryS3Output {
	return o
}

func (o GitHubRepositoryS3Output) ToGitHubRepositoryS3OutputWithContext(ctx context.Context) GitHubRepositoryS3Output {
	return o
}

func (o GitHubRepositoryS3Output) ToGitHubRepositoryS3PtrOutput() GitHubRepositoryS3PtrOutput {
	return o.ToGitHubRepositoryS3PtrOutputWithContext(context.Background())
}

func (o GitHubRepositoryS3Output) ToGitHubRepositoryS3PtrOutputWithContext(ctx context.Context) GitHubRepositoryS3PtrOutput {
	return o.ApplyT(func(v GitHubRepositoryS3) *GitHubRepositoryS3 {
		return &v
	}).(GitHubRepositoryS3PtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-bucket
func (o GitHubRepositoryS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubRepositoryS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-key
func (o GitHubRepositoryS3Output) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GitHubRepositoryS3) string { return v.Key }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-objectversion
func (o GitHubRepositoryS3Output) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GitHubRepositoryS3) *string { return v.ObjectVersion }).(pulumi.StringPtrOutput)
}

type GitHubRepositoryS3PtrOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GitHubRepositoryS3)(nil)).Elem()
}

func (o GitHubRepositoryS3PtrOutput) ToGitHubRepositoryS3PtrOutput() GitHubRepositoryS3PtrOutput {
	return o
}

func (o GitHubRepositoryS3PtrOutput) ToGitHubRepositoryS3PtrOutputWithContext(ctx context.Context) GitHubRepositoryS3PtrOutput {
	return o
}

func (o GitHubRepositoryS3PtrOutput) Elem() GitHubRepositoryS3Output {
	return o.ApplyT(func(v *GitHubRepositoryS3) GitHubRepositoryS3 { return *v }).(GitHubRepositoryS3Output)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-bucket
func (o GitHubRepositoryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-key
func (o GitHubRepositoryS3PtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-codestar-githubrepository-s3.html#cfn-codestar-githubrepository-s3-objectversion
func (o GitHubRepositoryS3PtrOutput) ObjectVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GitHubRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.ObjectVersion
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GitHubRepositoryAttributesOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryAttributesPtrOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryCodeOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryCodePtrOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryPropertiesOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryPropertiesPtrOutput{})
	pulumi.RegisterOutputType(GitHubRepositoryS3Output{})
	pulumi.RegisterOutputType(GitHubRepositoryS3PtrOutput{})
}
