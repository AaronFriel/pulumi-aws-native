// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package eventschemas

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-eventschemas-discoverer.html
type Discoverer struct {
	pulumi.CustomResourceState

	// The attributes associated with the resource
	Attributes DiscovererAttributesOutput `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrOutput `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata pulumi.AnyOutput `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DiscovererPropertiesOutput `pulumi:"properties"`
}

// NewDiscoverer registers a new resource with the given unique name, arguments, and options.
func NewDiscoverer(ctx *pulumi.Context,
	name string, args *DiscovererArgs, opts ...pulumi.ResourceOption) (*Discoverer, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Properties == nil {
		return nil, errors.New("invalid value for required argument 'Properties'")
	}
	var resource Discoverer
	err := ctx.RegisterResource("cloudformation:EventSchemas:Discoverer", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDiscoverer gets an existing Discoverer resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDiscoverer(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DiscovererState, opts ...pulumi.ResourceOption) (*Discoverer, error) {
	var resource Discoverer
	err := ctx.ReadResource("cloudformation:EventSchemas:Discoverer", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Discoverer resources.
type discovererState struct {
	// The attributes associated with the resource
	Attributes *DiscovererAttributes `pulumi:"attributes"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties *DiscovererProperties `pulumi:"properties"`
}

type DiscovererState struct {
	// The attributes associated with the resource
	Attributes DiscovererAttributesPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DiscovererPropertiesPtrInput
}

func (DiscovererState) ElementType() reflect.Type {
	return reflect.TypeOf((*discovererState)(nil)).Elem()
}

type discovererArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy *string `pulumi:"deletionPolicy"`
	// An explicit logical ID for the resource
	LogicalId *string `pulumi:"logicalId"`
	// Arbitrary structured data associated with the resource
	Metadata interface{} `pulumi:"metadata"`
	// The input properties associated with the resource
	Properties DiscovererProperties `pulumi:"properties"`
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy *string `pulumi:"updateReplacePolicy"`
}

// The set of arguments for constructing a Discoverer resource.
type DiscovererArgs struct {
	// With the deletionPolicy attribute you can preserve or (in some cases) backup a resource when its stack is deleted. You can specify a deletionPolicy attribute for each resource that you want to control. If a resource has no deletionPolicy attribute, AWS CloudFormation deletes the resource by default.
	DeletionPolicy pulumi.StringPtrInput
	// An explicit logical ID for the resource
	LogicalId pulumi.StringPtrInput
	// Arbitrary structured data associated with the resource
	Metadata pulumi.Input
	// The input properties associated with the resource
	Properties DiscovererPropertiesInput
	// Use the updateReplacePolicy attribute to retain or (in some cases) backup the existing physical instance of a resource when it is replaced during a stack update operation.
	UpdateReplacePolicy pulumi.StringPtrInput
}

func (DiscovererArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*discovererArgs)(nil)).Elem()
}

type DiscovererInput interface {
	pulumi.Input

	ToDiscovererOutput() DiscovererOutput
	ToDiscovererOutputWithContext(ctx context.Context) DiscovererOutput
}

func (*Discoverer) ElementType() reflect.Type {
	return reflect.TypeOf((*Discoverer)(nil))
}

func (i *Discoverer) ToDiscovererOutput() DiscovererOutput {
	return i.ToDiscovererOutputWithContext(context.Background())
}

func (i *Discoverer) ToDiscovererOutputWithContext(ctx context.Context) DiscovererOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DiscovererOutput)
}

type DiscovererOutput struct {
	*pulumi.OutputState
}

func (DiscovererOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*Discoverer)(nil))
}

func (o DiscovererOutput) ToDiscovererOutput() DiscovererOutput {
	return o
}

func (o DiscovererOutput) ToDiscovererOutputWithContext(ctx context.Context) DiscovererOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DiscovererOutput{})
}
