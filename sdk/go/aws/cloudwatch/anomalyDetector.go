// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cloudwatch

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html
type AnomalyDetector struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration
	Configuration AnomalyDetectorConfigurationPtrOutput `pulumi:"configuration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions
	Dimensions AnomalyDetectorDimensionArrayOutput `pulumi:"dimensions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname
	MetricName pulumi.StringOutput `pulumi:"metricName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace
	Namespace pulumi.StringOutput `pulumi:"namespace"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat
	Stat pulumi.StringOutput `pulumi:"stat"`
}

// NewAnomalyDetector registers a new resource with the given unique name, arguments, and options.
func NewAnomalyDetector(ctx *pulumi.Context,
	name string, args *AnomalyDetectorArgs, opts ...pulumi.ResourceOption) (*AnomalyDetector, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.MetricName == nil {
		return nil, errors.New("invalid value for required argument 'MetricName'")
	}
	if args.Namespace == nil {
		return nil, errors.New("invalid value for required argument 'Namespace'")
	}
	if args.Stat == nil {
		return nil, errors.New("invalid value for required argument 'Stat'")
	}
	var resource AnomalyDetector
	err := ctx.RegisterResource("aws-native:cloudwatch:AnomalyDetector", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAnomalyDetector gets an existing AnomalyDetector resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAnomalyDetector(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AnomalyDetectorState, opts ...pulumi.ResourceOption) (*AnomalyDetector, error) {
	var resource AnomalyDetector
	err := ctx.ReadResource("aws-native:cloudwatch:AnomalyDetector", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AnomalyDetector resources.
type anomalyDetectorState struct {
}

type AnomalyDetectorState struct {
}

func (AnomalyDetectorState) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyDetectorState)(nil)).Elem()
}

type anomalyDetectorArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration
	Configuration *AnomalyDetectorConfiguration `pulumi:"configuration"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions
	Dimensions []AnomalyDetectorDimension `pulumi:"dimensions"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname
	MetricName string `pulumi:"metricName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace
	Namespace string `pulumi:"namespace"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat
	Stat string `pulumi:"stat"`
}

// The set of arguments for constructing a AnomalyDetector resource.
type AnomalyDetectorArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-configuration
	Configuration AnomalyDetectorConfigurationPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-dimensions
	Dimensions AnomalyDetectorDimensionArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-metricname
	MetricName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-namespace
	Namespace pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-anomalydetector.html#cfn-cloudwatch-anomalydetector-stat
	Stat pulumi.StringInput
}

func (AnomalyDetectorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*anomalyDetectorArgs)(nil)).Elem()
}

type AnomalyDetectorInput interface {
	pulumi.Input

	ToAnomalyDetectorOutput() AnomalyDetectorOutput
	ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput
}

func (*AnomalyDetector) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyDetector)(nil))
}

func (i *AnomalyDetector) ToAnomalyDetectorOutput() AnomalyDetectorOutput {
	return i.ToAnomalyDetectorOutputWithContext(context.Background())
}

func (i *AnomalyDetector) ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AnomalyDetectorOutput)
}

type AnomalyDetectorOutput struct{ *pulumi.OutputState }

func (AnomalyDetectorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AnomalyDetector)(nil))
}

func (o AnomalyDetectorOutput) ToAnomalyDetectorOutput() AnomalyDetectorOutput {
	return o
}

func (o AnomalyDetectorOutput) ToAnomalyDetectorOutputWithContext(ctx context.Context) AnomalyDetectorOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(AnomalyDetectorOutput{})
}
