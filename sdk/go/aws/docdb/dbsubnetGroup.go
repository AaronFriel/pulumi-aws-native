// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package docdb

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html
type DBSubnetGroup struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription
	DBSubnetGroupDescription pulumi.StringOutput `pulumi:"dBSubnetGroupDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname
	DBSubnetGroupName pulumi.StringPtrOutput `pulumi:"dBSubnetGroupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids
	SubnetIds pulumi.StringArrayOutput `pulumi:"subnetIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
}

// NewDBSubnetGroup registers a new resource with the given unique name, arguments, and options.
func NewDBSubnetGroup(ctx *pulumi.Context,
	name string, args *DBSubnetGroupArgs, opts ...pulumi.ResourceOption) (*DBSubnetGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DBSubnetGroupDescription == nil {
		return nil, errors.New("invalid value for required argument 'DBSubnetGroupDescription'")
	}
	if args.SubnetIds == nil {
		return nil, errors.New("invalid value for required argument 'SubnetIds'")
	}
	var resource DBSubnetGroup
	err := ctx.RegisterResource("aws-native:docdb:DBSubnetGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDBSubnetGroup gets an existing DBSubnetGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDBSubnetGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DBSubnetGroupState, opts ...pulumi.ResourceOption) (*DBSubnetGroup, error) {
	var resource DBSubnetGroup
	err := ctx.ReadResource("aws-native:docdb:DBSubnetGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DBSubnetGroup resources.
type dbsubnetGroupState struct {
}

type DBSubnetGroupState struct {
}

func (DBSubnetGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*dbsubnetGroupState)(nil)).Elem()
}

type dbsubnetGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription
	DBSubnetGroupDescription string `pulumi:"dBSubnetGroupDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname
	DBSubnetGroupName *string `pulumi:"dBSubnetGroupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids
	SubnetIds []string `pulumi:"subnetIds"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags
	Tags []aws.Tag `pulumi:"tags"`
}

// The set of arguments for constructing a DBSubnetGroup resource.
type DBSubnetGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription
	DBSubnetGroupDescription pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname
	DBSubnetGroupName pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids
	SubnetIds pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags
	Tags aws.TagArrayInput
}

func (DBSubnetGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dbsubnetGroupArgs)(nil)).Elem()
}

type DBSubnetGroupInput interface {
	pulumi.Input

	ToDBSubnetGroupOutput() DBSubnetGroupOutput
	ToDBSubnetGroupOutputWithContext(ctx context.Context) DBSubnetGroupOutput
}

func (*DBSubnetGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSubnetGroup)(nil))
}

func (i *DBSubnetGroup) ToDBSubnetGroupOutput() DBSubnetGroupOutput {
	return i.ToDBSubnetGroupOutputWithContext(context.Background())
}

func (i *DBSubnetGroup) ToDBSubnetGroupOutputWithContext(ctx context.Context) DBSubnetGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DBSubnetGroupOutput)
}

type DBSubnetGroupOutput struct{ *pulumi.OutputState }

func (DBSubnetGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DBSubnetGroup)(nil))
}

func (o DBSubnetGroupOutput) ToDBSubnetGroupOutput() DBSubnetGroupOutput {
	return o
}

func (o DBSubnetGroupOutput) ToDBSubnetGroupOutputWithContext(ctx context.Context) DBSubnetGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(DBSubnetGroupOutput{})
}
