// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package codestar

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html
type GitHubRepository struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code GitHubRepositoryCodePtrOutput `pulumi:"code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn pulumi.StringPtrOutput `pulumi:"connectionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues pulumi.BoolPtrOutput `pulumi:"enableIssues"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate pulumi.BoolPtrOutput `pulumi:"isPrivate"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken pulumi.StringPtrOutput `pulumi:"repositoryAccessToken"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription pulumi.StringPtrOutput `pulumi:"repositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName pulumi.StringOutput `pulumi:"repositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner pulumi.StringOutput `pulumi:"repositoryOwner"`
}

// NewGitHubRepository registers a new resource with the given unique name, arguments, and options.
func NewGitHubRepository(ctx *pulumi.Context,
	name string, args *GitHubRepositoryArgs, opts ...pulumi.ResourceOption) (*GitHubRepository, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RepositoryName == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryName'")
	}
	if args.RepositoryOwner == nil {
		return nil, errors.New("invalid value for required argument 'RepositoryOwner'")
	}
	var resource GitHubRepository
	err := ctx.RegisterResource("aws-native:codestar:GitHubRepository", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGitHubRepository gets an existing GitHubRepository resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGitHubRepository(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GitHubRepositoryState, opts ...pulumi.ResourceOption) (*GitHubRepository, error) {
	var resource GitHubRepository
	err := ctx.ReadResource("aws-native:codestar:GitHubRepository", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GitHubRepository resources.
type gitHubRepositoryState struct {
}

type GitHubRepositoryState struct {
}

func (GitHubRepositoryState) ElementType() reflect.Type {
	return reflect.TypeOf((*gitHubRepositoryState)(nil)).Elem()
}

type gitHubRepositoryArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code *GitHubRepositoryCode `pulumi:"code"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn *string `pulumi:"connectionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues *bool `pulumi:"enableIssues"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate *bool `pulumi:"isPrivate"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken *string `pulumi:"repositoryAccessToken"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription *string `pulumi:"repositoryDescription"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName string `pulumi:"repositoryName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner string `pulumi:"repositoryOwner"`
}

// The set of arguments for constructing a GitHubRepository resource.
type GitHubRepositoryArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-code
	Code GitHubRepositoryCodePtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-connectionarn
	ConnectionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-enableissues
	EnableIssues pulumi.BoolPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-isprivate
	IsPrivate pulumi.BoolPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryaccesstoken
	RepositoryAccessToken pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositorydescription
	RepositoryDescription pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryname
	RepositoryName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codestar-githubrepository.html#cfn-codestar-githubrepository-repositoryowner
	RepositoryOwner pulumi.StringInput
}

func (GitHubRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*gitHubRepositoryArgs)(nil)).Elem()
}

type GitHubRepositoryInput interface {
	pulumi.Input

	ToGitHubRepositoryOutput() GitHubRepositoryOutput
	ToGitHubRepositoryOutputWithContext(ctx context.Context) GitHubRepositoryOutput
}

func (*GitHubRepository) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepository)(nil))
}

func (i *GitHubRepository) ToGitHubRepositoryOutput() GitHubRepositoryOutput {
	return i.ToGitHubRepositoryOutputWithContext(context.Background())
}

func (i *GitHubRepository) ToGitHubRepositoryOutputWithContext(ctx context.Context) GitHubRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GitHubRepositoryOutput)
}

type GitHubRepositoryOutput struct{ *pulumi.OutputState }

func (GitHubRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GitHubRepository)(nil))
}

func (o GitHubRepositoryOutput) ToGitHubRepositoryOutput() GitHubRepositoryOutput {
	return o
}

func (o GitHubRepositoryOutput) ToGitHubRepositoryOutputWithContext(ctx context.Context) GitHubRepositoryOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GitHubRepositoryOutput{})
}
