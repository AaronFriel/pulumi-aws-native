// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html
type UserPoolGroup struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname
	GroupName pulumi.StringPtrOutput `pulumi:"groupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence
	Precedence pulumi.Float64PtrOutput `pulumi:"precedence"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn
	RoleArn pulumi.StringPtrOutput `pulumi:"roleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid
	UserPoolId pulumi.StringOutput `pulumi:"userPoolId"`
}

// NewUserPoolGroup registers a new resource with the given unique name, arguments, and options.
func NewUserPoolGroup(ctx *pulumi.Context,
	name string, args *UserPoolGroupArgs, opts ...pulumi.ResourceOption) (*UserPoolGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	var resource UserPoolGroup
	err := ctx.RegisterResource("aws-native:cognito:UserPoolGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolGroup gets an existing UserPoolGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolGroupState, opts ...pulumi.ResourceOption) (*UserPoolGroup, error) {
	var resource UserPoolGroup
	err := ctx.ReadResource("aws-native:cognito:UserPoolGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolGroup resources.
type userPoolGroupState struct {
}

type UserPoolGroupState struct {
}

func (UserPoolGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolGroupState)(nil)).Elem()
}

type userPoolGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description
	Description *string `pulumi:"description"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname
	GroupName *string `pulumi:"groupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence
	Precedence *float64 `pulumi:"precedence"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn
	RoleArn *string `pulumi:"roleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid
	UserPoolId string `pulumi:"userPoolId"`
}

// The set of arguments for constructing a UserPoolGroup resource.
type UserPoolGroupArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-description
	Description pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-groupname
	GroupName pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-precedence
	Precedence pulumi.Float64PtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-rolearn
	RoleArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolgroup.html#cfn-cognito-userpoolgroup-userpoolid
	UserPoolId pulumi.StringInput
}

func (UserPoolGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolGroupArgs)(nil)).Elem()
}

type UserPoolGroupInput interface {
	pulumi.Input

	ToUserPoolGroupOutput() UserPoolGroupOutput
	ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput
}

func (*UserPoolGroup) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolGroup)(nil))
}

func (i *UserPoolGroup) ToUserPoolGroupOutput() UserPoolGroupOutput {
	return i.ToUserPoolGroupOutputWithContext(context.Background())
}

func (i *UserPoolGroup) ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolGroupOutput)
}

type UserPoolGroupOutput struct{ *pulumi.OutputState }

func (UserPoolGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolGroup)(nil))
}

func (o UserPoolGroupOutput) ToUserPoolGroupOutput() UserPoolGroupOutput {
	return o
}

func (o UserPoolGroupOutput) ToUserPoolGroupOutputWithContext(ctx context.Context) UserPoolGroupOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(UserPoolGroupOutput{})
}
