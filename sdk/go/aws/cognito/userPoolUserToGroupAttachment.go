// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package cognito

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html
type UserPoolUserToGroupAttachment struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname
	GroupName pulumi.StringOutput `pulumi:"groupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid
	UserPoolId pulumi.StringOutput `pulumi:"userPoolId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewUserPoolUserToGroupAttachment registers a new resource with the given unique name, arguments, and options.
func NewUserPoolUserToGroupAttachment(ctx *pulumi.Context,
	name string, args *UserPoolUserToGroupAttachmentArgs, opts ...pulumi.ResourceOption) (*UserPoolUserToGroupAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupName == nil {
		return nil, errors.New("invalid value for required argument 'GroupName'")
	}
	if args.UserPoolId == nil {
		return nil, errors.New("invalid value for required argument 'UserPoolId'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	var resource UserPoolUserToGroupAttachment
	err := ctx.RegisterResource("aws-native:cognito:UserPoolUserToGroupAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUserPoolUserToGroupAttachment gets an existing UserPoolUserToGroupAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUserPoolUserToGroupAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UserPoolUserToGroupAttachmentState, opts ...pulumi.ResourceOption) (*UserPoolUserToGroupAttachment, error) {
	var resource UserPoolUserToGroupAttachment
	err := ctx.ReadResource("aws-native:cognito:UserPoolUserToGroupAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UserPoolUserToGroupAttachment resources.
type userPoolUserToGroupAttachmentState struct {
}

type UserPoolUserToGroupAttachmentState struct {
}

func (UserPoolUserToGroupAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolUserToGroupAttachmentState)(nil)).Elem()
}

type userPoolUserToGroupAttachmentArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname
	GroupName string `pulumi:"groupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid
	UserPoolId string `pulumi:"userPoolId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a UserPoolUserToGroupAttachment resource.
type UserPoolUserToGroupAttachmentArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-groupname
	GroupName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-userpoolid
	UserPoolId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpoolusertogroupattachment.html#cfn-cognito-userpoolusertogroupattachment-username
	Username pulumi.StringInput
}

func (UserPoolUserToGroupAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*userPoolUserToGroupAttachmentArgs)(nil)).Elem()
}

type UserPoolUserToGroupAttachmentInput interface {
	pulumi.Input

	ToUserPoolUserToGroupAttachmentOutput() UserPoolUserToGroupAttachmentOutput
	ToUserPoolUserToGroupAttachmentOutputWithContext(ctx context.Context) UserPoolUserToGroupAttachmentOutput
}

func (*UserPoolUserToGroupAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserToGroupAttachment)(nil))
}

func (i *UserPoolUserToGroupAttachment) ToUserPoolUserToGroupAttachmentOutput() UserPoolUserToGroupAttachmentOutput {
	return i.ToUserPoolUserToGroupAttachmentOutputWithContext(context.Background())
}

func (i *UserPoolUserToGroupAttachment) ToUserPoolUserToGroupAttachmentOutputWithContext(ctx context.Context) UserPoolUserToGroupAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPoolUserToGroupAttachmentOutput)
}

type UserPoolUserToGroupAttachmentOutput struct{ *pulumi.OutputState }

func (UserPoolUserToGroupAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPoolUserToGroupAttachment)(nil))
}

func (o UserPoolUserToGroupAttachmentOutput) ToUserPoolUserToGroupAttachmentOutput() UserPoolUserToGroupAttachmentOutput {
	return o
}

func (o UserPoolUserToGroupAttachmentOutput) ToUserPoolUserToGroupAttachmentOutputWithContext(ctx context.Context) UserPoolUserToGroupAttachmentOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(UserPoolUserToGroupAttachmentOutput{})
}
