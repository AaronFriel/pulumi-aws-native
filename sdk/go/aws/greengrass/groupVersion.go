// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package greengrass

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html
type GroupVersion struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-connectordefinitionversionarn
	ConnectorDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"connectorDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-coredefinitionversionarn
	CoreDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"coreDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-devicedefinitionversionarn
	DeviceDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"deviceDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-functiondefinitionversionarn
	FunctionDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"functionDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-groupid
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-loggerdefinitionversionarn
	LoggerDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"loggerDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-resourcedefinitionversionarn
	ResourceDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"resourceDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-subscriptiondefinitionversionarn
	SubscriptionDefinitionVersionArn pulumi.StringPtrOutput `pulumi:"subscriptionDefinitionVersionArn"`
}

// NewGroupVersion registers a new resource with the given unique name, arguments, and options.
func NewGroupVersion(ctx *pulumi.Context,
	name string, args *GroupVersionArgs, opts ...pulumi.ResourceOption) (*GroupVersion, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	var resource GroupVersion
	err := ctx.RegisterResource("aws-native:greengrass:GroupVersion", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGroupVersion gets an existing GroupVersion resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGroupVersion(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GroupVersionState, opts ...pulumi.ResourceOption) (*GroupVersion, error) {
	var resource GroupVersion
	err := ctx.ReadResource("aws-native:greengrass:GroupVersion", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GroupVersion resources.
type groupVersionState struct {
}

type GroupVersionState struct {
}

func (GroupVersionState) ElementType() reflect.Type {
	return reflect.TypeOf((*groupVersionState)(nil)).Elem()
}

type groupVersionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-connectordefinitionversionarn
	ConnectorDefinitionVersionArn *string `pulumi:"connectorDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-coredefinitionversionarn
	CoreDefinitionVersionArn *string `pulumi:"coreDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-devicedefinitionversionarn
	DeviceDefinitionVersionArn *string `pulumi:"deviceDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-functiondefinitionversionarn
	FunctionDefinitionVersionArn *string `pulumi:"functionDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-groupid
	GroupId string `pulumi:"groupId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-loggerdefinitionversionarn
	LoggerDefinitionVersionArn *string `pulumi:"loggerDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-resourcedefinitionversionarn
	ResourceDefinitionVersionArn *string `pulumi:"resourceDefinitionVersionArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-subscriptiondefinitionversionarn
	SubscriptionDefinitionVersionArn *string `pulumi:"subscriptionDefinitionVersionArn"`
}

// The set of arguments for constructing a GroupVersion resource.
type GroupVersionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-connectordefinitionversionarn
	ConnectorDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-coredefinitionversionarn
	CoreDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-devicedefinitionversionarn
	DeviceDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-functiondefinitionversionarn
	FunctionDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-groupid
	GroupId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-loggerdefinitionversionarn
	LoggerDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-resourcedefinitionversionarn
	ResourceDefinitionVersionArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-greengrass-groupversion.html#cfn-greengrass-groupversion-subscriptiondefinitionversionarn
	SubscriptionDefinitionVersionArn pulumi.StringPtrInput
}

func (GroupVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*groupVersionArgs)(nil)).Elem()
}

type GroupVersionInput interface {
	pulumi.Input

	ToGroupVersionOutput() GroupVersionOutput
	ToGroupVersionOutputWithContext(ctx context.Context) GroupVersionOutput
}

func (*GroupVersion) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupVersion)(nil))
}

func (i *GroupVersion) ToGroupVersionOutput() GroupVersionOutput {
	return i.ToGroupVersionOutputWithContext(context.Background())
}

func (i *GroupVersion) ToGroupVersionOutputWithContext(ctx context.Context) GroupVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupVersionOutput)
}

type GroupVersionOutput struct{ *pulumi.OutputState }

func (GroupVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupVersion)(nil))
}

func (o GroupVersionOutput) ToGroupVersionOutput() GroupVersionOutput {
	return o
}

func (o GroupVersionOutput) ToGroupVersionOutputWithContext(ctx context.Context) GroupVersionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(GroupVersionOutput{})
}
