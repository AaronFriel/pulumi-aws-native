// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package configuration

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html
type ConfigurationRecorder struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
	Name pulumi.StringPtrOutput `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
	RecordingGroup ConfigurationRecorderRecordingGroupPtrOutput `pulumi:"recordingGroup"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
	RoleARN pulumi.StringOutput `pulumi:"roleARN"`
}

// NewConfigurationRecorder registers a new resource with the given unique name, arguments, and options.
func NewConfigurationRecorder(ctx *pulumi.Context,
	name string, args *ConfigurationRecorderArgs, opts ...pulumi.ResourceOption) (*ConfigurationRecorder, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.RoleARN == nil {
		return nil, errors.New("invalid value for required argument 'RoleARN'")
	}
	var resource ConfigurationRecorder
	err := ctx.RegisterResource("aws-native:configuration:ConfigurationRecorder", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigurationRecorder gets an existing ConfigurationRecorder resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigurationRecorder(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigurationRecorderState, opts ...pulumi.ResourceOption) (*ConfigurationRecorder, error) {
	var resource ConfigurationRecorder
	err := ctx.ReadResource("aws-native:configuration:ConfigurationRecorder", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigurationRecorder resources.
type configurationRecorderState struct {
}

type ConfigurationRecorderState struct {
}

func (ConfigurationRecorderState) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationRecorderState)(nil)).Elem()
}

type configurationRecorderArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
	Name *string `pulumi:"name"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
	RecordingGroup *ConfigurationRecorderRecordingGroup `pulumi:"recordingGroup"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
	RoleARN string `pulumi:"roleARN"`
}

// The set of arguments for constructing a ConfigurationRecorder resource.
type ConfigurationRecorderArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-name
	Name pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-recordinggroup
	RecordingGroup ConfigurationRecorderRecordingGroupPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-config-configurationrecorder.html#cfn-config-configurationrecorder-rolearn
	RoleARN pulumi.StringInput
}

func (ConfigurationRecorderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configurationRecorderArgs)(nil)).Elem()
}

type ConfigurationRecorderInput interface {
	pulumi.Input

	ToConfigurationRecorderOutput() ConfigurationRecorderOutput
	ToConfigurationRecorderOutputWithContext(ctx context.Context) ConfigurationRecorderOutput
}

func (*ConfigurationRecorder) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationRecorder)(nil))
}

func (i *ConfigurationRecorder) ToConfigurationRecorderOutput() ConfigurationRecorderOutput {
	return i.ToConfigurationRecorderOutputWithContext(context.Background())
}

func (i *ConfigurationRecorder) ToConfigurationRecorderOutputWithContext(ctx context.Context) ConfigurationRecorderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigurationRecorderOutput)
}

type ConfigurationRecorderOutput struct{ *pulumi.OutputState }

func (ConfigurationRecorderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigurationRecorder)(nil))
}

func (o ConfigurationRecorderOutput) ToConfigurationRecorderOutput() ConfigurationRecorderOutput {
	return o
}

func (o ConfigurationRecorderOutput) ToConfigurationRecorderOutputWithContext(ctx context.Context) ConfigurationRecorderOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ConfigurationRecorderOutput{})
}
