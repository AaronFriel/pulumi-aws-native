// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package iam

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type GroupPolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName string `pulumi:"policyName"`
}

// GroupPolicyInput is an input type that accepts GroupPolicyArgs and GroupPolicyOutput values.
// You can construct a concrete instance of `GroupPolicyInput` via:
//
//          GroupPolicyArgs{...}
type GroupPolicyInput interface {
	pulumi.Input

	ToGroupPolicyOutput() GroupPolicyOutput
	ToGroupPolicyOutputWithContext(context.Context) GroupPolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type GroupPolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (GroupPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicy)(nil)).Elem()
}

func (i GroupPolicyArgs) ToGroupPolicyOutput() GroupPolicyOutput {
	return i.ToGroupPolicyOutputWithContext(context.Background())
}

func (i GroupPolicyArgs) ToGroupPolicyOutputWithContext(ctx context.Context) GroupPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyOutput)
}

// GroupPolicyArrayInput is an input type that accepts GroupPolicyArray and GroupPolicyArrayOutput values.
// You can construct a concrete instance of `GroupPolicyArrayInput` via:
//
//          GroupPolicyArray{ GroupPolicyArgs{...} }
type GroupPolicyArrayInput interface {
	pulumi.Input

	ToGroupPolicyArrayOutput() GroupPolicyArrayOutput
	ToGroupPolicyArrayOutputWithContext(context.Context) GroupPolicyArrayOutput
}

type GroupPolicyArray []GroupPolicyInput

func (GroupPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicy)(nil)).Elem()
}

func (i GroupPolicyArray) ToGroupPolicyArrayOutput() GroupPolicyArrayOutput {
	return i.ToGroupPolicyArrayOutputWithContext(context.Background())
}

func (i GroupPolicyArray) ToGroupPolicyArrayOutputWithContext(ctx context.Context) GroupPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GroupPolicyArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type GroupPolicyOutput struct{ *pulumi.OutputState }

func (GroupPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GroupPolicy)(nil)).Elem()
}

func (o GroupPolicyOutput) ToGroupPolicyOutput() GroupPolicyOutput {
	return o
}

func (o GroupPolicyOutput) ToGroupPolicyOutputWithContext(ctx context.Context) GroupPolicyOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
func (o GroupPolicyOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v GroupPolicy) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
func (o GroupPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GroupPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type GroupPolicyArrayOutput struct{ *pulumi.OutputState }

func (GroupPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GroupPolicy)(nil)).Elem()
}

func (o GroupPolicyArrayOutput) ToGroupPolicyArrayOutput() GroupPolicyArrayOutput {
	return o
}

func (o GroupPolicyArrayOutput) ToGroupPolicyArrayOutputWithContext(ctx context.Context) GroupPolicyArrayOutput {
	return o
}

func (o GroupPolicyArrayOutput) Index(i pulumi.IntInput) GroupPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GroupPolicy {
		return vs[0].([]GroupPolicy)[vs[1].(int)]
	}).(GroupPolicyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type RolePolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName string `pulumi:"policyName"`
}

// RolePolicyInput is an input type that accepts RolePolicyArgs and RolePolicyOutput values.
// You can construct a concrete instance of `RolePolicyInput` via:
//
//          RolePolicyArgs{...}
type RolePolicyInput interface {
	pulumi.Input

	ToRolePolicyOutput() RolePolicyOutput
	ToRolePolicyOutputWithContext(context.Context) RolePolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type RolePolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (RolePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicy)(nil)).Elem()
}

func (i RolePolicyArgs) ToRolePolicyOutput() RolePolicyOutput {
	return i.ToRolePolicyOutputWithContext(context.Background())
}

func (i RolePolicyArgs) ToRolePolicyOutputWithContext(ctx context.Context) RolePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyOutput)
}

// RolePolicyArrayInput is an input type that accepts RolePolicyArray and RolePolicyArrayOutput values.
// You can construct a concrete instance of `RolePolicyArrayInput` via:
//
//          RolePolicyArray{ RolePolicyArgs{...} }
type RolePolicyArrayInput interface {
	pulumi.Input

	ToRolePolicyArrayOutput() RolePolicyArrayOutput
	ToRolePolicyArrayOutputWithContext(context.Context) RolePolicyArrayOutput
}

type RolePolicyArray []RolePolicyInput

func (RolePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicy)(nil)).Elem()
}

func (i RolePolicyArray) ToRolePolicyArrayOutput() RolePolicyArrayOutput {
	return i.ToRolePolicyArrayOutputWithContext(context.Background())
}

func (i RolePolicyArray) ToRolePolicyArrayOutputWithContext(ctx context.Context) RolePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePolicyArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type RolePolicyOutput struct{ *pulumi.OutputState }

func (RolePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePolicy)(nil)).Elem()
}

func (o RolePolicyOutput) ToRolePolicyOutput() RolePolicyOutput {
	return o
}

func (o RolePolicyOutput) ToRolePolicyOutputWithContext(ctx context.Context) RolePolicyOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
func (o RolePolicyOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v RolePolicy) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
func (o RolePolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v RolePolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type RolePolicyArrayOutput struct{ *pulumi.OutputState }

func (RolePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePolicy)(nil)).Elem()
}

func (o RolePolicyArrayOutput) ToRolePolicyArrayOutput() RolePolicyArrayOutput {
	return o
}

func (o RolePolicyArrayOutput) ToRolePolicyArrayOutputWithContext(ctx context.Context) RolePolicyArrayOutput {
	return o
}

func (o RolePolicyArrayOutput) Index(i pulumi.IntInput) RolePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePolicy {
		return vs[0].([]RolePolicy)[vs[1].(int)]
	}).(RolePolicyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html
type UserLoginProfile struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
	Password string `pulumi:"password"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
	PasswordResetRequired *bool `pulumi:"passwordResetRequired"`
}

// UserLoginProfileInput is an input type that accepts UserLoginProfileArgs and UserLoginProfileOutput values.
// You can construct a concrete instance of `UserLoginProfileInput` via:
//
//          UserLoginProfileArgs{...}
type UserLoginProfileInput interface {
	pulumi.Input

	ToUserLoginProfileOutput() UserLoginProfileOutput
	ToUserLoginProfileOutputWithContext(context.Context) UserLoginProfileOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html
type UserLoginProfileArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
	Password pulumi.StringInput `pulumi:"password"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
	PasswordResetRequired pulumi.BoolPtrInput `pulumi:"passwordResetRequired"`
}

func (UserLoginProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLoginProfile)(nil)).Elem()
}

func (i UserLoginProfileArgs) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return i.ToUserLoginProfileOutputWithContext(context.Background())
}

func (i UserLoginProfileArgs) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileOutput)
}

func (i UserLoginProfileArgs) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return i.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (i UserLoginProfileArgs) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfileOutput).ToUserLoginProfilePtrOutputWithContext(ctx)
}

// UserLoginProfilePtrInput is an input type that accepts UserLoginProfileArgs, UserLoginProfilePtr and UserLoginProfilePtrOutput values.
// You can construct a concrete instance of `UserLoginProfilePtrInput` via:
//
//          UserLoginProfileArgs{...}
//
//  or:
//
//          nil
type UserLoginProfilePtrInput interface {
	pulumi.Input

	ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput
	ToUserLoginProfilePtrOutputWithContext(context.Context) UserLoginProfilePtrOutput
}

type userLoginProfilePtrType UserLoginProfileArgs

func UserLoginProfilePtr(v *UserLoginProfileArgs) UserLoginProfilePtrInput {
	return (*userLoginProfilePtrType)(v)
}

func (*userLoginProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (i *userLoginProfilePtrType) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return i.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (i *userLoginProfilePtrType) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserLoginProfilePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html
type UserLoginProfileOutput struct{ *pulumi.OutputState }

func (UserLoginProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutput() UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) ToUserLoginProfileOutputWithContext(ctx context.Context) UserLoginProfileOutput {
	return o
}

func (o UserLoginProfileOutput) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return o.ToUserLoginProfilePtrOutputWithContext(context.Background())
}

func (o UserLoginProfileOutput) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v UserLoginProfile) *UserLoginProfile {
		return &v
	}).(UserLoginProfilePtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
func (o UserLoginProfileOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v UserLoginProfile) string { return v.Password }).(pulumi.StringOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
func (o UserLoginProfileOutput) PasswordResetRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v UserLoginProfile) *bool { return v.PasswordResetRequired }).(pulumi.BoolPtrOutput)
}

type UserLoginProfilePtrOutput struct{ *pulumi.OutputState }

func (UserLoginProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UserLoginProfile)(nil)).Elem()
}

func (o UserLoginProfilePtrOutput) ToUserLoginProfilePtrOutput() UserLoginProfilePtrOutput {
	return o
}

func (o UserLoginProfilePtrOutput) ToUserLoginProfilePtrOutputWithContext(ctx context.Context) UserLoginProfilePtrOutput {
	return o
}

func (o UserLoginProfilePtrOutput) Elem() UserLoginProfileOutput {
	return o.ApplyT(func(v *UserLoginProfile) UserLoginProfile {
		if v != nil {
			return *v
		}
		var ret UserLoginProfile
		return ret
	}).(UserLoginProfileOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-password
func (o UserLoginProfilePtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-user-loginprofile.html#cfn-iam-user-loginprofile-passwordresetrequired
func (o UserLoginProfilePtrOutput) PasswordResetRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UserLoginProfile) *bool {
		if v == nil {
			return nil
		}
		return v.PasswordResetRequired
	}).(pulumi.BoolPtrOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type UserPolicy struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument interface{} `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName string `pulumi:"policyName"`
}

// UserPolicyInput is an input type that accepts UserPolicyArgs and UserPolicyOutput values.
// You can construct a concrete instance of `UserPolicyInput` via:
//
//          UserPolicyArgs{...}
type UserPolicyInput interface {
	pulumi.Input

	ToUserPolicyOutput() UserPolicyOutput
	ToUserPolicyOutputWithContext(context.Context) UserPolicyOutput
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type UserPolicyArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
	PolicyDocument pulumi.Input `pulumi:"policyDocument"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
	PolicyName pulumi.StringInput `pulumi:"policyName"`
}

func (UserPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicy)(nil)).Elem()
}

func (i UserPolicyArgs) ToUserPolicyOutput() UserPolicyOutput {
	return i.ToUserPolicyOutputWithContext(context.Background())
}

func (i UserPolicyArgs) ToUserPolicyOutputWithContext(ctx context.Context) UserPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyOutput)
}

// UserPolicyArrayInput is an input type that accepts UserPolicyArray and UserPolicyArrayOutput values.
// You can construct a concrete instance of `UserPolicyArrayInput` via:
//
//          UserPolicyArray{ UserPolicyArgs{...} }
type UserPolicyArrayInput interface {
	pulumi.Input

	ToUserPolicyArrayOutput() UserPolicyArrayOutput
	ToUserPolicyArrayOutputWithContext(context.Context) UserPolicyArrayOutput
}

type UserPolicyArray []UserPolicyInput

func (UserPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicy)(nil)).Elem()
}

func (i UserPolicyArray) ToUserPolicyArrayOutput() UserPolicyArrayOutput {
	return i.ToUserPolicyArrayOutputWithContext(context.Background())
}

func (i UserPolicyArray) ToUserPolicyArrayOutputWithContext(ctx context.Context) UserPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UserPolicyArrayOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html
type UserPolicyOutput struct{ *pulumi.OutputState }

func (UserPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*UserPolicy)(nil)).Elem()
}

func (o UserPolicyOutput) ToUserPolicyOutput() UserPolicyOutput {
	return o
}

func (o UserPolicyOutput) ToUserPolicyOutputWithContext(ctx context.Context) UserPolicyOutput {
	return o
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policydocument
func (o UserPolicyOutput) PolicyDocument() pulumi.AnyOutput {
	return o.ApplyT(func(v UserPolicy) interface{} { return v.PolicyDocument }).(pulumi.AnyOutput)
}

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-iam-policy.html#cfn-iam-policies-policyname
func (o UserPolicyOutput) PolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v UserPolicy) string { return v.PolicyName }).(pulumi.StringOutput)
}

type UserPolicyArrayOutput struct{ *pulumi.OutputState }

func (UserPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]UserPolicy)(nil)).Elem()
}

func (o UserPolicyArrayOutput) ToUserPolicyArrayOutput() UserPolicyArrayOutput {
	return o
}

func (o UserPolicyArrayOutput) ToUserPolicyArrayOutputWithContext(ctx context.Context) UserPolicyArrayOutput {
	return o
}

func (o UserPolicyArrayOutput) Index(i pulumi.IntInput) UserPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) UserPolicy {
		return vs[0].([]UserPolicy)[vs[1].(int)]
	}).(UserPolicyOutput)
}

func init() {
	pulumi.RegisterOutputType(GroupPolicyOutput{})
	pulumi.RegisterOutputType(GroupPolicyArrayOutput{})
	pulumi.RegisterOutputType(RolePolicyOutput{})
	pulumi.RegisterOutputType(RolePolicyArrayOutput{})
	pulumi.RegisterOutputType(UserLoginProfileOutput{})
	pulumi.RegisterOutputType(UserLoginProfilePtrOutput{})
	pulumi.RegisterOutputType(UserPolicyOutput{})
	pulumi.RegisterOutputType(UserPolicyArrayOutput{})
}
