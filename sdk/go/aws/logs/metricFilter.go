// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package logs

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html
type MetricFilter struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-filterpattern
	FilterPattern pulumi.StringOutput `pulumi:"filterPattern"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-loggroupname
	LogGroupName pulumi.StringOutput `pulumi:"logGroupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-metrictransformations
	MetricTransformations MetricFilterMetricTransformationArrayOutput `pulumi:"metricTransformations"`
}

// NewMetricFilter registers a new resource with the given unique name, arguments, and options.
func NewMetricFilter(ctx *pulumi.Context,
	name string, args *MetricFilterArgs, opts ...pulumi.ResourceOption) (*MetricFilter, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.FilterPattern == nil {
		return nil, errors.New("invalid value for required argument 'FilterPattern'")
	}
	if args.LogGroupName == nil {
		return nil, errors.New("invalid value for required argument 'LogGroupName'")
	}
	if args.MetricTransformations == nil {
		return nil, errors.New("invalid value for required argument 'MetricTransformations'")
	}
	var resource MetricFilter
	err := ctx.RegisterResource("aws-native:logs:MetricFilter", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMetricFilter gets an existing MetricFilter resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMetricFilter(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MetricFilterState, opts ...pulumi.ResourceOption) (*MetricFilter, error) {
	var resource MetricFilter
	err := ctx.ReadResource("aws-native:logs:MetricFilter", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MetricFilter resources.
type metricFilterState struct {
}

type MetricFilterState struct {
}

func (MetricFilterState) ElementType() reflect.Type {
	return reflect.TypeOf((*metricFilterState)(nil)).Elem()
}

type metricFilterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-filterpattern
	FilterPattern string `pulumi:"filterPattern"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-loggroupname
	LogGroupName string `pulumi:"logGroupName"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-metrictransformations
	MetricTransformations []MetricFilterMetricTransformation `pulumi:"metricTransformations"`
}

// The set of arguments for constructing a MetricFilter resource.
type MetricFilterArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-filterpattern
	FilterPattern pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-loggroupname
	LogGroupName pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-logs-metricfilter.html#cfn-cwl-metricfilter-metrictransformations
	MetricTransformations MetricFilterMetricTransformationArrayInput
}

func (MetricFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*metricFilterArgs)(nil)).Elem()
}

type MetricFilterInput interface {
	pulumi.Input

	ToMetricFilterOutput() MetricFilterOutput
	ToMetricFilterOutputWithContext(ctx context.Context) MetricFilterOutput
}

func (*MetricFilter) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricFilter)(nil))
}

func (i *MetricFilter) ToMetricFilterOutput() MetricFilterOutput {
	return i.ToMetricFilterOutputWithContext(context.Background())
}

func (i *MetricFilter) ToMetricFilterOutputWithContext(ctx context.Context) MetricFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MetricFilterOutput)
}

type MetricFilterOutput struct{ *pulumi.OutputState }

func (MetricFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MetricFilter)(nil))
}

func (o MetricFilterOutput) ToMetricFilterOutput() MetricFilterOutput {
	return o
}

func (o MetricFilterOutput) ToMetricFilterOutputWithContext(ctx context.Context) MetricFilterOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(MetricFilterOutput{})
}
