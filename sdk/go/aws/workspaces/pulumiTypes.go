// *** WARNING: this file was generated by the Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package workspaces

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionAliasConnectionAliasAssociation struct {
	AssociatedAccountId  *string                                                     `pulumi:"associatedAccountId"`
	AssociationStatus    *ConnectionAliasConnectionAliasAssociationAssociationStatus `pulumi:"associationStatus"`
	ConnectionIdentifier *string                                                     `pulumi:"connectionIdentifier"`
	ResourceId           *string                                                     `pulumi:"resourceId"`
}

// ConnectionAliasConnectionAliasAssociationInput is an input type that accepts ConnectionAliasConnectionAliasAssociationArgs and ConnectionAliasConnectionAliasAssociationOutput values.
// You can construct a concrete instance of `ConnectionAliasConnectionAliasAssociationInput` via:
//
//          ConnectionAliasConnectionAliasAssociationArgs{...}
type ConnectionAliasConnectionAliasAssociationInput interface {
	pulumi.Input

	ToConnectionAliasConnectionAliasAssociationOutput() ConnectionAliasConnectionAliasAssociationOutput
	ToConnectionAliasConnectionAliasAssociationOutputWithContext(context.Context) ConnectionAliasConnectionAliasAssociationOutput
}

type ConnectionAliasConnectionAliasAssociationArgs struct {
	AssociatedAccountId  pulumi.StringPtrInput                                              `pulumi:"associatedAccountId"`
	AssociationStatus    ConnectionAliasConnectionAliasAssociationAssociationStatusPtrInput `pulumi:"associationStatus"`
	ConnectionIdentifier pulumi.StringPtrInput                                              `pulumi:"connectionIdentifier"`
	ResourceId           pulumi.StringPtrInput                                              `pulumi:"resourceId"`
}

func (ConnectionAliasConnectionAliasAssociationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAliasConnectionAliasAssociation)(nil)).Elem()
}

func (i ConnectionAliasConnectionAliasAssociationArgs) ToConnectionAliasConnectionAliasAssociationOutput() ConnectionAliasConnectionAliasAssociationOutput {
	return i.ToConnectionAliasConnectionAliasAssociationOutputWithContext(context.Background())
}

func (i ConnectionAliasConnectionAliasAssociationArgs) ToConnectionAliasConnectionAliasAssociationOutputWithContext(ctx context.Context) ConnectionAliasConnectionAliasAssociationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAliasConnectionAliasAssociationOutput)
}

// ConnectionAliasConnectionAliasAssociationArrayInput is an input type that accepts ConnectionAliasConnectionAliasAssociationArray and ConnectionAliasConnectionAliasAssociationArrayOutput values.
// You can construct a concrete instance of `ConnectionAliasConnectionAliasAssociationArrayInput` via:
//
//          ConnectionAliasConnectionAliasAssociationArray{ ConnectionAliasConnectionAliasAssociationArgs{...} }
type ConnectionAliasConnectionAliasAssociationArrayInput interface {
	pulumi.Input

	ToConnectionAliasConnectionAliasAssociationArrayOutput() ConnectionAliasConnectionAliasAssociationArrayOutput
	ToConnectionAliasConnectionAliasAssociationArrayOutputWithContext(context.Context) ConnectionAliasConnectionAliasAssociationArrayOutput
}

type ConnectionAliasConnectionAliasAssociationArray []ConnectionAliasConnectionAliasAssociationInput

func (ConnectionAliasConnectionAliasAssociationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAliasConnectionAliasAssociation)(nil)).Elem()
}

func (i ConnectionAliasConnectionAliasAssociationArray) ToConnectionAliasConnectionAliasAssociationArrayOutput() ConnectionAliasConnectionAliasAssociationArrayOutput {
	return i.ToConnectionAliasConnectionAliasAssociationArrayOutputWithContext(context.Background())
}

func (i ConnectionAliasConnectionAliasAssociationArray) ToConnectionAliasConnectionAliasAssociationArrayOutputWithContext(ctx context.Context) ConnectionAliasConnectionAliasAssociationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAliasConnectionAliasAssociationArrayOutput)
}

type ConnectionAliasConnectionAliasAssociationOutput struct{ *pulumi.OutputState }

func (ConnectionAliasConnectionAliasAssociationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAliasConnectionAliasAssociation)(nil)).Elem()
}

func (o ConnectionAliasConnectionAliasAssociationOutput) ToConnectionAliasConnectionAliasAssociationOutput() ConnectionAliasConnectionAliasAssociationOutput {
	return o
}

func (o ConnectionAliasConnectionAliasAssociationOutput) ToConnectionAliasConnectionAliasAssociationOutputWithContext(ctx context.Context) ConnectionAliasConnectionAliasAssociationOutput {
	return o
}

func (o ConnectionAliasConnectionAliasAssociationOutput) AssociatedAccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasConnectionAliasAssociation) *string { return v.AssociatedAccountId }).(pulumi.StringPtrOutput)
}

func (o ConnectionAliasConnectionAliasAssociationOutput) AssociationStatus() ConnectionAliasConnectionAliasAssociationAssociationStatusPtrOutput {
	return o.ApplyT(func(v ConnectionAliasConnectionAliasAssociation) *ConnectionAliasConnectionAliasAssociationAssociationStatus {
		return v.AssociationStatus
	}).(ConnectionAliasConnectionAliasAssociationAssociationStatusPtrOutput)
}

func (o ConnectionAliasConnectionAliasAssociationOutput) ConnectionIdentifier() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasConnectionAliasAssociation) *string { return v.ConnectionIdentifier }).(pulumi.StringPtrOutput)
}

func (o ConnectionAliasConnectionAliasAssociationOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionAliasConnectionAliasAssociation) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

type ConnectionAliasConnectionAliasAssociationArrayOutput struct{ *pulumi.OutputState }

func (ConnectionAliasConnectionAliasAssociationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAliasConnectionAliasAssociation)(nil)).Elem()
}

func (o ConnectionAliasConnectionAliasAssociationArrayOutput) ToConnectionAliasConnectionAliasAssociationArrayOutput() ConnectionAliasConnectionAliasAssociationArrayOutput {
	return o
}

func (o ConnectionAliasConnectionAliasAssociationArrayOutput) ToConnectionAliasConnectionAliasAssociationArrayOutputWithContext(ctx context.Context) ConnectionAliasConnectionAliasAssociationArrayOutput {
	return o
}

func (o ConnectionAliasConnectionAliasAssociationArrayOutput) Index(i pulumi.IntInput) ConnectionAliasConnectionAliasAssociationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionAliasConnectionAliasAssociation {
		return vs[0].([]ConnectionAliasConnectionAliasAssociation)[vs[1].(int)]
	}).(ConnectionAliasConnectionAliasAssociationOutput)
}

type ConnectionAliasTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// ConnectionAliasTagInput is an input type that accepts ConnectionAliasTagArgs and ConnectionAliasTagOutput values.
// You can construct a concrete instance of `ConnectionAliasTagInput` via:
//
//          ConnectionAliasTagArgs{...}
type ConnectionAliasTagInput interface {
	pulumi.Input

	ToConnectionAliasTagOutput() ConnectionAliasTagOutput
	ToConnectionAliasTagOutputWithContext(context.Context) ConnectionAliasTagOutput
}

type ConnectionAliasTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ConnectionAliasTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAliasTag)(nil)).Elem()
}

func (i ConnectionAliasTagArgs) ToConnectionAliasTagOutput() ConnectionAliasTagOutput {
	return i.ToConnectionAliasTagOutputWithContext(context.Background())
}

func (i ConnectionAliasTagArgs) ToConnectionAliasTagOutputWithContext(ctx context.Context) ConnectionAliasTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAliasTagOutput)
}

// ConnectionAliasTagArrayInput is an input type that accepts ConnectionAliasTagArray and ConnectionAliasTagArrayOutput values.
// You can construct a concrete instance of `ConnectionAliasTagArrayInput` via:
//
//          ConnectionAliasTagArray{ ConnectionAliasTagArgs{...} }
type ConnectionAliasTagArrayInput interface {
	pulumi.Input

	ToConnectionAliasTagArrayOutput() ConnectionAliasTagArrayOutput
	ToConnectionAliasTagArrayOutputWithContext(context.Context) ConnectionAliasTagArrayOutput
}

type ConnectionAliasTagArray []ConnectionAliasTagInput

func (ConnectionAliasTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAliasTag)(nil)).Elem()
}

func (i ConnectionAliasTagArray) ToConnectionAliasTagArrayOutput() ConnectionAliasTagArrayOutput {
	return i.ToConnectionAliasTagArrayOutputWithContext(context.Background())
}

func (i ConnectionAliasTagArray) ToConnectionAliasTagArrayOutputWithContext(ctx context.Context) ConnectionAliasTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionAliasTagArrayOutput)
}

type ConnectionAliasTagOutput struct{ *pulumi.OutputState }

func (ConnectionAliasTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionAliasTag)(nil)).Elem()
}

func (o ConnectionAliasTagOutput) ToConnectionAliasTagOutput() ConnectionAliasTagOutput {
	return o
}

func (o ConnectionAliasTagOutput) ToConnectionAliasTagOutputWithContext(ctx context.Context) ConnectionAliasTagOutput {
	return o
}

func (o ConnectionAliasTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAliasTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o ConnectionAliasTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ConnectionAliasTag) string { return v.Value }).(pulumi.StringOutput)
}

type ConnectionAliasTagArrayOutput struct{ *pulumi.OutputState }

func (ConnectionAliasTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionAliasTag)(nil)).Elem()
}

func (o ConnectionAliasTagArrayOutput) ToConnectionAliasTagArrayOutput() ConnectionAliasTagArrayOutput {
	return o
}

func (o ConnectionAliasTagArrayOutput) ToConnectionAliasTagArrayOutputWithContext(ctx context.Context) ConnectionAliasTagArrayOutput {
	return o
}

func (o ConnectionAliasTagArrayOutput) Index(i pulumi.IntInput) ConnectionAliasTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionAliasTag {
		return vs[0].([]ConnectionAliasTag)[vs[1].(int)]
	}).(ConnectionAliasTagOutput)
}

type WorkspaceTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// WorkspaceTagInput is an input type that accepts WorkspaceTagArgs and WorkspaceTagOutput values.
// You can construct a concrete instance of `WorkspaceTagInput` via:
//
//          WorkspaceTagArgs{...}
type WorkspaceTagInput interface {
	pulumi.Input

	ToWorkspaceTagOutput() WorkspaceTagOutput
	ToWorkspaceTagOutputWithContext(context.Context) WorkspaceTagOutput
}

type WorkspaceTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (WorkspaceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return i.ToWorkspaceTagOutputWithContext(context.Background())
}

func (i WorkspaceTagArgs) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagOutput)
}

// WorkspaceTagArrayInput is an input type that accepts WorkspaceTagArray and WorkspaceTagArrayOutput values.
// You can construct a concrete instance of `WorkspaceTagArrayInput` via:
//
//          WorkspaceTagArray{ WorkspaceTagArgs{...} }
type WorkspaceTagArrayInput interface {
	pulumi.Input

	ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput
	ToWorkspaceTagArrayOutputWithContext(context.Context) WorkspaceTagArrayOutput
}

type WorkspaceTagArray []WorkspaceTagInput

func (WorkspaceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return i.ToWorkspaceTagArrayOutputWithContext(context.Background())
}

func (i WorkspaceTagArray) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceTagArrayOutput)
}

type WorkspaceTagOutput struct{ *pulumi.OutputState }

func (WorkspaceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutput() WorkspaceTagOutput {
	return o
}

func (o WorkspaceTagOutput) ToWorkspaceTagOutputWithContext(ctx context.Context) WorkspaceTagOutput {
	return o
}

func (o WorkspaceTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o WorkspaceTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v WorkspaceTag) string { return v.Value }).(pulumi.StringOutput)
}

type WorkspaceTagArrayOutput struct{ *pulumi.OutputState }

func (WorkspaceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WorkspaceTag)(nil)).Elem()
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutput() WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) ToWorkspaceTagArrayOutputWithContext(ctx context.Context) WorkspaceTagArrayOutput {
	return o
}

func (o WorkspaceTagArrayOutput) Index(i pulumi.IntInput) WorkspaceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WorkspaceTag {
		return vs[0].([]WorkspaceTag)[vs[1].(int)]
	}).(WorkspaceTagOutput)
}

type WorkspaceWorkspaceProperties struct {
	ComputeTypeName                     *string `pulumi:"computeTypeName"`
	RootVolumeSizeGib                   *int    `pulumi:"rootVolumeSizeGib"`
	RunningMode                         *string `pulumi:"runningMode"`
	RunningModeAutoStopTimeoutInMinutes *int    `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	UserVolumeSizeGib                   *int    `pulumi:"userVolumeSizeGib"`
}

// WorkspaceWorkspacePropertiesInput is an input type that accepts WorkspaceWorkspacePropertiesArgs and WorkspaceWorkspacePropertiesOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesInput` via:
//
//          WorkspaceWorkspacePropertiesArgs{...}
type WorkspaceWorkspacePropertiesInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput
	ToWorkspaceWorkspacePropertiesOutputWithContext(context.Context) WorkspaceWorkspacePropertiesOutput
}

type WorkspaceWorkspacePropertiesArgs struct {
	ComputeTypeName                     pulumi.StringPtrInput `pulumi:"computeTypeName"`
	RootVolumeSizeGib                   pulumi.IntPtrInput    `pulumi:"rootVolumeSizeGib"`
	RunningMode                         pulumi.StringPtrInput `pulumi:"runningMode"`
	RunningModeAutoStopTimeoutInMinutes pulumi.IntPtrInput    `pulumi:"runningModeAutoStopTimeoutInMinutes"`
	UserVolumeSizeGib                   pulumi.IntPtrInput    `pulumi:"userVolumeSizeGib"`
}

func (WorkspaceWorkspacePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return i.ToWorkspaceWorkspacePropertiesOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput)
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i WorkspaceWorkspacePropertiesArgs) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesOutput).ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx)
}

// WorkspaceWorkspacePropertiesPtrInput is an input type that accepts WorkspaceWorkspacePropertiesArgs, WorkspaceWorkspacePropertiesPtr and WorkspaceWorkspacePropertiesPtrOutput values.
// You can construct a concrete instance of `WorkspaceWorkspacePropertiesPtrInput` via:
//
//          WorkspaceWorkspacePropertiesArgs{...}
//
//  or:
//
//          nil
type WorkspaceWorkspacePropertiesPtrInput interface {
	pulumi.Input

	ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput
	ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Context) WorkspaceWorkspacePropertiesPtrOutput
}

type workspaceWorkspacePropertiesPtrType WorkspaceWorkspacePropertiesArgs

func WorkspaceWorkspacePropertiesPtr(v *WorkspaceWorkspacePropertiesArgs) WorkspaceWorkspacePropertiesPtrInput {
	return (*workspaceWorkspacePropertiesPtrType)(v)
}

func (*workspaceWorkspacePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return i.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (i *workspaceWorkspacePropertiesPtrType) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkspaceWorkspacePropertiesPtrOutput)
}

type WorkspaceWorkspacePropertiesOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutput() WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o.ToWorkspaceWorkspacePropertiesPtrOutputWithContext(context.Background())
}

func (o WorkspaceWorkspacePropertiesOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkspaceWorkspaceProperties) *WorkspaceWorkspaceProperties {
		return &v
	}).(WorkspaceWorkspacePropertiesPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.ComputeTypeName }).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RootVolumeSizeGib }).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *string { return v.RunningMode }).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.RunningModeAutoStopTimeoutInMinutes }).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkspaceWorkspaceProperties) *int { return v.UserVolumeSizeGib }).(pulumi.IntPtrOutput)
}

type WorkspaceWorkspacePropertiesPtrOutput struct{ *pulumi.OutputState }

func (WorkspaceWorkspacePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkspaceWorkspaceProperties)(nil)).Elem()
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutput() WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ToWorkspaceWorkspacePropertiesPtrOutputWithContext(ctx context.Context) WorkspaceWorkspacePropertiesPtrOutput {
	return o
}

func (o WorkspaceWorkspacePropertiesPtrOutput) Elem() WorkspaceWorkspacePropertiesOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) WorkspaceWorkspaceProperties {
		if v != nil {
			return *v
		}
		var ret WorkspaceWorkspaceProperties
		return ret
	}).(WorkspaceWorkspacePropertiesOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) ComputeTypeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.ComputeTypeName
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RootVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RootVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RunningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *string {
		if v == nil {
			return nil
		}
		return v.RunningMode
	}).(pulumi.StringPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) RunningModeAutoStopTimeoutInMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.RunningModeAutoStopTimeoutInMinutes
	}).(pulumi.IntPtrOutput)
}

func (o WorkspaceWorkspacePropertiesPtrOutput) UserVolumeSizeGib() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkspaceWorkspaceProperties) *int {
		if v == nil {
			return nil
		}
		return v.UserVolumeSizeGib
	}).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ConnectionAliasConnectionAliasAssociationOutput{})
	pulumi.RegisterOutputType(ConnectionAliasConnectionAliasAssociationArrayOutput{})
	pulumi.RegisterOutputType(ConnectionAliasTagOutput{})
	pulumi.RegisterOutputType(ConnectionAliasTagArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceTagOutput{})
	pulumi.RegisterOutputType(WorkspaceTagArrayOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesOutput{})
	pulumi.RegisterOutputType(WorkspaceWorkspacePropertiesPtrOutput{})
}
