// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package pinpoint

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html
type ApplicationSettings struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-applicationid
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-campaignhook
	CampaignHook ApplicationSettingsCampaignHookPtrOutput `pulumi:"campaignHook"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-cloudwatchmetricsenabled
	CloudWatchMetricsEnabled pulumi.BoolPtrOutput `pulumi:"cloudWatchMetricsEnabled"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-limits
	Limits ApplicationSettingsLimitsPtrOutput `pulumi:"limits"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-quiettime
	QuietTime ApplicationSettingsQuietTimePtrOutput `pulumi:"quietTime"`
}

// NewApplicationSettings registers a new resource with the given unique name, arguments, and options.
func NewApplicationSettings(ctx *pulumi.Context,
	name string, args *ApplicationSettingsArgs, opts ...pulumi.ResourceOption) (*ApplicationSettings, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	var resource ApplicationSettings
	err := ctx.RegisterResource("aws-native:pinpoint:ApplicationSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApplicationSettings gets an existing ApplicationSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApplicationSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApplicationSettingsState, opts ...pulumi.ResourceOption) (*ApplicationSettings, error) {
	var resource ApplicationSettings
	err := ctx.ReadResource("aws-native:pinpoint:ApplicationSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApplicationSettings resources.
type applicationSettingsState struct {
}

type ApplicationSettingsState struct {
}

func (ApplicationSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationSettingsState)(nil)).Elem()
}

type applicationSettingsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-applicationid
	ApplicationId string `pulumi:"applicationId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-campaignhook
	CampaignHook *ApplicationSettingsCampaignHook `pulumi:"campaignHook"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-cloudwatchmetricsenabled
	CloudWatchMetricsEnabled *bool `pulumi:"cloudWatchMetricsEnabled"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-limits
	Limits *ApplicationSettingsLimits `pulumi:"limits"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-quiettime
	QuietTime *ApplicationSettingsQuietTime `pulumi:"quietTime"`
}

// The set of arguments for constructing a ApplicationSettings resource.
type ApplicationSettingsArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-applicationid
	ApplicationId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-campaignhook
	CampaignHook ApplicationSettingsCampaignHookPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-cloudwatchmetricsenabled
	CloudWatchMetricsEnabled pulumi.BoolPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-limits
	Limits ApplicationSettingsLimitsPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-pinpoint-applicationsettings.html#cfn-pinpoint-applicationsettings-quiettime
	QuietTime ApplicationSettingsQuietTimePtrInput
}

func (ApplicationSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*applicationSettingsArgs)(nil)).Elem()
}

type ApplicationSettingsInput interface {
	pulumi.Input

	ToApplicationSettingsOutput() ApplicationSettingsOutput
	ToApplicationSettingsOutputWithContext(ctx context.Context) ApplicationSettingsOutput
}

func (*ApplicationSettings) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSettings)(nil))
}

func (i *ApplicationSettings) ToApplicationSettingsOutput() ApplicationSettingsOutput {
	return i.ToApplicationSettingsOutputWithContext(context.Background())
}

func (i *ApplicationSettings) ToApplicationSettingsOutputWithContext(ctx context.Context) ApplicationSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationSettingsOutput)
}

type ApplicationSettingsOutput struct{ *pulumi.OutputState }

func (ApplicationSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationSettings)(nil))
}

func (o ApplicationSettingsOutput) ToApplicationSettingsOutput() ApplicationSettingsOutput {
	return o
}

func (o ApplicationSettingsOutput) ToApplicationSettingsOutputWithContext(ctx context.Context) ApplicationSettingsOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(ApplicationSettingsOutput{})
}
