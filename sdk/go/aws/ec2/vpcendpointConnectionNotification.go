// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html
type VPCEndpointConnectionNotification struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
	ConnectionEvents pulumi.StringArrayOutput `pulumi:"connectionEvents"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
	ConnectionNotificationArn pulumi.StringOutput `pulumi:"connectionNotificationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
	ServiceId pulumi.StringPtrOutput `pulumi:"serviceId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
	VPCEndpointId pulumi.StringPtrOutput `pulumi:"vPCEndpointId"`
}

// NewVPCEndpointConnectionNotification registers a new resource with the given unique name, arguments, and options.
func NewVPCEndpointConnectionNotification(ctx *pulumi.Context,
	name string, args *VPCEndpointConnectionNotificationArgs, opts ...pulumi.ResourceOption) (*VPCEndpointConnectionNotification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionEvents == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionEvents'")
	}
	if args.ConnectionNotificationArn == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionNotificationArn'")
	}
	var resource VPCEndpointConnectionNotification
	err := ctx.RegisterResource("aws-native:ec2:VPCEndpointConnectionNotification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPCEndpointConnectionNotification gets an existing VPCEndpointConnectionNotification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPCEndpointConnectionNotification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPCEndpointConnectionNotificationState, opts ...pulumi.ResourceOption) (*VPCEndpointConnectionNotification, error) {
	var resource VPCEndpointConnectionNotification
	err := ctx.ReadResource("aws-native:ec2:VPCEndpointConnectionNotification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPCEndpointConnectionNotification resources.
type vpcendpointConnectionNotificationState struct {
}

type VPCEndpointConnectionNotificationState struct {
}

func (VPCEndpointConnectionNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcendpointConnectionNotificationState)(nil)).Elem()
}

type vpcendpointConnectionNotificationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
	ConnectionEvents []string `pulumi:"connectionEvents"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
	ConnectionNotificationArn string `pulumi:"connectionNotificationArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
	ServiceId *string `pulumi:"serviceId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
	VPCEndpointId *string `pulumi:"vPCEndpointId"`
}

// The set of arguments for constructing a VPCEndpointConnectionNotification resource.
type VPCEndpointConnectionNotificationArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionevents
	ConnectionEvents pulumi.StringArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-connectionnotificationarn
	ConnectionNotificationArn pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-serviceid
	ServiceId pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcendpointconnectionnotification.html#cfn-ec2-vpcendpointconnectionnotification-vpcendpointid
	VPCEndpointId pulumi.StringPtrInput
}

func (VPCEndpointConnectionNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcendpointConnectionNotificationArgs)(nil)).Elem()
}

type VPCEndpointConnectionNotificationInput interface {
	pulumi.Input

	ToVPCEndpointConnectionNotificationOutput() VPCEndpointConnectionNotificationOutput
	ToVPCEndpointConnectionNotificationOutputWithContext(ctx context.Context) VPCEndpointConnectionNotificationOutput
}

func (*VPCEndpointConnectionNotification) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCEndpointConnectionNotification)(nil))
}

func (i *VPCEndpointConnectionNotification) ToVPCEndpointConnectionNotificationOutput() VPCEndpointConnectionNotificationOutput {
	return i.ToVPCEndpointConnectionNotificationOutputWithContext(context.Background())
}

func (i *VPCEndpointConnectionNotification) ToVPCEndpointConnectionNotificationOutputWithContext(ctx context.Context) VPCEndpointConnectionNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCEndpointConnectionNotificationOutput)
}

type VPCEndpointConnectionNotificationOutput struct{ *pulumi.OutputState }

func (VPCEndpointConnectionNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCEndpointConnectionNotification)(nil))
}

func (o VPCEndpointConnectionNotificationOutput) ToVPCEndpointConnectionNotificationOutput() VPCEndpointConnectionNotificationOutput {
	return o
}

func (o VPCEndpointConnectionNotificationOutput) ToVPCEndpointConnectionNotificationOutputWithContext(ctx context.Context) VPCEndpointConnectionNotificationOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VPCEndpointConnectionNotificationOutput{})
}
