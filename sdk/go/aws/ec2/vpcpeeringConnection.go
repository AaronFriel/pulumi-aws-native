// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ec2

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi-aws-native/sdk/go/aws"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html
type VPCPeeringConnection struct {
	pulumi.CustomResourceState

	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
	PeerOwnerId pulumi.StringPtrOutput `pulumi:"peerOwnerId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
	PeerRegion pulumi.StringPtrOutput `pulumi:"peerRegion"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
	PeerRoleArn pulumi.StringPtrOutput `pulumi:"peerRoleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
	PeerVpcId pulumi.StringOutput `pulumi:"peerVpcId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
	Tags aws.TagArrayOutput `pulumi:"tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewVPCPeeringConnection registers a new resource with the given unique name, arguments, and options.
func NewVPCPeeringConnection(ctx *pulumi.Context,
	name string, args *VPCPeeringConnectionArgs, opts ...pulumi.ResourceOption) (*VPCPeeringConnection, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.PeerVpcId == nil {
		return nil, errors.New("invalid value for required argument 'PeerVpcId'")
	}
	if args.VpcId == nil {
		return nil, errors.New("invalid value for required argument 'VpcId'")
	}
	var resource VPCPeeringConnection
	err := ctx.RegisterResource("aws-native:ec2:VPCPeeringConnection", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetVPCPeeringConnection gets an existing VPCPeeringConnection resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetVPCPeeringConnection(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *VPCPeeringConnectionState, opts ...pulumi.ResourceOption) (*VPCPeeringConnection, error) {
	var resource VPCPeeringConnection
	err := ctx.ReadResource("aws-native:ec2:VPCPeeringConnection", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering VPCPeeringConnection resources.
type vpcpeeringConnectionState struct {
}

type VPCPeeringConnectionState struct {
}

func (VPCPeeringConnectionState) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcpeeringConnectionState)(nil)).Elem()
}

type vpcpeeringConnectionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
	PeerOwnerId *string `pulumi:"peerOwnerId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
	PeerRegion *string `pulumi:"peerRegion"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
	PeerRoleArn *string `pulumi:"peerRoleArn"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
	PeerVpcId string `pulumi:"peerVpcId"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
	Tags []aws.Tag `pulumi:"tags"`
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
	VpcId string `pulumi:"vpcId"`
}

// The set of arguments for constructing a VPCPeeringConnection resource.
type VPCPeeringConnectionArgs struct {
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerownerid
	PeerOwnerId pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerregion
	PeerRegion pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peerrolearn
	PeerRoleArn pulumi.StringPtrInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-peervpcid
	PeerVpcId pulumi.StringInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-tags
	Tags aws.TagArrayInput
	// http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-vpcpeeringconnection.html#cfn-ec2-vpcpeeringconnection-vpcid
	VpcId pulumi.StringInput
}

func (VPCPeeringConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*vpcpeeringConnectionArgs)(nil)).Elem()
}

type VPCPeeringConnectionInput interface {
	pulumi.Input

	ToVPCPeeringConnectionOutput() VPCPeeringConnectionOutput
	ToVPCPeeringConnectionOutputWithContext(ctx context.Context) VPCPeeringConnectionOutput
}

func (*VPCPeeringConnection) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCPeeringConnection)(nil))
}

func (i *VPCPeeringConnection) ToVPCPeeringConnectionOutput() VPCPeeringConnectionOutput {
	return i.ToVPCPeeringConnectionOutputWithContext(context.Background())
}

func (i *VPCPeeringConnection) ToVPCPeeringConnectionOutputWithContext(ctx context.Context) VPCPeeringConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(VPCPeeringConnectionOutput)
}

type VPCPeeringConnectionOutput struct{ *pulumi.OutputState }

func (VPCPeeringConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*VPCPeeringConnection)(nil))
}

func (o VPCPeeringConnectionOutput) ToVPCPeeringConnectionOutput() VPCPeeringConnectionOutput {
	return o
}

func (o VPCPeeringConnectionOutput) ToVPCPeeringConnectionOutputWithContext(ctx context.Context) VPCPeeringConnectionOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(VPCPeeringConnectionOutput{})
}
