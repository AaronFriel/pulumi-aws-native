// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./app";
export * from "./elasticLoadBalancerAttachment";
export * from "./instance";
export * from "./layer";
export * from "./stack";
export * from "./userProfile";
export * from "./volume";

// Import resources to register:
import { App } from "./app";
import { ElasticLoadBalancerAttachment } from "./elasticLoadBalancerAttachment";
import { Instance } from "./instance";
import { Layer } from "./layer";
import { Stack } from "./stack";
import { UserProfile } from "./userProfile";
import { Volume } from "./volume";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudformation:OpsWorks:App":
                return new App(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:ElasticLoadBalancerAttachment":
                return new ElasticLoadBalancerAttachment(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:Layer":
                return new Layer(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:Stack":
                return new Stack(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:UserProfile":
                return new UserProfile(name, <any>undefined, { urn })
            case "cloudformation:OpsWorks:Volume":
                return new Volume(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudformation", "OpsWorks", _module)
