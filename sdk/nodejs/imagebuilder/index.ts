// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./component";
export * from "./distributionConfiguration";
export * from "./image";
export * from "./imagePipeline";
export * from "./imageRecipe";
export * from "./infrastructureConfiguration";

// Import resources to register:
import { Component } from "./component";
import { DistributionConfiguration } from "./distributionConfiguration";
import { Image } from "./image";
import { ImagePipeline } from "./imagePipeline";
import { ImageRecipe } from "./imageRecipe";
import { InfrastructureConfiguration } from "./infrastructureConfiguration";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudformation:ImageBuilder:Component":
                return new Component(name, <any>undefined, { urn })
            case "cloudformation:ImageBuilder:DistributionConfiguration":
                return new DistributionConfiguration(name, <any>undefined, { urn })
            case "cloudformation:ImageBuilder:Image":
                return new Image(name, <any>undefined, { urn })
            case "cloudformation:ImageBuilder:ImagePipeline":
                return new ImagePipeline(name, <any>undefined, { urn })
            case "cloudformation:ImageBuilder:ImageRecipe":
                return new ImageRecipe(name, <any>undefined, { urn })
            case "cloudformation:ImageBuilder:InfrastructureConfiguration":
                return new InfrastructureConfiguration(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudformation", "ImageBuilder", _module)
