// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./resolverEndpoint";
export * from "./resolverQueryLoggingConfig";
export * from "./resolverQueryLoggingConfigAssociation";
export * from "./resolverRule";
export * from "./resolverRuleAssociation";

// Import resources to register:
import { ResolverEndpoint } from "./resolverEndpoint";
import { ResolverQueryLoggingConfig } from "./resolverQueryLoggingConfig";
import { ResolverQueryLoggingConfigAssociation } from "./resolverQueryLoggingConfigAssociation";
import { ResolverRule } from "./resolverRule";
import { ResolverRuleAssociation } from "./resolverRuleAssociation";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudformation:Route53Resolver:ResolverEndpoint":
                return new ResolverEndpoint(name, <any>undefined, { urn })
            case "cloudformation:Route53Resolver:ResolverQueryLoggingConfig":
                return new ResolverQueryLoggingConfig(name, <any>undefined, { urn })
            case "cloudformation:Route53Resolver:ResolverQueryLoggingConfigAssociation":
                return new ResolverQueryLoggingConfigAssociation(name, <any>undefined, { urn })
            case "cloudformation:Route53Resolver:ResolverRule":
                return new ResolverRule(name, <any>undefined, { urn })
            case "cloudformation:Route53Resolver:ResolverRuleAssociation":
                return new ResolverRuleAssociation(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudformation", "Route53Resolver", _module)
