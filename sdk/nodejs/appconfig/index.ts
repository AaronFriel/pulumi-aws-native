// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./application";
export * from "./configurationProfile";
export * from "./deployment";
export * from "./deploymentStrategy";
export * from "./environment";
export * from "./hostedConfigurationVersion";

// Import resources to register:
import { Application } from "./application";
import { ConfigurationProfile } from "./configurationProfile";
import { Deployment } from "./deployment";
import { DeploymentStrategy } from "./deploymentStrategy";
import { Environment } from "./environment";
import { HostedConfigurationVersion } from "./hostedConfigurationVersion";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "cloudformation:AppConfig:Application":
                return new Application(name, <any>undefined, { urn })
            case "cloudformation:AppConfig:ConfigurationProfile":
                return new ConfigurationProfile(name, <any>undefined, { urn })
            case "cloudformation:AppConfig:Deployment":
                return new Deployment(name, <any>undefined, { urn })
            case "cloudformation:AppConfig:DeploymentStrategy":
                return new DeploymentStrategy(name, <any>undefined, { urn })
            case "cloudformation:AppConfig:Environment":
                return new Environment(name, <any>undefined, { urn })
            case "cloudformation:AppConfig:HostedConfigurationVersion":
                return new HostedConfigurationVersion(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("cloudformation", "AppConfig", _module)
